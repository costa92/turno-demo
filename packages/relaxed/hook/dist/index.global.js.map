{"version":3,"sources":["../../../../node_modules/.pnpm/@vue+shared@3.5.3/node_modules/@vue/shared/dist/shared.cjs.prod.js","../../../../node_modules/.pnpm/@vue+shared@3.5.3/node_modules/@vue/shared/dist/shared.cjs.js","../../../../node_modules/.pnpm/@vue+shared@3.5.3/node_modules/@vue/shared/index.js","../../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/generated/generated/decode-data-html.ts","../../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/generated/generated/decode-data-xml.ts","../../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/decode_codepoint.ts","../../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/decode.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/location.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parse-error/module-errors.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parse-error/to-node-description.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parse-error/standard-errors.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parse-error.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/estree.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/tokenizer/context.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/tokenizer/types.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/identifier.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/scope.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/flow/scope.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/base.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/comments.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/whitespace.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/tokenizer/state.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/babel-helper-string-parser/src/index.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/tokenizer/index.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/class-scope.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/expression-scope.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/util/production-parameter.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/util.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/node.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/flow/index.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/jsx/index.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/typescript/scope.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/lval.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/typescript/index.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/placeholders.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugins/v8intrinsic.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/plugin-utils.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/options.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/expression.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/statement.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/parser/index.ts","../../../../node_modules/.pnpm/@babel+parser@7.25.6/node_modules/@babel/parser/src/index.ts","../../../../node_modules/.pnpm/estree-walker@2.0.2/node_modules/estree-walker/dist/umd/estree-walker.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/base64.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/base64-vlq.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/util.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/array-set.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/mapping-list.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/source-map-generator.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/binary-search.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/quick-sort.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/source-map-consumer.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/lib/source-node.js","../../../../node_modules/.pnpm/source-map-js@1.2.0/node_modules/source-map-js/source-map.js","../../../../node_modules/.pnpm/@vue+compiler-core@3.5.3/node_modules/@vue/compiler-core/dist/compiler-core.cjs.prod.js","../../../../node_modules/.pnpm/@vue+compiler-core@3.5.3/node_modules/@vue/compiler-core/dist/compiler-core.cjs.js","../../../../node_modules/.pnpm/@vue+compiler-core@3.5.3/node_modules/@vue/compiler-core/index.js","../../../../node_modules/.pnpm/@vue+compiler-dom@3.5.3/node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.prod.js","../../../../node_modules/.pnpm/@vue+compiler-dom@3.5.3/node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","../../../../node_modules/.pnpm/@vue+compiler-dom@3.5.3/node_modules/@vue/compiler-dom/index.js","../../../../node_modules/.pnpm/@vue+reactivity@3.5.3/node_modules/@vue/reactivity/dist/reactivity.cjs.prod.js","../../../../node_modules/.pnpm/@vue+reactivity@3.5.3/node_modules/@vue/reactivity/dist/reactivity.cjs.js","../../../../node_modules/.pnpm/@vue+reactivity@3.5.3/node_modules/@vue/reactivity/index.js","../../../../node_modules/.pnpm/@vue+runtime-core@3.5.3/node_modules/@vue/runtime-core/dist/runtime-core.cjs.prod.js","../../../../node_modules/.pnpm/@vue+runtime-core@3.5.3/node_modules/@vue/runtime-core/dist/runtime-core.cjs.js","../../../../node_modules/.pnpm/@vue+runtime-core@3.5.3/node_modules/@vue/runtime-core/index.js","../../../../node_modules/.pnpm/@vue+runtime-dom@3.5.3/node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.prod.js","../../../../node_modules/.pnpm/@vue+runtime-dom@3.5.3/node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js","../../../../node_modules/.pnpm/@vue+runtime-dom@3.5.3/node_modules/@vue/runtime-dom/index.js","../../../../node_modules/.pnpm/vue@3.5.3_typescript@5.5.4/node_modules/vue/dist/vue.cjs.prod.js","../../../../node_modules/.pnpm/vue@3.5.3_typescript@5.5.4/node_modules/vue/dist/vue.cjs.js","../../../../node_modules/.pnpm/vue@3.5.3_typescript@5.5.4/node_modules/vue/index.js","../../../../node_modules/.pnpm/vue@3.5.3_typescript@5.5.4/node_modules/vue/index.mjs","../src/index.ts"],"sourcesContent":["/**\n* @vue/shared v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction makeMap(str, expectsLowerCase) {\n  const set = new Set(str.split(\",\"));\n  return expectsLowerCase ? (val) => set.has(val.toLowerCase()) : (val) => set.has(val);\n}\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter\n(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction(\n  (str) => {\n    return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n  }\n);\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction(\n  (str) => {\n    const s = str ? `on${capitalize(str)}` : ``;\n    return s;\n  }\n);\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, ...arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](...arg);\n  }\n};\nconst def = (obj, key, value, writable = false) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlags = {\n  \"TEXT\": 1,\n  \"1\": \"TEXT\",\n  \"CLASS\": 2,\n  \"2\": \"CLASS\",\n  \"STYLE\": 4,\n  \"4\": \"STYLE\",\n  \"PROPS\": 8,\n  \"8\": \"PROPS\",\n  \"FULL_PROPS\": 16,\n  \"16\": \"FULL_PROPS\",\n  \"NEED_HYDRATION\": 32,\n  \"32\": \"NEED_HYDRATION\",\n  \"STABLE_FRAGMENT\": 64,\n  \"64\": \"STABLE_FRAGMENT\",\n  \"KEYED_FRAGMENT\": 128,\n  \"128\": \"KEYED_FRAGMENT\",\n  \"UNKEYED_FRAGMENT\": 256,\n  \"256\": \"UNKEYED_FRAGMENT\",\n  \"NEED_PATCH\": 512,\n  \"512\": \"NEED_PATCH\",\n  \"DYNAMIC_SLOTS\": 1024,\n  \"1024\": \"DYNAMIC_SLOTS\",\n  \"DEV_ROOT_FRAGMENT\": 2048,\n  \"2048\": \"DEV_ROOT_FRAGMENT\",\n  \"CACHED\": -1,\n  \"-1\": \"CACHED\",\n  \"BAIL\": -2,\n  \"-2\": \"BAIL\"\n};\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `NEED_HYDRATION`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst ShapeFlags = {\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"FUNCTIONAL_COMPONENT\": 2,\n  \"2\": \"FUNCTIONAL_COMPONENT\",\n  \"STATEFUL_COMPONENT\": 4,\n  \"4\": \"STATEFUL_COMPONENT\",\n  \"TEXT_CHILDREN\": 8,\n  \"8\": \"TEXT_CHILDREN\",\n  \"ARRAY_CHILDREN\": 16,\n  \"16\": \"ARRAY_CHILDREN\",\n  \"SLOTS_CHILDREN\": 32,\n  \"32\": \"SLOTS_CHILDREN\",\n  \"TELEPORT\": 64,\n  \"64\": \"TELEPORT\",\n  \"SUSPENSE\": 128,\n  \"128\": \"SUSPENSE\",\n  \"COMPONENT_SHOULD_KEEP_ALIVE\": 256,\n  \"256\": \"COMPONENT_SHOULD_KEEP_ALIVE\",\n  \"COMPONENT_KEPT_ALIVE\": 512,\n  \"512\": \"COMPONENT_KEPT_ALIVE\",\n  \"COMPONENT\": 6,\n  \"6\": \"COMPONENT\"\n};\n\nconst SlotFlags = {\n  \"STABLE\": 1,\n  \"1\": \"STABLE\",\n  \"DYNAMIC\": 2,\n  \"2\": \"DYNAMIC\",\n  \"FORWARDED\": 3,\n  \"3\": \"FORWARDED\"\n};\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\nconst isGloballyWhitelisted = isGloballyAllowed;\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  start = Math.max(0, Math.min(start, source.length));\n  end = Math.max(0, Math.min(end, source.length));\n  if (start > end) return \"\";\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    if (isString(value) || typeof value === \"number\") {\n      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props) return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst MATH_TAGS = \"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\nfunction isRenderableAttrValue(value) {\n  if (value == null) {\n    return false;\n  }\n  const type = typeof value;\n  return type === \"string\" || type === \"number\" || type === \"boolean\";\n}\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\nconst cssVarNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g;\nfunction getEscapedCssVarName(key, doubleEscape) {\n  return key.replace(\n    cssVarNameEscapeSymbolsRE,\n    (s) => doubleEscape ? s === '\"' ? '\\\\\\\\\\\\\"' : `\\\\\\\\${s}` : `\\\\${s}`\n  );\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length) return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b) return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst isRef = (val) => {\n  return !!(val && val[\"__v_isRef\"] === true);\n};\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (isRef(val)) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val2], i) => {\n          entries[stringifySymbol(key, i) + \" =>\"] = val2;\n          return entries;\n        },\n        {}\n      )\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))\n    };\n  } else if (isSymbol(val)) {\n    return stringifySymbol(val);\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\nconst stringifySymbol = (v, i = \"\") => {\n  var _a;\n  return (\n    // Symbol.description in es2019+ so we need to cast here to pass\n    // the lib: es2016 check\n    isSymbol(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v\n  );\n};\n\nexports.EMPTY_ARR = EMPTY_ARR;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO = NO;\nexports.NOOP = NOOP;\nexports.PatchFlagNames = PatchFlagNames;\nexports.PatchFlags = PatchFlags;\nexports.ShapeFlags = ShapeFlags;\nexports.SlotFlags = SlotFlags;\nexports.camelize = camelize;\nexports.capitalize = capitalize;\nexports.cssVarNameEscapeSymbolsRE = cssVarNameEscapeSymbolsRE;\nexports.def = def;\nexports.escapeHtml = escapeHtml;\nexports.escapeHtmlComment = escapeHtmlComment;\nexports.extend = extend;\nexports.genPropsAccessExp = genPropsAccessExp;\nexports.generateCodeFrame = generateCodeFrame;\nexports.getEscapedCssVarName = getEscapedCssVarName;\nexports.getGlobalThis = getGlobalThis;\nexports.hasChanged = hasChanged;\nexports.hasOwn = hasOwn;\nexports.hyphenate = hyphenate;\nexports.includeBooleanAttr = includeBooleanAttr;\nexports.invokeArrayFns = invokeArrayFns;\nexports.isArray = isArray;\nexports.isBooleanAttr = isBooleanAttr;\nexports.isBuiltInDirective = isBuiltInDirective;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isGloballyAllowed = isGloballyAllowed;\nexports.isGloballyWhitelisted = isGloballyWhitelisted;\nexports.isHTMLTag = isHTMLTag;\nexports.isIntegerKey = isIntegerKey;\nexports.isKnownHtmlAttr = isKnownHtmlAttr;\nexports.isKnownSvgAttr = isKnownSvgAttr;\nexports.isMap = isMap;\nexports.isMathMLTag = isMathMLTag;\nexports.isModelListener = isModelListener;\nexports.isObject = isObject;\nexports.isOn = isOn;\nexports.isPlainObject = isPlainObject;\nexports.isPromise = isPromise;\nexports.isRegExp = isRegExp;\nexports.isRenderableAttrValue = isRenderableAttrValue;\nexports.isReservedProp = isReservedProp;\nexports.isSSRSafeAttrName = isSSRSafeAttrName;\nexports.isSVGTag = isSVGTag;\nexports.isSet = isSet;\nexports.isSpecialBooleanAttr = isSpecialBooleanAttr;\nexports.isString = isString;\nexports.isSymbol = isSymbol;\nexports.isVoidTag = isVoidTag;\nexports.looseEqual = looseEqual;\nexports.looseIndexOf = looseIndexOf;\nexports.looseToNumber = looseToNumber;\nexports.makeMap = makeMap;\nexports.normalizeClass = normalizeClass;\nexports.normalizeProps = normalizeProps;\nexports.normalizeStyle = normalizeStyle;\nexports.objectToString = objectToString;\nexports.parseStringStyle = parseStringStyle;\nexports.propsToAttrMap = propsToAttrMap;\nexports.remove = remove;\nexports.slotFlagsText = slotFlagsText;\nexports.stringifyStyle = stringifyStyle;\nexports.toDisplayString = toDisplayString;\nexports.toHandlerKey = toHandlerKey;\nexports.toNumber = toNumber;\nexports.toRawType = toRawType;\nexports.toTypeString = toTypeString;\n","/**\n* @vue/shared v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction makeMap(str, expectsLowerCase) {\n  const set = new Set(str.split(\",\"));\n  return expectsLowerCase ? (val) => set.has(val.toLowerCase()) : (val) => set.has(val);\n}\n\nconst EMPTY_OBJ = Object.freeze({}) ;\nconst EMPTY_ARR = Object.freeze([]) ;\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter\n(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction(\n  (str) => {\n    return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n  }\n);\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction(\n  (str) => {\n    const s = str ? `on${capitalize(str)}` : ``;\n    return s;\n  }\n);\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, ...arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](...arg);\n  }\n};\nconst def = (obj, key, value, writable = false) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlags = {\n  \"TEXT\": 1,\n  \"1\": \"TEXT\",\n  \"CLASS\": 2,\n  \"2\": \"CLASS\",\n  \"STYLE\": 4,\n  \"4\": \"STYLE\",\n  \"PROPS\": 8,\n  \"8\": \"PROPS\",\n  \"FULL_PROPS\": 16,\n  \"16\": \"FULL_PROPS\",\n  \"NEED_HYDRATION\": 32,\n  \"32\": \"NEED_HYDRATION\",\n  \"STABLE_FRAGMENT\": 64,\n  \"64\": \"STABLE_FRAGMENT\",\n  \"KEYED_FRAGMENT\": 128,\n  \"128\": \"KEYED_FRAGMENT\",\n  \"UNKEYED_FRAGMENT\": 256,\n  \"256\": \"UNKEYED_FRAGMENT\",\n  \"NEED_PATCH\": 512,\n  \"512\": \"NEED_PATCH\",\n  \"DYNAMIC_SLOTS\": 1024,\n  \"1024\": \"DYNAMIC_SLOTS\",\n  \"DEV_ROOT_FRAGMENT\": 2048,\n  \"2048\": \"DEV_ROOT_FRAGMENT\",\n  \"CACHED\": -1,\n  \"-1\": \"CACHED\",\n  \"BAIL\": -2,\n  \"-2\": \"BAIL\"\n};\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `NEED_HYDRATION`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst ShapeFlags = {\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"FUNCTIONAL_COMPONENT\": 2,\n  \"2\": \"FUNCTIONAL_COMPONENT\",\n  \"STATEFUL_COMPONENT\": 4,\n  \"4\": \"STATEFUL_COMPONENT\",\n  \"TEXT_CHILDREN\": 8,\n  \"8\": \"TEXT_CHILDREN\",\n  \"ARRAY_CHILDREN\": 16,\n  \"16\": \"ARRAY_CHILDREN\",\n  \"SLOTS_CHILDREN\": 32,\n  \"32\": \"SLOTS_CHILDREN\",\n  \"TELEPORT\": 64,\n  \"64\": \"TELEPORT\",\n  \"SUSPENSE\": 128,\n  \"128\": \"SUSPENSE\",\n  \"COMPONENT_SHOULD_KEEP_ALIVE\": 256,\n  \"256\": \"COMPONENT_SHOULD_KEEP_ALIVE\",\n  \"COMPONENT_KEPT_ALIVE\": 512,\n  \"512\": \"COMPONENT_KEPT_ALIVE\",\n  \"COMPONENT\": 6,\n  \"6\": \"COMPONENT\"\n};\n\nconst SlotFlags = {\n  \"STABLE\": 1,\n  \"1\": \"STABLE\",\n  \"DYNAMIC\": 2,\n  \"2\": \"DYNAMIC\",\n  \"FORWARDED\": 3,\n  \"3\": \"FORWARDED\"\n};\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\nconst isGloballyWhitelisted = isGloballyAllowed;\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  start = Math.max(0, Math.min(start, source.length));\n  end = Math.max(0, Math.min(end, source.length));\n  if (start > end) return \"\";\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    if (isString(value) || typeof value === \"number\") {\n      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props) return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst MATH_TAGS = \"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\nfunction isRenderableAttrValue(value) {\n  if (value == null) {\n    return false;\n  }\n  const type = typeof value;\n  return type === \"string\" || type === \"number\" || type === \"boolean\";\n}\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\nconst cssVarNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g;\nfunction getEscapedCssVarName(key, doubleEscape) {\n  return key.replace(\n    cssVarNameEscapeSymbolsRE,\n    (s) => doubleEscape ? s === '\"' ? '\\\\\\\\\\\\\"' : `\\\\\\\\${s}` : `\\\\${s}`\n  );\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length) return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b) return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst isRef = (val) => {\n  return !!(val && val[\"__v_isRef\"] === true);\n};\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (isRef(val)) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val2], i) => {\n          entries[stringifySymbol(key, i) + \" =>\"] = val2;\n          return entries;\n        },\n        {}\n      )\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))\n    };\n  } else if (isSymbol(val)) {\n    return stringifySymbol(val);\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\nconst stringifySymbol = (v, i = \"\") => {\n  var _a;\n  return (\n    // Symbol.description in es2019+ so we need to cast here to pass\n    // the lib: es2016 check\n    isSymbol(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v\n  );\n};\n\nexports.EMPTY_ARR = EMPTY_ARR;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO = NO;\nexports.NOOP = NOOP;\nexports.PatchFlagNames = PatchFlagNames;\nexports.PatchFlags = PatchFlags;\nexports.ShapeFlags = ShapeFlags;\nexports.SlotFlags = SlotFlags;\nexports.camelize = camelize;\nexports.capitalize = capitalize;\nexports.cssVarNameEscapeSymbolsRE = cssVarNameEscapeSymbolsRE;\nexports.def = def;\nexports.escapeHtml = escapeHtml;\nexports.escapeHtmlComment = escapeHtmlComment;\nexports.extend = extend;\nexports.genPropsAccessExp = genPropsAccessExp;\nexports.generateCodeFrame = generateCodeFrame;\nexports.getEscapedCssVarName = getEscapedCssVarName;\nexports.getGlobalThis = getGlobalThis;\nexports.hasChanged = hasChanged;\nexports.hasOwn = hasOwn;\nexports.hyphenate = hyphenate;\nexports.includeBooleanAttr = includeBooleanAttr;\nexports.invokeArrayFns = invokeArrayFns;\nexports.isArray = isArray;\nexports.isBooleanAttr = isBooleanAttr;\nexports.isBuiltInDirective = isBuiltInDirective;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isGloballyAllowed = isGloballyAllowed;\nexports.isGloballyWhitelisted = isGloballyWhitelisted;\nexports.isHTMLTag = isHTMLTag;\nexports.isIntegerKey = isIntegerKey;\nexports.isKnownHtmlAttr = isKnownHtmlAttr;\nexports.isKnownSvgAttr = isKnownSvgAttr;\nexports.isMap = isMap;\nexports.isMathMLTag = isMathMLTag;\nexports.isModelListener = isModelListener;\nexports.isObject = isObject;\nexports.isOn = isOn;\nexports.isPlainObject = isPlainObject;\nexports.isPromise = isPromise;\nexports.isRegExp = isRegExp;\nexports.isRenderableAttrValue = isRenderableAttrValue;\nexports.isReservedProp = isReservedProp;\nexports.isSSRSafeAttrName = isSSRSafeAttrName;\nexports.isSVGTag = isSVGTag;\nexports.isSet = isSet;\nexports.isSpecialBooleanAttr = isSpecialBooleanAttr;\nexports.isString = isString;\nexports.isSymbol = isSymbol;\nexports.isVoidTag = isVoidTag;\nexports.looseEqual = looseEqual;\nexports.looseIndexOf = looseIndexOf;\nexports.looseToNumber = looseToNumber;\nexports.makeMap = makeMap;\nexports.normalizeClass = normalizeClass;\nexports.normalizeProps = normalizeProps;\nexports.normalizeStyle = normalizeStyle;\nexports.objectToString = objectToString;\nexports.parseStringStyle = parseStringStyle;\nexports.propsToAttrMap = propsToAttrMap;\nexports.remove = remove;\nexports.slotFlagsText = slotFlagsText;\nexports.stringifyStyle = stringifyStyle;\nexports.toDisplayString = toDisplayString;\nexports.toHandlerKey = toHandlerKey;\nexports.toNumber = toNumber;\nexports.toRawType = toRawType;\nexports.toTypeString = toTypeString;\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/shared.cjs.prod.js')\n} else {\n  module.exports = require('./dist/shared.cjs.js')\n}\n",null,null,null,null,"export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\n\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n} satisfies ParseErrorTemplates;\n","const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = (node: NodeWithDescription) =>\n  node.type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[`${node.prefix}`]\n    : NodeDescriptions[node.type];\n\nexport default toNodeDescription;\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext:\n    \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"await using\" | \"const\" | \"destructuring\" | \"using\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace:\n    'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({ phase }: { phase: string }) =>\n    `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert:\n    \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid optional chaining in the left-hand side of ${toNodeDescription(\n      ancestor,\n    )}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault:\n    'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationExport: \"Using declaration cannot be exported.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n} satisfies ParseErrorTemplates;\n","import type { ParseErrorTemplates } from \"../parse-error\";\n\nexport default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n} satisfies ParseErrorTemplates;\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> =\n  T extends Set<infer M> ? M : unknown;\n\nexport type UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n} satisfies ParseErrorTemplates;\n","import { Position } from \"./util/location.ts\";\n\ntype SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\ntype ParseErrorCode =\n  | \"BABEL_PARSER_SYNTAX_ERROR\"\n  | \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (\n  loc: Position,\n  details: ErrorDetails,\n) => ParseError<ErrorDetails>;\n\ntype ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\ntype ParseErrorCredentials<ErrorDetails> = {\n  code: string;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nfunction defineHidden(obj: object, key: string, value: unknown) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value,\n  });\n}\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  code,\n  reasonCode,\n  syntaxPlugin,\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  const hasMissingPlugin =\n    reasonCode === \"MissingPlugin\" || reasonCode === \"MissingOneOfPlugins\";\n\n  if (!process.env.BABEL_8_BREAKING) {\n    const oldReasonCodes: Record<string, string> = {\n      AccessorCannotDeclareThisParameter: \"AccesorCannotDeclareThisParameter\",\n      AccessorCannotHaveTypeParameters: \"AccesorCannotHaveTypeParameters\",\n      ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n        \"ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference\",\n      SetAccessorCannotHaveOptionalParameter:\n        \"SetAccesorCannotHaveOptionalParameter\",\n      SetAccessorCannotHaveRestParameter: \"SetAccesorCannotHaveRestParameter\",\n      SetAccessorCannotHaveReturnType: \"SetAccesorCannotHaveReturnType\",\n    };\n    if (oldReasonCodes[reasonCode]) {\n      reasonCode = oldReasonCodes[reasonCode];\n    }\n  }\n\n  return function constructor(loc: Position, details: ErrorDetails) {\n    const error: ParseError<ErrorDetails> = new SyntaxError() as any;\n\n    error.code = code as ParseErrorCode;\n    error.reasonCode = reasonCode;\n    error.loc = loc;\n    error.pos = loc.index;\n\n    error.syntaxPlugin = syntaxPlugin;\n    if (hasMissingPlugin) {\n      error.missingPlugin = (details as any).missingPlugin;\n    }\n\n    type Overrides = {\n      loc?: Position;\n      details?: ErrorDetails;\n    };\n    defineHidden(error, \"clone\", function clone(overrides: Overrides = {}) {\n      const { line, column, index } = overrides.loc ?? loc;\n      return constructor(new Position(line, column, index), {\n        ...details,\n        ...overrides.details,\n      });\n    });\n\n    defineHidden(error, \"details\", details);\n\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get(this: ParseError<ErrorDetails>): string {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value: string) {\n        Object.defineProperty(this, \"message\", { value, writable: true });\n      },\n    });\n\n    return error;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any>; code?: ParseErrorCode };\n\nexport type ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : object\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : object\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : object\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : object\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: \"AN_ERROR_CODE\",\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n          ? { message: template }\n          : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nimport ModuleErrors from \"./parse-error/module-errors.ts\";\nimport StandardErrors from \"./parse-error/standard-errors.ts\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors.ts\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors.ts\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors.ts\";\n","import type { TokenType } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type * as N from \"../types.ts\";\nimport type { Node as NodeType, NodeBase, File } from \"../types.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { BindingFlag } from \"../util/scopeflags.ts\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) => {\n  if (object) {\n    defineProperty(object, key, { enumerable: false, value: object[key] });\n  }\n};\n\nfunction toESTreeLocation(node: any) {\n  toUnenumerable(node.loc.start, \"index\");\n  toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (_) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: bigint | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.EstreeLiteral>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as unknown as N.EstreeMethodDefinition).value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isPrivateName(node: N.Node): node is N.EstreePrivateIdentifier {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    getPrivateNameSV(node: N.EstreePrivateIdentifier): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node as unknown as N.PrivateName);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    nameIsConstructor(key: N.Expression | N.PrivateName): boolean {\n      if (key.type === \"Literal\") return key.value === \"constructor\";\n      return super.nameIsConstructor(key);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingFlag,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (\n        prop.type === \"Property\" &&\n        (prop.kind === \"get\" || prop.kind === \"set\")\n      ) {\n        this.raise(Errors.PatternHasAccessor, prop.key);\n      } else if (prop.type === \"Property\" && prop.method) {\n        this.raise(Errors.PatternHasMethod, prop.key);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node\n          .arguments[0] as N.Expression;\n        if (\n          this.hasPlugin(\"importAttributes\") ||\n          this.hasPlugin(\"importAssertions\")\n        ) {\n          (node as N.Node as N.EstreeImportExpression).options =\n            (node.arguments[1] as N.Expression) ?? null;\n          // compatibility with previous ESTree AST\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            (node.arguments[1] as N.Expression) ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      const node = super.parseSubscript(base, startLoc, noCalls, state);\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          // strip Optional prefix\n          (node as unknown as N.CallExpression | N.MemberExpression).type =\n            node.type.substring(8) as \"CallExpression\" | \"MemberExpression\";\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode<N.EstreeChainExpression>(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        // @ts-expect-error not in the type definitions\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    isOptionalMemberExpression(node: N.Node) {\n      if (node.type === \"ChainExpression\") {\n        return node.expression.type === \"MemberExpression\";\n      }\n      return super.isOptionalMemberExpression(node);\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isObjectProperty(node: N.Node): node is N.EstreeProperty {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isObjectMethod(node: N.Node): node is N.EstreeProperty {\n      return (\n        node.type === \"Property\" &&\n        (node.method || node.kind === \"get\" || node.kind === \"set\")\n      );\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n","// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","import { types as tc, type TokContext } from \"./context.ts\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _defer: createKeywordLike(\"defer\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _source: createKeywordLike(\"source\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","import * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","import { ScopeFlag, BindingFlag } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport type * as N from \"../types.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport const enum NameType {\n  // var-declared names in the current lexical scope\n  Var = 1 << 0,\n  // lexically-declared names in the current lexical scope\n  Lexical = 1 << 1,\n  // lexically-declared FunctionDeclaration names in the current lexical scope\n  Function = 1 << 2,\n}\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlag = 0;\n  names: Map<string, NameType> = new Map();\n  firstLexicalName = \"\";\n\n  constructor(flags: ScopeFlag) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & ScopeFlag.PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & ScopeFlag.CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & ScopeFlag.CLASS) > 0 && (flags & ScopeFlag.FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (ScopeFlag.VAR | ScopeFlag.CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlag): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlag) {\n    /*:: +createScope: (flags:ScopeFlag) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlag {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (ScopeFlag.FUNCTION | ScopeFlag.STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & ScopeFlag.PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    let scope = this.currentScope();\n    if (\n      bindingType & BindingFlag.SCOPE_LEXICAL ||\n      bindingType & BindingFlag.SCOPE_FUNCTION\n    ) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      let type = scope.names.get(name) || 0;\n\n      if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n        type = type | NameType.Function;\n      } else {\n        if (!scope.firstLexicalName) {\n          scope.firstLexicalName = name;\n        }\n        type = type | NameType.Lexical;\n      }\n\n      scope.names.set(name, type);\n\n      if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BindingFlag.SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.names.set(name, (scope.names.get(name) || 0) | NameType.Var);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & ScopeFlag.VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingFlag,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    if (!(bindingType & BindingFlag.KIND_VALUE)) return false;\n\n    if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n      return scope.names.has(name);\n    }\n\n    const type = scope.names.get(name);\n\n    if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n      return (\n        (type & NameType.Lexical) > 0 ||\n        (!this.treatFunctionsAsVarInScope(scope) && (type & NameType.Var) > 0)\n      );\n    }\n\n    return (\n      ((type & NameType.Lexical) > 0 &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & ScopeFlag.SIMPLE_CATCH &&\n          scope.firstLexicalName === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        (type & NameType.Function) > 0)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.names.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (\n        flags & (ScopeFlag.VAR | ScopeFlag.CLASS) &&\n        !(flags & ScopeFlag.ARROW)\n      ) {\n        return flags;\n      }\n    }\n  }\n}\n","import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { NameType, Scope } from \"../../util/scope.ts\";\nimport { BindingFlag, type ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlag): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (\n      bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN &&\n      !scope.declareFunctions.has(name)\n    ) {\n      const type = scope.names.get(name);\n      return (type & NameType.Function) > 0 || (type & NameType.Lexical) > 0;\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type { PluginsMap } from \"./index.ts\";\nimport type ScopeHandler from \"../util/scope.ts\";\nimport type ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport type ClassScopeHandler from \"../util/class-scope.ts\";\nimport type ProductionParameterHandler from \"../util/production-parameter.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings.ts\";\nimport type * as N from \"../types.ts\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n  // Comment store for Program.comments\n  declare comments: Array<N.Comment>;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n","/*:: declare var invariant; */\n\nimport BaseParser from \"./base.ts\";\nimport type { Comment, Node, Identifier } from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node.ts\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    const { commentsLen } = this.state;\n    if (this.comments.length !== commentsLen) {\n      this.comments.length = commentsLen;\n    }\n    this.comments.push(comment);\n    this.state.commentsLen++;\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *​/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *​/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *​/` as\n   * inner comments. So `/* 1 *​/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node leading comments, assuming that `node` is a\n   * single-token node. Used in import phase modifiers parsing. We parse\n   * `module` in `import module foo from ...` as an identifier but may\n   * reinterpret it into a phase modifier later. In this case the identifier is\n   * not part of the AST and we should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * import /* 1 *​/ module a from \"a\";\n   * ```\n   * the comment whitespace `/* 1 *​/` has trailing node Identifier(module). When\n   * we see that `module` is not a default import binding, we mark `/* 1 *​/` as\n   * inner comments of the ImportDeclaration. So `/* 1 *​/` should be detached from\n   * the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousIdentifierLeadingComments(node: Identifier) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n|[\\r\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport function hasNewLine(input: string, start: number, end: number): boolean {\n  for (let i = start; i < end; i++) {\n    if (isNewLine(input.charCodeAt(i))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location.ts\";\n\nimport { types as ct, type TokContext } from \"./context.ts\";\nimport { tt, type TokenType } from \"./types.ts\";\nimport type { Errors } from \"../parse-error.ts\";\nimport type { ParseError } from \"../parse-error.ts\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport const enum LoopLabelKind {\n  Loop = 1,\n  Switch = 2,\n}\n\ndeclare const bit: import(\"../../../../scripts/babel-plugin-bit-decorator/types.d.ts\").BitDecorator<State>;\n\nexport default class State {\n  @bit.storage flags: number;\n\n  @bit accessor strict = false;\n\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n          ? true\n          : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  @bit accessor maybeInArrowParameters = false;\n  @bit accessor inType = false;\n  @bit accessor noAnonFunctionType = false;\n  @bit accessor hasFlowComment = false;\n  @bit accessor isAmbientContext = false;\n  @bit accessor inAbstractClass = false;\n  @bit accessor inDisallowConditionalTypesContext = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  @bit accessor soloAwait = false;\n  @bit accessor inFSharpPipelineDirectBody = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: LoopLabelKind;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  commentsLen = 0;\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n\n  // Used to track whether a JSX element is allowed to form\n  @bit accessor canStartJSXElement = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  @bit accessor containsEsc = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  @bit accessor hasTopLevelAwait = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  /**\n   * When we add a new property, we must manually update the `clone` method\n   * @see State#clone\n   */\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(): State {\n    const state = new State();\n    state.flags = this.flags;\n    state.curLine = this.curLine;\n    state.lineStart = this.lineStart;\n    state.startLoc = this.startLoc;\n    state.endLoc = this.endLoc;\n    state.errors = this.errors.slice();\n    state.potentialArrowAt = this.potentialArrowAt;\n    state.noArrowAt = this.noArrowAt.slice();\n    state.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice();\n    state.topicContext = this.topicContext;\n    state.labels = this.labels.slice();\n    state.commentsLen = this.commentsLen;\n    state.commentStack = this.commentStack.slice();\n    state.pos = this.pos;\n    state.type = this.type;\n    state.value = this.value;\n    state.start = this.start;\n    state.end = this.end;\n    state.lastTokEndLoc = this.lastTokEndLoc;\n    state.lastTokStartLoc = this.lastTokStartLoc;\n    state.context = this.context.slice();\n    state.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos;\n    state.strictErrors = this.strictErrors;\n    state.tokensLength = this.tokensLength;\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n","// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = /^[0-7]+/.exec(input.slice(startPos, pos + 2));\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n          ? isAllowedNumericSeparatorSibling.oct\n          : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n","/*:: declare var invariant; */\n\nimport type { Options } from \"../options.ts\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments.ts\";\nimport type * as N from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier.ts\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types.ts\";\nimport type { TokContext } from \"./context.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n  skipWhiteSpaceInLine,\n} from \"../util/whitespace.ts\";\nimport State from \"./state.ts\";\nimport type { LookaheadState, DeferredStrictError } from \"./state.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { Node } from \"../types.ts\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings.ts\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.comments = [];\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  /**\n   * Similar to nextToken, but it will stop at line break when it is seen before the next token\n   *\n   * @returns {number} position of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  nextTokenInLineStart(): number {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n\n  nextTokenInLineStartSince(pos: number): number {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input)\n      ? skipWhiteSpaceInLine.lastIndex\n      : pos;\n  }\n\n  /**\n   * Similar to lookaheadCharCode, but it will return the char code of line break if it is\n   * seen before the next token\n   *\n   * @returns {number} char code of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  lookaheadInLineCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, at),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(\n        Errors.UnexpectedDigitAfterHash,\n        this.state.curPosition(),\n      );\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\"\n      ) {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          this.state.curPosition(),\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n            this.state.curPosition(),\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n            this.state.curPosition(),\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              this.state.curPosition(),\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              this.state.curPosition(),\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      Errors.InvalidOrUnexpectedToken,\n      this.state.curPosition(),\n      {\n        unexpected: String.fromCodePoint(code),\n      },\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(\n          Errors.UnterminatedRegExp,\n          createPositionWithColumnOffset(startLoc, 1),\n        );\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(\n          Errors.UnterminatedRegExp,\n          createPositionWithColumnOffset(startLoc, 1),\n        );\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, nextPos());\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, nextPos());\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(\n        Errors.InvalidDigit,\n        // Numeric literals can't have newlines, so this is safe to do.\n        createPositionWithColumnOffset(startLoc, 2),\n        {\n          radix,\n        },\n      );\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, startLoc);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, this.state.curPosition());\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, startLoc);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(\n            Errors.ZeroDigitNumericSeparator,\n            createPositionWithColumnOffset(startLoc, underscorePos),\n          );\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, startLoc);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, startLoc);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, startLoc);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        firstInvalidLoc.pos,\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(toParseError: DeferredStrictError, at: Position) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, at);\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, this.state.curPosition());\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, escStart);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, this.state.startLoc, {\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * The return type is marked as `never` for simplicity, as error recovery\n   * will create types in an invalid AST shape.\n   */\n  raise<ErrorDetails = object>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    at: Position | Undone<Node>,\n    details: ErrorDetails = {} as ErrorDetails,\n  ): ParseError<ErrorDetails> {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError(loc, details);\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    at: Position | Undone<Node>,\n    details: ErrorDetails = {} as ErrorDetails,\n  ): ParseError<ErrorDetails> | never {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return (errors[i] = toParseError(loc, details));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, at, details);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(\n      Errors.UnexpectedToken,\n      loc != null ? loc : this.state.startLoc,\n      {\n        expected: type ? tokenLabelName(type) : null,\n      },\n    );\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(\n      Errors.MissingPlugin,\n      loc != null ? loc : this.state.startLoc,\n      {\n        missingPlugin: [pluginName],\n      },\n    );\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, this.state.startLoc, {\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<object>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, buildPosition(pos, lineStart, curLine));\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, buildPosition(pos, lineStart, curLine), {\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(\n        Errors.StrictNumericEscape,\n        buildPosition(pos, lineStart, curLine),\n      );\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(\n        Errors.UnterminatedString, // Report the error at the string quote\n        buildPosition(pos - 1, lineStart, curLine),\n      );\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(\n        Errors.UnterminatedTemplate,\n        buildPosition(pos, lineStart, curLine),\n      );\n    },\n  };\n}\n","import { ClassElementType } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementType> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementType,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & ClassElementType.KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & ClassElementType.FLAG_STATIC;\n        const newStatic = elementType & ClassElementType.FLAG_STATIC;\n\n        const oldKind = accessor & ClassElementType.KIND_ACCESSOR;\n        const newKind = elementType & ClassElementType.KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n        identifierName: name,\n      });\n    }\n  }\n}\n","import { Errors, type ParseErrorConstructor } from \"../parse-error.ts\";\nimport type { Position } from \"./location.ts\";\nimport type { Node } from \"../types.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst enum ExpressionScopeType {\n  kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3,\n}\n\nclass ExpressionScope {\n  declare type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = ExpressionScopeType.kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration ||\n      this.type === ExpressionScopeType.kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === ExpressionScopeType.kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<object>, Position]> =\n    new Map();\n  constructor(\n    type:\n      | ExpressionScopeType.kMaybeArrowParameterDeclaration\n      | ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  ) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<object>,\n    at: Position,\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    node: Node,\n  ): void {\n    const origin = node.loc.start;\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == ExpressionScopeType.kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<object>,\n    node: Node,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = node.loc.start;\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError(at: Position): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (\n        scope.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration\n      ) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, at);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, loc);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(ExpressionScopeType.kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeArrowParameterDeclaration,\n  );\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  );\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport const enum ParamKind {\n  // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  // track [In] production parameter\n  PARAM_IN = 0b1000,\n}\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (\n    (isAsync ? ParamKind.PARAM_AWAIT : 0) |\n    (isGenerator ? ParamKind.PARAM_YIELD : 0)\n  );\n}\n","import type { Position } from \"../util/location.ts\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport Tokenizer from \"../tokenizer/index.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type {\n  EstreePropertyDefinition,\n  Node,\n  ObjectMethod,\n  ObjectProperty,\n  PrivateName,\n} from \"../types.d.ts\";\nimport { hasNewLine } from \"../util/whitespace.ts\";\nimport { isIdentifierChar } from \"../util/identifier.ts\";\nimport ClassScopeHandler from \"../util/class-scope.ts\";\nimport ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport { ScopeFlag } from \"../util/scopeflags.ts\";\nimport ProductionParameterHandler, {\n  ParamKind,\n} from \"../util/production-parameter.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type ScopeHandler from \"../util/scope.ts\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): new (...args: any) => ScopeHandler;\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    let { extra } = node;\n    if (extra == null) {\n      extra = {};\n      node.extra = extra;\n    }\n\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, this.state.startLoc);\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return hasNewLine(\n      this.input,\n      this.state.lastTokEndLoc.index,\n      this.state.start,\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return hasNewLine(this.input, this.state.end, this.nextTokenStart());\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, this.state.lastTokEndLoc);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    if (!this.eat(type)) {\n      this.unexpected(loc, type);\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        // eslint-disable-next-line @typescript-eslint/only-throw-error\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, doubleProtoLoc);\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): node is PrivateName {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: PrivateName): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): node is ObjectMethod {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = ParamKind.PARAM;\n    if (this.inModule) {\n      paramFlags |= ParamKind.PARAM_AWAIT;\n    }\n    this.scope.enter(ScopeFlag.PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n","import UtilParser from \"./util.ts\";\nimport { SourceLocation, type Position } from \"../util/location.ts\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types.ts\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: UtilParser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType = never>(): Undone<T> {\n    const loc = this.state.startLoc;\n    return new Node(this, loc.index, loc) as unknown as Undone<T>;\n  }\n\n  startNodeAt<T extends NodeType = never>(loc: Position): Undone<T> {\n    return new Node(this, loc.index, loc) as unknown as Undone<T>;\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType = never>(\n    type: Undone<NodeType>,\n  ): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    (node as T).type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n","/*:: declare var invariant; */\n\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier.ts\";\nimport FlowScopeHandler from \"./scope.ts\";\nimport { BindingFlag, ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(\n  node: Undone<N.ImportSpecifier | N.ImportDeclaration>,\n): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): new (...args: any) => FlowScopeHandler {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode<N.FlowPredicate>();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStartLoc.index > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, moduloLoc);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode<N.FlowFunctionTypeAnnotation>();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(\n              FlowErrors.NestedDeclareModule,\n              this.state.lastTokStartLoc,\n            );\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_VAR,\n        node.id.loc.start,\n      );\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(ScopeFlag.OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode<N.BlockStatement>());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n              this.state.lastTokStartLoc,\n            );\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, bodyElement);\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(\n            FlowErrors.UnsupportedDeclareExportKind,\n            this.state.startLoc,\n            {\n              unsupportedExportKind: label,\n              suggestion: exportSuggestions[label],\n            },\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.FlowDeclareExportDeclaration;\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(\n        node,\n      ) as unknown as N.FlowDeclareTypeAlias;\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(\n        node,\n        true,\n      ) as unknown as N.FlowDeclareOpaqueType;\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BindingFlag.TYPE_FUNCTION : BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode<N.FlowInterfaceExtends>();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(\n          FlowErrors.UnexpectedReservedUnderscore,\n          this.state.startLoc,\n        );\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        startLoc,\n        {\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, nodeStartLoc);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode<N.FlowObjectTypeAnnotation>();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            FlowErrors.UnexpectedExplicitInexactInObject,\n            inexactStartLoc,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              FlowErrors.InexactInsideNonObject,\n              this.state.lastTokStartLoc,\n            );\n          } else if (!allowInexact) {\n            this.raise(\n              FlowErrors.InexactInsideExact,\n              this.state.lastTokStartLoc,\n            );\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, variance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(\n            FlowErrors.UnexpectedSpreadType,\n            this.state.lastTokStartLoc,\n          );\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, variance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              FlowErrors.ThisParamBannedInConstructor,\n              node.value.this,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          property.value.this,\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          property,\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, property);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier | N.Identifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt<N.FlowGenericTypeAnnotation>(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode<N.FlowTypeofTypeAnnotation>();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode<N.FlowTupleTypeAnnotation>();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, node);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, node);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt<N.FlowFunctionTypeParam>(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowType>,\n      id: N.Identifier,\n    ): N.FlowType {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowType {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt: {\n          const node = this.startNode<N.FlowFunctionTypeAnnotation>();\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        case tt.parenL: {\n          const node = this.startNode<N.FlowFunctionTypeAnnotation>();\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              FlowErrors.UnexpectedSubtractionOperand,\n              this.state.startLoc,\n            );\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowType {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt<N.FlowOtherTypeAnnotation>(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowType {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt<N.FlowFunctionTypeAnnotation>(\n          param.loc.start,\n        );\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowType {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.TypeAnnotation {\n      const node = this.startNode<N.TypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.TypeCastExpression): N.Expression {\n      (node.expression as N.Identifier).typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt<N.ConditionalExpression>(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, state.startLoc);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (\n          node.type === \"ArrowFunctionExpression\" &&\n          node.body.type !== \"BlockStatement\"\n        ) {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.includes(node.start)) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n      node: T,\n      startLoc: Position,\n    ): T | N.TypeCastExpression | N.TsTypeCastExpression {\n      const newNode = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        (newNode as N.Identifier).optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TypeCastExpression>(startLoc);\n        typeCastNode.expression = newNode as N.Expression;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return newNode;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(\n      node: Undone<N.Node>,\n    ): node is Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration> {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        (\n          node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>\n        ).exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, startLoc);\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, member.value);\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, this.state.curPosition(), {\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left) as N.Assignable;\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList:\n        | ReadonlyArray<N.Expression | N.SpreadElement>\n        | ReadonlyArray<N.Expression | N.RestElement>,\n      isParenthesizedExpr?: boolean,\n    ):\n      | ReadonlyArray<N.Expression | N.SpreadElement>\n      | ReadonlyArray<N.Expression | N.RestElement> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, expr.typeAnnotation);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingFlag) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode<N.FlowClassImplements>();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, param);\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, param);\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue<T extends N.ObjectMember>(\n      prop: Undone<T>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): T {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        // @ts-expect-error: refine typings\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, param);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, param);\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, param);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, param);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, node.typeAnnotation);\n      }\n\n      return node;\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(\n          FlowErrors.ImportReflectionHasImportType,\n          node.specifiers[0].loc.start,\n        );\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        if (!isExport) return true;\n        const ch = this.lookaheadCharCode();\n        return ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        if (!phase && this.match(tt._default)) {\n          // TODO: Align with our TS AST and always add .exportKind\n          return;\n        }\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? phase : \"value\";\n      } else {\n        if (phase === \"type\" && this.match(tt.star)) this.unexpected();\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingFlag | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, specifier, {\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, specifier);\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse((abort: () => never) => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                typeParameters,\n              );\n            }\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n          typeParameters,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse<N.TypeAnnotation>(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params:\n        | Array<N.Expression | N.SpreadElement>\n        | Array<N.Expression | N.RestElement>,\n    ): void {\n      if (this.state.noArrowParamsConversionAt.includes(node.start)) {\n        node.params = params as N.ArrowFunctionExpression[\"params\"];\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.includes(node.start)\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, node.params[i]);\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && !this.state.noArrowAt.includes(this.state.start),\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.includes(startLoc.index)\n      ) {\n        this.next();\n\n        const node = this.startNodeAt<N.CallExpression>(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(\n          FlowErrors.UnterminatedFlowComment,\n          this.state.curPosition(),\n        );\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, this.state.startLoc);\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, loc, {\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n            ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n            : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        loc,\n        enumContext,\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      details: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, loc, details);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitialized(\n      node: N.Node,\n      details: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(\n        FlowErrors.EnumStringMemberInconsistentlyInitialized,\n        node,\n        details,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Identifier;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumBooleanMember\" }\n        >[];\n        numberMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumNumberMember\" }\n        >[];\n        stringMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumStringMember\" }\n        >[];\n        defaultedMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumDefaultedMember\" }\n        >[];\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode<N.FlowEnumMember>();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, id, {\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, id, {\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(\n          FlowErrors.EnumInvalidExplicitTypeUnknownSupplied,\n          this.state.startLoc,\n          {\n            enumName,\n          },\n        );\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, this.state.startLoc, {\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.FlowEnumBody>, id: N.Identifier): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, nameLoc, {\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(\n      node: Undone<N.FlowEnumDeclaration>,\n    ): N.FlowEnumDeclaration {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n","import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types.ts\";\nimport type { TokContext } from \"../../tokenizer/context.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { isNewLine } from \"../../util/whitespace.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXTag | null): object is N.JSXFragmentTag {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  // @ts-expect-error - object is 'never'\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(\n            JsxErrors.UnterminatedJsxContent,\n            this.state.startLoc,\n          );\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, this.state.curPosition(), {\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, this.state.startLoc);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) === charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode<N.JSXIdentifier>();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName | N.JSXIdentifier {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt<N.JSXNamespacedName>(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression =\n        this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt<N.JSXMemberExpression>(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue():\n      | N.JSXExpressionContainer\n      | N.JSXElement\n      | N.StringLiteral {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, node);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom() as N.JSXElement | N.StringLiteral;\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, this.state.startLoc);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              JsxErrors.UnexpectedSequenceExpression,\n              expression.expressions[1],\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute | N.JSXSpreadAttribute {\n      const node = this.startNode<N.JSXAttribute | N.JSXSpreadAttribute>();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startLoc: Position,\n    ): N.JSXOpeningElement | N.JSXOpeningFragment {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: (N.JSXAttribute | N.JSXSpreadAttribute)[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startLoc: Position,\n    ): N.JSXClosingElement | N.JSXClosingFragment {\n      const node = this.startNodeAt<N.JSXClosingFragment | N.JSXClosingElement>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement | N.JSXFragment {\n      const node = this.startNodeAt<N.JSXElement | N.JSXFragment>(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseLiteral(this.state.value, \"JSXText\"));\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, closingElement);\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(\n          JsxErrors.UnwrappedAdjacentJSXElements,\n          this.state.startLoc,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement | N.JSXFragment {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { NameType, Scope } from \"../../util/scope.ts\";\nimport { BindingFlag, ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\nimport { Errors } from \"../../parse-error.ts\";\n\nconst enum TsNameType {\n  Types = 1 << 0,\n  // enums (which are also in .types)\n  Enums = 1 << 1,\n  // const enums (which are also in .enums and .types)\n  ConstEnums = 1 << 2,\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  Classes = 1 << 3,\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  ExportOnlyBindings = 1 << 4,\n}\n\nclass TypeScriptScope extends Scope {\n  tsNames: Map<string, TsNameType> = new Map();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlag): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: ScopeFlag): void {\n    if (flags === ScopeFlag.TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags === ScopeFlag.TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    if (bindingType & BindingFlag.FLAG_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, loc, {\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    let type = scope.tsNames.get(name) || 0;\n\n    if (bindingType & BindingFlag.FLAG_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.tsNames.set(name, type | TsNameType.ExportOnlyBindings);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BindingFlag.KIND_TYPE) {\n      if (!(bindingType & BindingFlag.KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      type = type | TsNameType.Types;\n    }\n    if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n      type = type | TsNameType.Enums;\n    }\n    if (bindingType & BindingFlag.FLAG_TS_CONST_ENUM) {\n      type = type | TsNameType.ConstEnums;\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS) {\n      type = type | TsNameType.Classes;\n    }\n    if (type) scope.tsNames.set(name, type);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    const type = scope.tsNames.get(name);\n    if ((type & TsNameType.Enums) > 0) {\n      if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BindingFlag.FLAG_TS_CONST_ENUM);\n        const wasConst = (type & TsNameType.ConstEnums) > 0;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (\n      bindingType & BindingFlag.FLAG_CLASS &&\n      (type & TsNameType.Classes) > 0\n    ) {\n      if (scope.names.get(name) & NameType.Lexical) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BindingFlag.KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BindingFlag.KIND_TYPE && (type & TsNameType.Types) > 0) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      const type = scope.tsNames.get(name);\n      if (\n        (type & TsNameType.Types) > 0 ||\n        (type & TsNameType.ExportOnlyBindings) > 0\n      ) {\n        return;\n      }\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n","import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types.ts\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayPattern,\n  AssignmentProperty,\n  Assignable,\n} from \"../types.ts\";\nimport type { Pos, Position } from \"../util/location.ts\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier.ts\";\nimport { NodeUtils, type Undone } from \"./node.ts\";\nimport { BindingFlag } from \"../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"./util.ts\";\nimport { Errors, type LValAncestor } from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): void;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): asserts node is Assignable {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            node,\n          );\n        } else if (\n          parenthesized.type !== \"MemberExpression\" &&\n          !this.isOptionalMemberExpression(parenthesized)\n        ) {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, node);\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, node);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        (node as Node).type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            (prop as Node).type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, node.extra.trailingCommaLoc);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        (node as Node).type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, node.left.loc.end);\n        }\n\n        (node as Node).type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        prop.key,\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      (prop as Node).type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, prop);\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: (Expression | SpreadElement | RestElement)[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        (elt as unknown as RestElement).type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, elt);\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, trailingCommaLoc);\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList:\n      | ReadonlyArray<Expression | SpreadElement>\n      | ReadonlyArray<Expression | RestElement>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ):\n    | ReadonlyArray<Expression | SpreadElement>\n    | ReadonlyArray<Expression | RestElement> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList:\n      | ReadonlyArray<Expression | SpreadElement>\n      | ReadonlyArray<Expression | RestElement>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: (typeof charCodes)[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(\n          this.parseAssignableListItemTypes(this.parseRestBinding(), flags),\n        );\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, this.state.startLoc);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): AssignmentProperty | RestElement {\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(this.startNode());\n    }\n\n    const prop = this.startNode<AssignmentProperty>();\n    if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(\n    param: Pattern,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flags: ParseBindingListFlags,\n  ): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingFlag,\n  ): string | boolean | [string, boolean] {\n    switch (type) {\n      case \"AssignmentPattern\":\n        return \"left\";\n      case \"RestElement\":\n        return \"argument\";\n      case \"ObjectProperty\":\n        return \"value\";\n      case \"ParenthesizedExpression\":\n        return \"expression\";\n      case \"ArrayPattern\":\n        return \"elements\";\n      case \"ObjectPattern\":\n        return \"properties\";\n    }\n    return false;\n  }\n\n  // Overridden by the estree plugin\n  isOptionalMemberExpression(expression: Node): boolean {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param ancestor\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BindingFlag.TYPE_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression:\n      | Expression\n      | ObjectMember\n      | RestElement\n      | Pattern\n      | TSParameterProperty,\n    ancestor: LValAncestor,\n    binding: BindingFlag = BindingFlag.TYPE_NONE,\n    checkClashes: Set<string> | false = false,\n    strictModeChanged: boolean = false,\n    hasParenthesizedAncestor: boolean = false,\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    const isOptionalMemberExpression =\n      this.isOptionalMemberExpression(expression);\n\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, expression, {\n            ancestor,\n          });\n        }\n      }\n\n      if (binding !== BindingFlag.TYPE_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, expression);\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n\n      const { name } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, expression);\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BindingFlag.TYPE_NONE\n          ? Errors.InvalidLhs\n          : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, expression, { ancestor });\n      return;\n    }\n\n    let key: string, isParenthesizedExpression: boolean;\n    if (typeof validity === \"string\") {\n      key = validity;\n      isParenthesizedExpression = type === \"ParenthesizedExpression\";\n    } else {\n      [key, isParenthesizedExpression] = validity;\n    }\n\n    const nextAncestor =\n      type === \"ArrayPattern\" || type === \"ObjectPattern\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    const val = expression[key];\n    if (Array.isArray(val)) {\n      for (const child of val) {\n        if (child) {\n          this.checkLVal(\n            child,\n            nextAncestor,\n            binding,\n            checkClashes,\n            strictModeChanged,\n            isParenthesizedExpression,\n          );\n        }\n      }\n    } else if (val) {\n      this.checkLVal(\n        val,\n        nextAncestor,\n        binding,\n        checkClashes,\n        strictModeChanged,\n        isParenthesizedExpression,\n      );\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingFlag,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BindingFlag.TYPE_NONE) {\n        this.raise(Errors.StrictEvalArguments, at, { referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, at, {\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BindingFlag.FLAG_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, at);\n    }\n\n    if (!(bindingType & BindingFlag.TYPE_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingFlag) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, node);\n    }\n  }\n\n  checkCommaAfterRest(\n    close: (typeof charCodes)[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      this.state.startLoc,\n    );\n\n    return true;\n  }\n}\n","import type State from \"../../tokenizer/state.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../../util/location.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport { ScopeFlag, BindingFlag } from \"../../util/scopeflags.ts\";\nimport TypeScriptScopeHandler from \"./scope.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { ParamKind } from \"../../util/production-parameter.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\nimport type { Pattern } from \"../../types.ts\";\nimport type { Expression } from \"../../types.ts\";\nimport type { IJSXParserMixin } from \"../jsx/index.ts\";\nimport { ParseBindingListFlags } from \"../../parser/lval.ts\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  AccessorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccessorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccessorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccessorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccessorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): new (...args: any) => TypeScriptScopeHandler {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        this.match(tt.bracketL) ||\n        this.match(tt.braceL) ||\n        this.match(tt.star) ||\n        this.match(tt.ellipsis) ||\n        this.match(tt.privateName) ||\n        this.isLiteralPropertyName()\n      );\n    }\n\n    tsNextTokenOnSameLineAndCanFollowModifier() {\n      this.next();\n      if (this.hasPrecedingLineBreak()) {\n        return false;\n      }\n      return this.tsTokenCanFollowModifier();\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      if (this.match(tt._static)) {\n        this.next();\n        return this.tsTokenCanFollowModifier();\n      }\n      return this.tsNextTokenOnSameLineAndCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.includes(modifier)) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, loc, {\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, loc, {\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, startLoc, {\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, startLoc, { modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwn(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, startLoc, { modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, startLoc, {\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined {\n      const result: T[] = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStartLoc.index;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, this.state.startLoc);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      if (\n        this.hasPlugin(\"importAttributes\") ||\n        this.hasPlugin(\"importAssertions\")\n      ) {\n        node.options = null;\n      }\n      if (this.eat(tt.comma)) {\n        this.expectImportAttributesPlugin();\n        if (!this.match(tt.parenR)) {\n          node.options = super.parseMaybeAssignAllowIn();\n          this.eat(tt.comma);\n        }\n      }\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, node);\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      const list = super.parseBindingList(\n        tt.parenR,\n        charCodes.rightParenthesis,\n        ParseBindingListFlags.IS_FUNCTION_PARAMS,\n      );\n      for (const pattern of list) {\n        const { type } = pattern;\n        if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n          this.raise(TSErrors.UnsupportedSignatureParameterKind, pattern, {\n            type,\n          });\n        }\n      }\n      return list as Exclude<\n        (typeof list)[0],\n        N.AssignmentPattern | N.TSParameterProperty\n      >[];\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, node);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(\n            TSErrors.AccessorCannotHaveTypeParameters,\n            this.state.curPosition(),\n          );\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, this.state.curPosition());\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(\n                TSErrors.AccessorCannotDeclareThisParameter,\n                this.state.curPosition(),\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, this.state.curPosition());\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                TSErrors.AccessorCannotDeclareThisParameter,\n                this.state.curPosition(),\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                TSErrors.SetAccessorCannotHaveOptionalParameter,\n                this.state.curPosition(),\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                TSErrors.SetAccessorCannotHaveRestParameter,\n                this.state.curPosition(),\n              );\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(\n              TSErrors.SetAccessorCannotHaveReturnType,\n              method[returnTypeKey],\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      if (process.env.BABEL_8_BREAKING) {\n        node.key = this.tsParseTypeParameterName() as N.Identifier;\n        node.constraint = this.tsExpectThenParseType(tt._in);\n      } else {\n        const typeParameter = this.startNode<N.TsTypeParameter>();\n        typeParameter.name = this.tsParseTypeParameterName();\n        typeParameter.constraint = this.tsExpectThenParseType(tt._in);\n        // @ts-expect-error for Babel 7\n        node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      }\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, elementNode);\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const { startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const startLoc = this.state.startLoc;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(label);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(\n              TSErrors.TupleOptionalAfterType,\n              this.state.lastTokStartLoc,\n            );\n          }\n        } else {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, type);\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      switch (this.state.type) {\n        case tt.num:\n        case tt.bigint:\n        case tt.string:\n        case tt._true:\n        case tt._false:\n          // For compatibility to estree we cannot call parseLiteral directly here\n          // @ts-expect-error refine typings\n          node.literal = super.parseExprAtom();\n          break;\n        default:\n          this.unexpected();\n      }\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Expression {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                  ? \"TSNullKeyword\"\n                  : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: Undone<N.TsTypeOperator>) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, node);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n          ? this.tsParseInferType()\n          : this.tsInAllowConditionalTypesContext(() =>\n              this.tsParseArrayTypeOrHigher(),\n            );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeAnnotation();\n      }\n    }\n\n    tsTryParseType(): N.TsType | undefined {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          Errors.InvalidEscapedReservedWord,\n          this.state.lastTokStartLoc,\n          {\n            reservedWord: \"asserts\",\n          },\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, this.state.startLoc);\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, originalStartLoc, {\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, this.state.startLoc);\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      if (this.match(token)) {\n        return this.tsNextThenParseType();\n      }\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsInType(() => {\n        this.expect(token);\n        return this.tsParseType();\n      });\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsInType(() => {\n        this.next();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BindingFlag.TYPE_TS_CONST_ENUM : BindingFlag.TYPE_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(ScopeFlag.OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      maybeDefaultIdentifier?: N.Identifier | null,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = maybeDefaultIdentifier || this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_VALUE_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, moduleReference);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      }\n      this.state = state;\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let startType = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        startType = tt._var;\n        kind = \"let\";\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        switch (startType) {\n          case tt._function:\n            nany.declare = true;\n            return super.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* isHangingDeclaration */ false,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to know how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._enum:\n            return this.tsParseEnumDeclaration(nany, { declare: true });\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          case tt._const:\n          case tt._var:\n            if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n              nany.declare = true;\n              return this.parseVarStatement(\n                nany,\n                kind || this.state.value,\n                true,\n              );\n            }\n\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            return this.tsParseEnumDeclaration(nany, {\n              const: true,\n              declare: true,\n            });\n          case tt._interface: {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true,\n            });\n            if (result) return result;\n          }\n          // fallthrough\n          default:\n            if (tokenIsIdentifier(startType)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n                /* decorators */ null,\n              );\n            }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(ScopeFlag.TS_MODULE);\n            this.prodParam.enter(ParamKind.PARAM);\n            const mod = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined {\n      if (!this.match(tt.lt)) return;\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) return;\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression():\n      | N.TsTypeParameterInstantiation\n      | undefined {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, node);\n      } else if (!this.state.inType && this.curContext() === tc.brace) {\n        // rescan `>` when we are no longer in type context and JSX parsing context\n        // since it was tokenized when `inType` is `true`.\n        this.reScan_lt_gt();\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include modifiers in range\n      const startLoc = this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, startLoc);\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left, flags);\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, pp);\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty): boolean {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, param);\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n            ? \"TSDeclareMethod\"\n            : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, node);\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | N.SpreadElement>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, node.typeAnnotation);\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              this.state.startLoc,\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, this.state.startLoc, {\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(\n          TSErrors.ImportReflectionHasImportType,\n          node.specifiers[0].loc.start,\n        );\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        const ch = this.lookaheadCharCode();\n        return isExport\n          ? ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk\n          : ch !== charCodes.equalsTo;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? \"type\" : \"value\";\n      } else {\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      if (this.match(tt.string)) {\n        node.importKind = \"value\";\n        return super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      let importNode;\n      if (\n        tokenIsIdentifier(this.state.type) &&\n        this.lookaheadCharCode() === charCodes.equalsTo\n      ) {\n        node.importKind = \"value\";\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n        );\n      } else if (this.isContextual(tt._type)) {\n        const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n          node as Undone<N.ImportDeclaration>,\n          /* isExport */ false,\n        );\n        if (this.lookaheadCharCode() === charCodes.equalsTo) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        } else {\n          importNode = super.parseImportSpecifiersAndAfter(\n            node as Undone<N.ImportDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        }\n      } else {\n        importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, importNode);\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        const nodeImportEquals = node as Undone<N.TsImportEqualsDeclaration>;\n        let maybeDefaultIdentifier: N.Identifier | null = null;\n        if (\n          this.isContextual(tt._type) &&\n          // We pass false here, because we are parsing an `import ... =`\n          this.isPotentialImportPhase(/* isExport */ false)\n        ) {\n          maybeDefaultIdentifier = this.parseMaybeImportPhase(\n            nodeImportEquals,\n            /* isExport */ false,\n          );\n        } else {\n          nodeImportEquals.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          nodeImportEquals,\n          maybeDefaultIdentifier,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        this.sawUnambiguousESM = true;\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.ExportDefaultDeclaration[\"declaration\"] {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, init);\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            init,\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(\n              TSErrors.StaticBlockCannotHaveModifier,\n              this.state.curPosition(),\n            );\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, member);\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, member, {\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, member);\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, member);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, member);\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, member);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, methodOrProp);\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, methodOrProp);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n      node: T,\n      startLoc: Position,\n    ): T | N.TsTypeCastExpression {\n      const newNode = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        (newNode as N.Identifier).optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node as N.Expression;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n          this.state.startLoc,\n        );\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingFlag,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare\n          ? BindingFlag.TYPE_TS_AMBIENT\n          : BindingFlag.TYPE_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(\n          TSErrors.DeclareClassFieldHasInitializer,\n          this.state.startLoc,\n        );\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(\n          TSErrors.AbstractPropertyHasInitializer,\n          this.state.startLoc,\n          {\n            propertyName:\n              key.type === \"Identifier\" && !node.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          },\n        );\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, node);\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, node, {\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, node);\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, typeParameters);\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, method, { kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (\n        (node as N.Node).type === \"MethodDefinition\" &&\n        !Object.hasOwn(\n          (node as unknown as N.EstreeMethodDefinition).value,\n          \"body\",\n        )\n      ) {\n        return;\n      }\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue<T extends N.ObjectMember>(\n      prop: Undone<T>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): T {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      // We need to explicitly annotate 'abort' for microsoft/TypeScript#58170\n      const arrow = this.tryParse((abort: () => never) => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters\n              .params[0] as N.TsTypeParameter;\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(\n                TSErrors.SingleTypeParameterWithoutTrailingComma,\n                createPositionWithColumnOffset(parameter.loc.end, 1),\n                {\n                  typeParameterName: process.env.BABEL_8_BREAKING\n                    ? (parameter.name as N.Identifier).name\n                    : (parameter.name as string),\n                },\n              );\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, node);\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      }\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(\n      param: N.Pattern,\n      flags: ParseBindingListFlags,\n    ) {\n      if (!(flags & ParseBindingListFlags.IS_FUNCTION_PARAMS)) return param;\n\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              node,\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, node);\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left) as N.Assignable;\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(\n      node: N.ParenthesizedExpression,\n      isLHS: boolean,\n    ): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSInstantiationExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingFlag,\n    ) {\n      switch (type) {\n        // Allow \"typecasts\" to appear on the left of assignment expressions,\n        // because it may be in an arrow function.\n        // e.g. `const f = (foo: number = 0) => foo;`\n        case \"TSTypeCastExpression\":\n          return true;\n        case \"TSParameterProperty\":\n          return \"parameter\";\n        case \"TSNonNullExpression\":\n        case \"TSInstantiationExpression\":\n          return \"expression\";\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n          return (\n            (binding !== BindingFlag.TYPE_NONE || !isUnparenthesizedInAssign) &&\n            ([\"expression\", true] as [string, boolean])\n          );\n        default:\n          return super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      if (this.state.type === tt._this) {\n        return this.parseIdentifier(/* liberal */ true);\n      }\n      return super.parseBindingAtom();\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(\n            expr,\n          ) as N.CallExpression;\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: (typeof charCodes)[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      }\n      return super.checkCommaAfterRest(close);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, node.typeAnnotation);\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Expression {\n      (node.expression as N.Identifier).typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const { isAmbientContext: oldIsAmbientContext, strict: oldStrict } =\n        this.state;\n      this.state.isAmbientContext = true;\n      this.state.strict = false;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n        this.state.strict = oldStrict;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, node);\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, method, {\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingFlag | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport\n          ? BindingFlag.TYPE_TS_TYPE_IMPORT\n          : BindingFlag.TYPE_TS_VALUE_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          loc,\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier\n            ? BindingFlag.TYPE_TS_TYPE_IMPORT\n            : BindingFlag.TYPE_TS_VALUE_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  }\n  return (\n    expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\"\n  );\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n","import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type * as N from \"../types.ts\";\nimport { ParseErrorEnum } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type { BindingFlag } from \"../util/scopeflags.ts\";\nimport type { Position } from \"../util/location.ts\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode<N.Placeholder<T>>();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: Undone<N.Placeholder> | Undone<NodeOf<PlaceholderTypes>>,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      let placeholder = node as unknown as N.Placeholder<T>;\n\n      if (!placeholder.expectedNode || !placeholder.type) {\n        placeholder = this.finishNode(\n          placeholder,\n          \"Placeholder\",\n        ) as unknown as N.Placeholder<T>;\n      }\n\n      placeholder.expectedNode = expectedNode;\n      return placeholder as unknown as MaybePlaceholder<T>;\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingFlag) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: MaybePlaceholder<\"Expression\">,\n    ): MaybePlaceholder<\"Statement\"> {\n      // @ts-expect-error placeholder typings\n      if (expr.type !== \"Placeholder\" || expr.extra?.parenthesized) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      const stmtPlaceholder = node as unknown as N.Placeholder<\"Statement\">;\n      stmtPlaceholder.name = (expr as N.Placeholder).name;\n      return this.finishPlaceholder(stmtPlaceholder, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(\n            PlaceholderErrors.ClassNameIsRequired,\n            this.state.startLoc,\n          );\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node2.specifiers = [];\n        node2.source = null;\n        node2.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node2, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode<N.ExportDefaultSpecifier>();\n      specifier.exported = placeholder;\n      node2.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node2, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      maybeDefaultIdentifier: N.Identifier | null,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      if ((node as N.ExportNamedDeclaration).specifiers?.length) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(\n        node,\n        maybeDefaultIdentifier,\n      );\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, this.state.lastTokEndLoc);\n      }\n    }\n  };\n","import type Parser from \"../parser/index.ts\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n","import type Parser from \"./parser/index.ts\";\nimport type { PluginConfig } from \"./typings.ts\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (\n  superClass: new (...args: any) => Parser,\n) => new (...args: any) => Parser;\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\n\nexport function validatePlugins(pluginsMap: Map<string, any>) {\n  if (pluginsMap.has(\"decorators\")) {\n    if (pluginsMap.has(\"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport =\n      pluginsMap.get(\"decorators\").decoratorsBeforeExport;\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized =\n      pluginsMap.get(\"decorators\").allowCallParenthesized;\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (pluginsMap.has(\"flow\") && pluginsMap.has(\"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (pluginsMap.has(\"placeholders\") && pluginsMap.has(\"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (pluginsMap.has(\"pipelineOperator\")) {\n    const proposal = pluginsMap.get(\"pipelineOperator\").proposal;\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = process.env.BABEL_8_BREAKING\n      ? pluginsMap.has(\"recordAndTuple\")\n      : pluginsMap.get(\"recordAndTuple\")?.syntaxType === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (pluginsMap.has(\"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (pluginsMap.has(\"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = pluginsMap.get(\"pipelineOperator\").topicToken;\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"smart\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n      );\n    }\n  }\n\n  if (pluginsMap.has(\"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAttributes` parser plugin, or `@babel/plugin-syntax-import-attributes`.\",\n      );\n    } else {\n      if (\n        pluginsMap.has(\"importAttributes\") ||\n        pluginsMap.has(\"importAssertions\")\n      ) {\n        throw new Error(\n          \"Cannot combine importAssertions, importAttributes and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption =\n        pluginsMap.get(\"moduleAttributes\").version;\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n  if (\n    pluginsMap.has(\"importAttributes\") &&\n    pluginsMap.has(\"importAssertions\")\n  ) {\n    throw new Error(\n      \"Cannot combine importAssertions and importAttributes plugins.\",\n    );\n  }\n\n  if (pluginsMap.has(\"recordAndTuple\")) {\n    const syntaxType = pluginsMap.get(\"recordAndTuple\").syntaxType;\n    if (syntaxType != null) {\n      if (process.env.BABEL_8_BREAKING) {\n        if (syntaxType === \"hash\") {\n          throw new Error(\n            'The syntaxType option is no longer required in Babel 8. You can safely remove { syntaxType: \"hash\" } from the recordAndTuple config.',\n          );\n        } else {\n          throw new Error(\n            'The syntaxType option is no longer required in Babel 8. Please remove { syntaxType: \"bar\" } from the recordAndTuple config and migrate to the hash syntax #{} and #[].',\n          );\n        }\n      } else {\n        const RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n        if (!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(syntaxType)) {\n          throw new Error(\n            \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n              RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n          );\n        }\n      }\n    }\n  }\n\n  if (\n    pluginsMap.has(\"asyncDoExpressions\") &&\n    !pluginsMap.has(\"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n\n  if (\n    pluginsMap.has(\"optionalChainingAssign\") &&\n    pluginsMap.get(\"optionalChainingAssign\").version !== \"2023-07\"\n  ) {\n    throw new Error(\n      \"The 'optionalChainingAssign' plugin requires a 'version' option,\" +\n        \" representing the last proposal update. Currently, the\" +\n        \" only supported value is '2023-07'.\",\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree.ts\";\nimport flow from \"./plugins/flow/index.ts\";\nimport jsx from \"./plugins/jsx/index.ts\";\nimport typescript from \"./plugins/typescript/index.ts\";\nimport placeholders from \"./plugins/placeholders.ts\";\nimport v8intrinsic from \"./plugins/v8intrinsic.ts\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n","import type { PluginList } from \"./plugin-utils.ts\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport interface Options {\n  sourceType?: SourceType;\n  sourceFilename?: string;\n  startColumn?: number;\n  startLine?: number;\n  allowAwaitOutsideFunction?: boolean;\n  allowReturnOutsideFunction?: boolean;\n  allowNewTargetOutsideFunction?: boolean;\n  allowImportExportEverywhere?: boolean;\n  allowSuperOutsideMethod?: boolean;\n  allowUndeclaredExports?: boolean;\n  plugins?: PluginList;\n  strictMode?: boolean | undefined | null;\n  ranges?: boolean;\n  tokens?: boolean;\n  createImportExpressions?: boolean;\n  createParenthesizedExpressions?: boolean;\n  errorRecovery?: boolean;\n  attachComment?: boolean;\n  annexB?: boolean;\n}\n\ntype OptionsWithDefaults = { [P in keyof Options]-?: Options[P] };\n\nexport const defaultOptions: OptionsWithDefaults = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, new.target outside a function or class is not\n  // considered an error.\n  allowNewTargetOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ImportExpression AST nodes (if false\n  // `import(foo)` will be parsed as CallExpression(Import, [Identifier(foo)])\n  createImportExpressions: process.env.BABEL_8_BREAKING ? true : false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n  // When enabled, the parser will support Annex B syntax.\n  // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n  annexB: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): OptionsWithDefaults {\n  if (opts == null) {\n    return { ...defaultOptions };\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions) as (keyof Options)[]) {\n    options[key] = opts[key] ?? defaultOptions[key];\n  }\n  return options;\n}\n","// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport LValParser from \"./lval.ts\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier.ts\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport * as charCodes from \"charcodes\";\nimport { ScopeFlag, BindingFlag } from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.ts\";\nimport { Errors, type ParseError } from \"../parse-error.ts\";\nimport {\n  UnparenthesizedPipeBodyDescriptions,\n  type UnparenthesizedPipeBodyTypes,\n} from \"../parse-error/pipeline-operator-errors.ts\";\nimport { setInnerComments } from \"./comments.ts\";\nimport { cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type { SourceType } from \"../options.ts\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key as\n      | N.Identifier\n      | N.StringLiteral\n      | N.NumericLiteral\n      | N.BigIntLiteral;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, key);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, key);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(\n    expr: N.Expression | N.PrivateName,\n    potentialArrowAt: number,\n  ): expr is N.ArrowFunctionExpression {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression() as N.Expression & N.ParserOutput;\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt<N.SequenceExpression>(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left as unknown as N.Assignable; // checked a few lines further down\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, this.finishNode(node, \"AssignmentExpression\"));\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt<N.ConditionalExpression>(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, left, {\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            // PrivateName must be followed by `in`, but we have `|>`\n            return left as N.Expression;\n          }\n          this.checkPipelineAtInfixOperator(left as N.Expression, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(\n              Errors.UnexpectedAwaitAfterPipelineBody,\n              this.state.startLoc,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(\n            Errors.MixingCoalesceWithLogical,\n            this.state.startLoc,\n          );\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    // PrivateName is followed by `in` and handled by the previous if statement\n    return left as N.Expression;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, this.state.startLoc);\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, startLoc, {\n        type: body.type as UnparenthesizedPipeBodyTypes,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, startLoc);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, node.argument);\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.recordAwaitIfAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, node);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, node);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, startLoc);\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(\n        updateExpressionNode.argument,\n        this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      );\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, (expr = this.finishNode(node, \"UpdateExpression\")));\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, this.state.startLoc);\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, startLoc);\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt<N.BindExpression>(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, startLoc);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  expectImportAttributesPlugin() {\n    if (!this.hasPlugin(\"importAssertions\")) {\n      this.expectPlugin(\"importAttributes\");\n    }\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectImportAttributesPlugin();\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectImportAttributesPlugin();\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, node, {\n          maxArgumentCount:\n            this.hasPlugin(\"importAttributes\") ||\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, arg);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAttributes\") &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              Errors.ImportCallArgumentTrailingComma,\n              this.state.lastTokStartLoc,\n            );\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import | N.ImportExpression>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (this.match(tt.parenL)) {\n          if (this.options.createImportExpressions) {\n            return this.parseImportCall(node as Undone<N.ImportExpression>);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, this.state.lastTokStartLoc);\n          return this.finishNode(node, \"Import\");\n        }\n\n      case tt._this:\n        node = this.startNode<N.ThisExpression>();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            this.startNode<N.ClassExpression>(),\n          ),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode<N.BindExpression>();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, callee);\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, this.state.startLoc, {\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName() as unknown as N.Expression;\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadInLineCharCode() === charCodes.leftCurlyBrace\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference<\n    T extends N.PipelinePrimaryTopicReference | N.TopicReference,\n  >(\n    node: Undone<T>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): T {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          startLoc,\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, startLoc, {\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, startLoc);\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, this.state.curPosition());\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(ParamKind.PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, node);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, node);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, node);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, node.property, {\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(\n    this: Parser,\n    node: Undone<N.MetaProperty | N.ImportExpression>,\n  ): N.MetaProperty | N.ImportExpression {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, id);\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(tt._source) || this.isContextual(tt._defer)) {\n      const isSource = this.isContextual(tt._source);\n\n      // TODO: The proposal doesn't mention import.defer yet because it was\n      // pending on a decision for import.source. Wait to enable it until it's\n      // included in the proposal.\n      if (!isSource) this.unexpected();\n\n      this.expectPlugin(\n        isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\",\n      );\n      if (!this.options.createImportExpressions) {\n        throw this.raise(\n          Errors.DynamicImportPhaseRequiresImportExpressions,\n          this.state.startLoc,\n          {\n            phase: this.state.value,\n          },\n        );\n      }\n      this.next();\n      (node as Undone<N.ImportExpression>).phase = isSource\n        ? \"source\"\n        : \"defer\";\n      return this.parseImportCall(node as Undone<N.ImportExpression>);\n    }\n\n    return this.parseMetaProperty(node as Undone<N.MetaProperty>, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.startNode<N.RegExpLiteral>();\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    this.next();\n    return this.finishNode(node, \"RegExpLiteral\");\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: (N.Expression | N.RestElement)[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList as N.Expression[];\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n    node: T,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): T | N.TypeCastExpression | N.TsTypeCastExpression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !this.options.allowNewTargetOutsideFunction\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, metaProp);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    const isImport = this.match(tt._import);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (\n      isImport &&\n      (callee.type === \"Import\" || callee.type === \"ImportExpression\")\n    ) {\n      this.raise(Errors.ImportCallNotNewExpression, callee);\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(\n          Errors.InvalidEscapeSequenceTemplate,\n          // FIXME: Adding 1 is probably wrong.\n          createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        );\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    let curElt = this.parseTemplateElement(isTagged);\n    const quasis = [curElt];\n    const substitutions = [];\n    while (!curElt.tail) {\n      substitutions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    // Type cast from (N.Expression[] | N.TsType[]). parseTemplateSubstitution\n    // returns consistent results.\n    node.expressions = substitutions as N.Expression[] | N.TsType[];\n    node.quasis = quasis;\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression | N.TsType {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, prop);\n      }\n\n      if (!process.env.BABEL_8_BREAKING) {\n        // @ts-expect-error shorthand may not index prop\n        if (prop.shorthand) {\n          this.addExtra(prop, \"shorthand\", true);\n        }\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStartLoc.index);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(\n    prop: Undone<N.ObjectProperty>,\n  ): prop is typeof prop & { key: N.Identifier } {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, this.state.startLoc);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const { key } = prop;\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, this.state.curPosition(), {\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        method,\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, method);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue<T extends N.ObjectMember>(\n    this: Parser,\n    prop: Undone<T>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    const node = (this.parseObjectMethod(\n      prop as Undone<N.ObjectMethod>,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n    ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      )) as T;\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      ScopeFlag.FUNCTION |\n        ScopeFlag.SUPER |\n        (inClassScope ? ScopeFlag.CLASS : 0) |\n        (allowDirectSuper ? ScopeFlag.DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params:\n      | Array<N.Expression | N.SpreadElement>\n      | Array<N.Expression | N.RestElement>,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= ParamKind.PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params:\n      | Array<N.Expression | N.SpreadElement>\n      | Array<N.Expression | N.RestElement>,\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        this.prodParam.currentFlags() | ParamKind.PARAM_RETURN,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(\n              Errors.IllegalLanguageModeDirective,\n              // @ts-expect-error kind may not index node\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                ? // @ts-expect-error node.key has been guarded\n                  node.key.loc.end\n                : node,\n            );\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(\n              node.id,\n              BindingFlag.TYPE_OUTSIDE,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty): boolean {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        formalParameters,\n        BindingFlag.TYPE_VAR,\n        checkClashes,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | N.SpreadElement | N.ArgumentPlaceholder | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, this.state.curPosition(), {\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, this.state.startLoc);\n      }\n      const node = this.startNode<N.ArgumentPlaceholder>();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, startLoc, {\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n        ? isStrictBindReservedWord\n        : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, startLoc, {\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, startLoc);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, startLoc);\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, startLoc);\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError(startLoc);\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, startLoc);\n        return;\n      }\n    }\n  }\n\n  // Returns wether `await` is allowed or not in this context, and if it is\n  // keeps track of it to determine whether a module uses top-level await.\n  recordAwaitIfAllowed(): boolean {\n    const isAwaitAllowed =\n      this.prodParam.hasAwait ||\n      (this.options.allowAwaitOutsideFunction && !this.scope.inFunction);\n\n    if (isAwaitAllowed && !this.scope.inFunction) {\n      this.state.hasTopLevelAwait = true;\n    }\n\n    return isAwaitAllowed;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, node);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportCall\n  parseImportCall(\n    this: Parser,\n    node: Undone<N.ImportExpression>,\n  ): N.ImportExpression {\n    this.next(); // eat tt.parenL\n    node.source = this.parseMaybeAssignAllowIn();\n    if (\n      this.hasPlugin(\"importAttributes\") ||\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      node.options = null;\n    }\n    if (this.eat(tt.comma)) {\n      this.expectImportAttributesPlugin();\n      if (!this.match(tt.parenR)) {\n        node.options = this.parseMaybeAssignAllowIn();\n        this.eat(tt.comma);\n      }\n    }\n    this.expect(tt.parenR);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, leftStartLoc);\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, this.state.startLoc);\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, startLoc);\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = ParamKind.PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = ParamKind.PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n","import type * as N from \"../types.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types.ts\";\nimport ExpressionParser from \"./expression.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier.ts\";\nimport * as charCodes from \"charcodes\";\nimport {\n  ScopeFlag,\n  ClassElementType,\n  BindingFlag,\n} from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope.ts\";\nimport type { SourceType } from \"../options.ts\";\nimport { Token } from \"../tokenizer/index.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../util/location.ts\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\nimport { ParseBindingListFlags } from \"./lval.ts\";\nimport { LoopLabelKind } from \"../tokenizer/state.ts\";\n\nconst loopLabel = { kind: LoopLabelKind.Loop } as const,\n  switchLabel = { kind: LoopLabelKind.Switch } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(\n    this: Parser,\n    file: Undone<N.File>,\n    program: Undone<N.Program>,\n  ): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule) {\n      if (\n        !this.options.allowUndeclaredExports &&\n        this.scope.undefinedExports.size > 0\n      ) {\n        for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n          this.raise(Errors.ModuleExportUndefined, at, { localName });\n        }\n      }\n      this.addExtra(program, \"topLevelAwait\", this.state.hasTopLevelAwait);\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration in the same line so that it should be interpreted as\n   * a keyword.\n   */\n  hasInLineFollowingBindingIdentifierOrBrace(): boolean {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      nextCh === charCodes.leftCurlyBrace ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  startsUsingForOf(): boolean {\n    const { type, containsEsc } = this.lookahead();\n    if (type === tt._of && !containsEsc) {\n      // `using of` must start a for-lhs-of statement\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n\n  startsAwaitUsing(): boolean {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const startType = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (startType) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n                ? Errors.SloppyFunctionAnnexB\n                : Errors.SloppyFunction,\n            this.state.startLoc,\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._await:\n        // [+Await] await [no LineTerminator here] using [no LineTerminator here] BindingList[+Using]\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.recordAwaitIfAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, node);\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, node);\n          }\n          this.next(); // eat 'await'\n          return this.parseVarStatement(\n            node as Undone<N.VariableDeclaration>,\n            \"await using\",\n          );\n        }\n        break;\n      case tt._using:\n        // using [no LineTerminator here] BindingList[+Using]\n        if (\n          this.state.containsEsc ||\n          !this.hasInLineFollowingBindingIdentifierOrBrace()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, this.state.startLoc);\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, this.state.startLoc);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (startType === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n            decorators,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(\n              Errors.AsyncFunctionInSingleStatementContext,\n              this.state.startLoc,\n            );\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(startType) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, node);\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(\n            Errors.DecoratorsBeforeAfterExport,\n            classNode.decorators[0],\n          );\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, this.state.startLoc);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, this.state.startLoc);\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(\n            Errors.DecoratorArgumentsOutsideParentheses,\n            paramsStartLoc,\n          );\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt<N.MemberExpression>(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode<N.CallExpression>(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === LoopLabelKind.Loop)) {\n          break;\n        }\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, node, { type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isContextual(tt._await) && this.recordAwaitIfAllowed()) {\n      awaitAt = this.state.startLoc;\n      this.next();\n    }\n    this.scope.enter(ScopeFlag.OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    {\n      const startsWithAwaitUsing =\n        this.isContextual(tt._await) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration =\n        startsWithAwaitUsing ||\n        (this.isContextual(tt._using) && this.startsUsingForOf());\n      const isLetOrUsing =\n        (startsWithLet && this.hasFollowingBindingAtom()) ||\n        starsWithUsingDeclaration;\n\n      if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n        const initNode = this.startNode<N.VariableDeclaration>();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.recordAwaitIfAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, this.state.startLoc);\n          }\n          this.next(); // eat 'await'\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n        const isForIn = this.match(tt._in);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, init);\n        }\n        if (\n          (isForIn || this.isContextual(tt._of)) &&\n          init.declarations.length === 1\n        ) {\n          return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node as Undone<N.ForStatement>, init);\n      }\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, init);\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, init);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { type });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, this.state.startLoc);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(ScopeFlag.OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode<N.SwitchCase>()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              Errors.MultipleDefaultsInSwitch,\n              this.state.lastTokStartLoc,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, this.state.lastTokEndLoc);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? ScopeFlag.SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(\n      param,\n      { type: \"CatchClause\" },\n      BindingFlag.TYPE_CATCH_PARAM,\n    );\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(ScopeFlag.OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, node);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, this.state.startLoc);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, expr, {\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? LoopLabelKind.Loop\n      : this.match(tt._switch)\n        ? LoopLabelKind.Switch\n        : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(ScopeFlag.OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    afterBlockParse?.call(this, hasStrictModeDirective);\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, init, {\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, init, {\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(\n            Errors.DeclarationMissingInitializer,\n            this.state.lastTokEndLoc,\n            {\n              kind: \"destructuring\",\n            },\n          );\n        } else if (\n          (kind === \"const\" || kind === \"using\" || kind === \"await using\") &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(\n            Errors.DeclarationMissingInitializer,\n            this.state.lastTokEndLoc,\n            { kind },\n          );\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  ): void {\n    const id = this.parseBindingAtom();\n    if (kind === \"using\" || kind === \"await using\") {\n      if (id.type === \"ArrayPattern\" || id.type === \"ObjectPattern\") {\n        this.raise(Errors.UsingDeclarationHasBindingPattern, id.loc.start);\n      }\n    }\n    this.checkLVal(\n      id,\n      { type: \"VariableDeclarator\" },\n      kind === \"var\" ? BindingFlag.TYPE_VAR : BindingFlag.TYPE_LEXICAL,\n    );\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(\n          Errors.GeneratorInSingleStatementContext,\n          this.state.startLoc,\n        );\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(ScopeFlag.FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BindingFlag.TYPE_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BindingFlag.TYPE_VAR\n          : BindingFlag.TYPE_LEXICAL\n        : BindingFlag.TYPE_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  nameIsConstructor(key: N.Expression | N.PrivateName): boolean {\n    return (\n      (key.type === \"Identifier\" && key.name === \"constructor\") ||\n      (key.type === \"StringLiteral\" && key.value === \"constructor\")\n    );\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed && !method.static && this.nameIsConstructor(method.key)\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(\n              Errors.DecoratorSemicolon,\n              this.state.lastTokEndLoc,\n            );\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, member);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, this.state.startLoc);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, publicMethod.key);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      !this.state.containsEsc && tokenIsIdentifier(this.state.type);\n    const key = this.parseClassElementName(member);\n    const maybeContextualKw = isContextual ? (key as N.Identifier).name : null;\n    const isPrivate = this.isPrivateName(key);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, key);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, key);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (maybeContextualKw === \"async\" && !this.isLineTerminator()) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, publicMethod.key);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      (maybeContextualKw === \"get\" || maybeContextualKw === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = maybeContextualKw;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, publicMethod.key);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (maybeContextualKw === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier | N.PrivateName {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, this.state.startLoc);\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, this.state.startLoc);\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    this.parsePropertyName(member);\n    return member.key;\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(\n      ScopeFlag.CLASS | ScopeFlag.STATIC_BLOCK | ScopeFlag.SUPER,\n    );\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(ParamKind.PARAM);\n    const body: N.Statement[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, member);\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (!prop.computed && this.nameIsConstructor(prop.key)) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      ClassElementType.OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed && this.nameIsConstructor(prop.key)) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key as N.PrivateName),\n        ClassElementType.OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? ClassElementType.STATIC_GETTER\n          : ClassElementType.INSTANCE_GETTER\n        : node.kind === \"set\"\n          ? node.static\n            ? ClassElementType.STATIC_SETTER\n            : ClassElementType.INSTANCE_SETTER\n          : ClassElementType.OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<N.ClassPrivateMethod | N.TSDeclareMethod>,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key as N.PrivateName),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(ScopeFlag.CLASS | ScopeFlag.SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(ParamKind.PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingFlag = BindingFlag.TYPE_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, this.state.startLoc);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n      node,\n      /* isExport */ true,\n    );\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n\n      this.checkExport(node2, true, true);\n\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  eatExportStar(\n    node: Undone<N.Node>,\n  ): node is Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration> {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier?.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode<N.ExportDefaultSpecifier>(id);\n      specifier.exported = id;\n      (node as Undone<N.ExportNamedDeclaration>).specifiers = [\n        this.finishNode(specifier, \"ExportDefaultSpecifier\"),\n      ];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(\n    node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (this.isContextual(tt._as)) {\n      (node as Undone<N.ExportNamedDeclaration>).specifiers ??= [];\n\n      const specifier = this.startNodeAt<N.ExportNamespaceSpecifier>(\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      (node as Undone<N.ExportNamedDeclaration>).specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(\n    node: Undone<N.Node>,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (this.match(tt.braceL)) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n\n      if (!node2.specifiers) node2.specifiers = [];\n      const isTypeExport = node2.exportKind === \"type\";\n      node2.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node2.source = null;\n      node2.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node2.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression(\n    this: Parser,\n  ): N.ExportDefaultDeclaration[\"declaration\"] {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, this.state.startLoc);\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n        }\n\n        return true;\n      }\n    }\n\n    if (this.isContextual(tt._using)) {\n      this.raise(Errors.UsingDeclarationExport, this.state.startLoc);\n      return true;\n    }\n\n    if (this.isContextual(tt._await) && this.startsAwaitUsing()) {\n      this.raise(Errors.UsingDeclarationExport, this.state.startLoc);\n      return true;\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<\n      | N.ExportNamedDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportDefaultDeclaration\n    >,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, declaration);\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers?.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, specifier, {\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if ((node as Undone<N.ExportNamedDeclaration>).declaration) {\n        const decl = (node as Undone<N.ExportNamedDeclaration>).declaration;\n        // Exported declarations\n        if (\n          decl.type === \"FunctionDeclaration\" ||\n          decl.type === \"ClassDeclaration\"\n        ) {\n          const { id } = decl;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (decl.type === \"VariableDeclaration\") {\n          for (const declaration of decl.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, node);\n      } else {\n        this.raise(Errors.DuplicateExport, node, { exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode<N.ExportSpecifier>();\n      node.local = this.parseModuleExportName() as N.Identifier;\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = loneSurrogate.exec(result.value);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, result, {\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    const { specifiers } = node;\n    const singleBindingType =\n      specifiers.length === 1 ? specifiers[0].type : null;\n\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(\n          Errors.SourcePhaseImportRequiresDefault,\n          specifiers[0].loc.start,\n        );\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(\n          Errors.DeferImportRequiresNamespace,\n          specifiers[0].loc.start,\n        );\n      }\n    } else if (node.module) {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, specifiers[0].loc.start);\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(\n          Errors.ImportReflectionHasAssertion,\n          specifiers[0].loc.start,\n        );\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(\n            Errors.ImportJSONBindingNotDefault,\n            nonDefaultNamedSpecifier.loc.start,\n          );\n        }\n      }\n    }\n  }\n\n  isPotentialImportPhase(isExport: boolean): boolean {\n    if (isExport) return false;\n    return (\n      this.isContextual(tt._source) ||\n      this.isContextual(tt._defer) ||\n      this.isContextual(tt._module)\n    );\n  }\n\n  applyImportPhase(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n    isExport: boolean,\n    phase: string | null,\n    loc?: Position,\n  ): void {\n    if (isExport) {\n      if (!process.env.IS_PUBLISH) {\n        if (phase === \"module\" || phase === \"source\") {\n          throw new Error(\n            `Assertion failure: export declarations do not support the '${phase}' phase.`,\n          );\n        }\n      }\n      return;\n    }\n\n    if (phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      (node as N.ImportDeclaration).module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      (node as N.ImportDeclaration).module = false;\n    }\n\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      (node as N.ImportDeclaration).phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      (node as N.ImportDeclaration).phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      (node as N.ImportDeclaration).phase = null;\n    }\n  }\n\n  /*\n   * Parse `module` in `import module x from \"x\"`, disambiguating\n   * `import module from \"x\"` and `import module from from \"x\"`.\n   *\n   * This function might return an identifier representing the `module`\n   * if it eats `module` and then discovers that it was the default import\n   * binding and not the import reflection.\n   *\n   * This function is also used to parse `import type` and `import typeof`\n   * in the TS and Flow plugins.\n   *\n   * Note: the proposal has been updated to use `source` instead of `module`,\n   * but it has not been implemented yet.\n   */\n  parseMaybeImportPhase(\n    node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    isExport: boolean,\n  ): N.Identifier | null {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      return null;\n    }\n\n    const phaseIdentifier = this.parseIdentifier(true);\n\n    const { type } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        phaseIdentifier.name,\n        phaseIdentifier.loc.start,\n      );\n      return null;\n    } else {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      // `<phase>` is a default binding, return it to the main import declaration parser\n      return phaseIdentifier;\n    }\n  }\n\n  isPrecedingIdImportPhase(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    phase: string,\n  ) {\n    const { type } = this.state;\n    return tokenIsIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    if (this.match(tt.string)) {\n      // import '...'\n      return this.parseImportSourceAndAttributes(node);\n    }\n\n    return this.parseImportSpecifiersAndAfter(\n      node,\n      this.parseMaybeImportPhase(node, /* isExport */ false),\n    );\n  }\n\n  parseImportSpecifiersAndAfter(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): N.AnyImport {\n    node.specifiers = [];\n\n    // check if we have a default import like\n    // import React from \"react\";\n    const hasDefault = this.maybeParseDefaultImportSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    /* we are checking if we do not have a default import, then it is obvious that we need named imports\n     * import { get } from \"axios\";\n     * but if we do have a default import\n     * we need to check if we have a comma after that and\n     * that is where this `|| this.eat` condition comes into play\n     */\n    const parseNext = !hasDefault || this.eat(tt.comma);\n    // if we do have to parse the next set of specifiers, we first check for star imports\n    // import React, * from \"react\";\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    // now we check if we need to parse the next imports\n    // but only if they are not importing * (everything)\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(tt._from);\n\n    return this.parseImportSourceAndAttributes(node);\n  }\n\n  parseImportSourceAndAttributes(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n  ): N.AnyImport {\n    node.specifiers ??= [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    specifier: Undone<T>,\n    type: T[\"type\"],\n    bindingType: BindingFlag = BindingFlag.TYPE_LEXICAL,\n  ) {\n    this.checkLVal(specifier.local, { type }, bindingType);\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-attributes/#prod-WithEntries WithEntries}\n   */\n  parseImportAttributes(): N.ImportAttribute[] {\n    this.expect(tt.braceL);\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          Errors.ModuleAttributesWithDuplicateKeys,\n          this.state.startLoc,\n          {\n            key: keyName,\n          },\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(\n          Errors.ModuleAttributeInvalidValue,\n          this.state.startLoc,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    this.expect(tt.braceR);\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  parseModuleAttributes() {\n    const attrs: N.ImportAttribute[] = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode<N.ImportAttribute>();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, node.key);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, node.key, {\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(\n          Errors.ModuleAttributeInvalidValue,\n          this.state.startLoc,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAttributes(\n    node: Undone<\n      N.ImportDeclaration | N.ExportNamedDeclaration | N.ExportAllDeclaration\n    >,\n  ) {\n    let attributes: N.ImportAttribute[];\n    let useWith = false;\n\n    // https://tc39.es/proposal-import-attributes/#prod-WithClause\n    if (this.match(tt._with)) {\n      if (\n        this.hasPrecedingLineBreak() &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      ) {\n        // This will be parsed as a with statement, and we will throw a\n        // better error about it not being supported in strict mode.\n        return;\n      }\n\n      this.next(); // eat `with`\n\n      if (!process.env.BABEL_8_BREAKING) {\n        if (this.hasPlugin(\"moduleAttributes\")) {\n          attributes = this.parseModuleAttributes();\n        } else {\n          this.expectImportAttributesPlugin();\n          attributes = this.parseImportAttributes();\n        }\n      } else {\n        this.expectImportAttributesPlugin();\n        attributes = this.parseImportAttributes();\n      }\n      useWith = true;\n    } else if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      if (this.hasPlugin(\"importAttributes\")) {\n        if (\n          this.getPluginOption(\"importAttributes\", \"deprecatedAssertSyntax\") !==\n          true\n        ) {\n          this.raise(Errors.ImportAttributesUseAssert, this.state.startLoc);\n        }\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      } else {\n        this.expectOnePlugin([\"importAttributes\", \"importAssertions\"]);\n      }\n      this.next(); // eat `assert`\n      attributes = this.parseImportAttributes();\n    } else if (\n      this.hasPlugin(\"importAttributes\") ||\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      attributes = [];\n    } else if (!process.env.BABEL_8_BREAKING) {\n      if (this.hasPlugin(\"moduleAttributes\")) {\n        attributes = [];\n      } else return;\n    } else return;\n\n    if (!useWith && this.hasPlugin(\"importAssertions\")) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n\n  maybeParseDefaultImportSpecifier(\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): boolean {\n    // import defaultObj, { x, y as z } from '...'\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode<N.ImportDefaultSpecifier>(\n        maybeDefaultIdentifier,\n      );\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(\n        this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"),\n      );\n      return true;\n    } else if (\n      // We allow keywords, and parseImportSpecifierLocal will report a recoverable error\n      tokenIsKeywordOrIdentifier(this.state.type)\n    ) {\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, this.state.startLoc);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingFlag | undefined,\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, specifier, {\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport { getOptions } from \"../options.ts\";\nimport StatementParser from \"./statement.ts\";\nimport ScopeHandler from \"../util/scope.ts\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(\n    options: Options | undefined | null,\n    input: string,\n    pluginsMap: PluginsMap,\n  ) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap;\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): new (...args: any) => ScopeHandler {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode<N.File>();\n    const program = this.startNode<N.Program>();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    file.comments.length = this.state.commentsLen;\n    return file as N.File;\n  }\n}\n","import type { Options } from \"./options.ts\";\nimport {\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n} from \"./plugin-utils.ts\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings.ts\";\nimport Parser, { type PluginsMap } from \"./parser/index.ts\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types.ts\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types.ts\";\n\nimport type { Expression, File } from \"./types.ts\";\nexport type { Expression, File };\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  const pluginsMap: PluginsMap = new Map();\n  if (options?.plugins) {\n    for (const plugin of options.plugins) {\n      let name, opts;\n      if (typeof plugin === \"string\") {\n        name = plugin;\n      } else {\n        [name, opts] = plugin;\n      }\n      if (!pluginsMap.has(name)) {\n        pluginsMap.set(name, opts || {});\n      }\n    }\n    validatePlugins(pluginsMap);\n    cls = getParserClass(pluginsMap);\n  }\n\n  return new cls(options, input, pluginsMap);\n}\n\nconst parserClassCache = new Map<string, new (...args: any) => Parser>();\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(\n  pluginsMap: Map<string, any>,\n): new (...args: any) => Parser {\n  const pluginList = [];\n  for (const name of mixinPluginNames) {\n    if (pluginsMap.has(name)) {\n      pluginList.push(name);\n    }\n  }\n  const key = pluginList.join(\"|\");\n  let cls = parserClassCache.get(key);\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache.set(key, cls);\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.estreeWalker = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// @ts-check\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\n\t/** @typedef {{\n\t\tskip: () => void;\n\t\tremove: () => void;\n\t\treplace: (node: BaseNode) => void;\n\t}} WalkerContext */\n\n\tclass WalkerBase {\n\t\tconstructor() {\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_skip = false;\n\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_remove = false;\n\n\t\t\t/** @type {BaseNode | null} */\n\t\t\tthis.replacement = null;\n\n\t\t\t/** @type {WalkerContext} */\n\t\t\tthis.context = {\n\t\t\t\tskip: () => (this.should_skip = true),\n\t\t\t\tremove: () => (this.should_remove = true),\n\t\t\t\treplace: (node) => (this.replacement = node)\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t * @param {BaseNode} node\n\t\t */\n\t\treplace(parent, prop, index, node) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop][index] = node;\n\t\t\t\t} else {\n\t\t\t\t\tparent[prop] = node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t */\n\t\tremove(parent, prop, index) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t\t} else {\n\t\t\t\t\tdelete parent[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => void} SyncHandler */\n\n\tclass SyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {SyncHandler} enter\n\t\t * @param {SyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {BaseNode}\n\t\t */\n\t\tvisit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => Promise<void>} AsyncHandler */\n\n\tclass AsyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {AsyncHandler} enter\n\t\t * @param {AsyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {Promise<BaseNode>}\n\t\t */\n\t\tasync visit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n\t/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: SyncHandler\n\t *   leave?: SyncHandler\n\t * }} walker\n\t * @returns {BaseNode}\n\t */\n\tfunction walk(ast, { enter, leave }) {\n\t\tconst instance = new SyncWalker(enter, leave);\n\t\treturn instance.visit(ast, null);\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: AsyncHandler\n\t *   leave?: AsyncHandler\n\t * }} walker\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync function asyncWalk(ast, { enter, leave }) {\n\t\tconst instance = new AsyncWalker(enter, leave);\n\t\treturn await instance.visit(ast, null);\n\t}\n\n\texports.asyncWalk = asyncWalk;\n\texports.walk = walk;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._ignoreInvalidMapping = util.getArg(aArgs, 'ignoreInvalidMapping', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer, generatorOps) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator(Object.assign(generatorOps || {}, {\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    }));\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      if (this._validateMapping(generated, original, source, name) === false) {\n        return;\n      }\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n      var message = 'original.line and original.column are not numbers -- you probably meant to omit ' +\n      'the original mapping entirely and only map the generated position. If so, pass ' +\n      'null for the original mapping instead of an object with empty or null values.'\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message);\n      }\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      var message = 'Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      });\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message)\n      }\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nexports.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content || content === '') {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/**\n* @vue/compiler-core v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar decode_js = require('entities/lib/decode.js');\nvar parser = require('@babel/parser');\nvar estreeWalker = require('estree-walker');\nvar sourceMapJs = require('source-map-js');\n\nconst FRAGMENT = Symbol(``);\nconst TELEPORT = Symbol(``);\nconst SUSPENSE = Symbol(``);\nconst KEEP_ALIVE = Symbol(``);\nconst BASE_TRANSITION = Symbol(\n  ``\n);\nconst OPEN_BLOCK = Symbol(``);\nconst CREATE_BLOCK = Symbol(``);\nconst CREATE_ELEMENT_BLOCK = Symbol(\n  ``\n);\nconst CREATE_VNODE = Symbol(``);\nconst CREATE_ELEMENT_VNODE = Symbol(\n  ``\n);\nconst CREATE_COMMENT = Symbol(\n  ``\n);\nconst CREATE_TEXT = Symbol(\n  ``\n);\nconst CREATE_STATIC = Symbol(\n  ``\n);\nconst RESOLVE_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DIRECTIVE = Symbol(\n  ``\n);\nconst RESOLVE_FILTER = Symbol(\n  ``\n);\nconst WITH_DIRECTIVES = Symbol(\n  ``\n);\nconst RENDER_LIST = Symbol(``);\nconst RENDER_SLOT = Symbol(``);\nconst CREATE_SLOTS = Symbol(``);\nconst TO_DISPLAY_STRING = Symbol(\n  ``\n);\nconst MERGE_PROPS = Symbol(``);\nconst NORMALIZE_CLASS = Symbol(\n  ``\n);\nconst NORMALIZE_STYLE = Symbol(\n  ``\n);\nconst NORMALIZE_PROPS = Symbol(\n  ``\n);\nconst GUARD_REACTIVE_PROPS = Symbol(\n  ``\n);\nconst TO_HANDLERS = Symbol(``);\nconst CAMELIZE = Symbol(``);\nconst CAPITALIZE = Symbol(``);\nconst TO_HANDLER_KEY = Symbol(\n  ``\n);\nconst SET_BLOCK_TRACKING = Symbol(\n  ``\n);\nconst PUSH_SCOPE_ID = Symbol(``);\nconst POP_SCOPE_ID = Symbol(``);\nconst WITH_CTX = Symbol(``);\nconst UNREF = Symbol(``);\nconst IS_REF = Symbol(``);\nconst WITH_MEMO = Symbol(``);\nconst IS_MEMO_SAME = Symbol(``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_CACHE\": 2,\n  \"2\": \"CAN_CACHE\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: [],\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, needPauseTracking = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    needPauseTracking,\n    needArraySpread: false,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(\n        decode_js.htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ; else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n}\n\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && // eslint-disable-next-line no-restricted-syntax\n      (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"CatchClause\" && node.param) {\n        for (const id of extractIdentifiers(node.param)) {\n          markScopeIdentifier(node, id, knownIds);\n        }\n      } else if (isForStatement(node)) {\n        walkForStatement(\n          node,\n          false,\n          (id) => markScopeIdentifier(node, id, knownIds)\n        );\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare) continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    } else if (isForStatement(stmt)) {\n      walkForStatement(stmt, true, onIdent);\n    }\n  }\n}\nfunction isForStatement(stmt) {\n  return stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\";\n}\nfunction walkForStatement(stmt, isVar, onIdent) {\n  const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n  if (variable && variable.type === \"VariableDeclaration\" && (variable.kind === \"var\" ? isVar : !isVar)) {\n    for (const decl of variable.declarations) {\n      for (const id of extractIdentifiers(decl.id)) {\n        onIdent(id);\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent;\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      return parent.local === node;\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w\\xA0-\\uFFFF]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst getExpSource = (exp) => exp.type === 4 ? exp.content : exp.loc.source;\nconst isMemberExpressionBrowser = (exp) => {\n  const path = getExpSource(exp).trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nconst fnExpRE = /^\\s*(async\\s*)?(\\([^)]*?\\)|[\\w$_]+)\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst isFnExpressionBrowser = (exp) => fnExpRE.test(getExpSource(exp));\nconst isFnExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    if (ret.type === \"Program\") {\n      ret = ret.body[0];\n      if (ret.type === \"ExpressionStatement\") {\n        ret = ret.expression;\n      }\n    }\n    ret = unwrapTSNode(ret);\n    return ret.type === \"FunctionExpression\" || ret.type === \"ArrowFunctionExpression\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isFnExpression = isFnExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n    case 20:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+(\\S[\\s\\S]*)/;\n\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: false,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (stack[0] && stack[0].tag === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [createSimpleExpression(\"prop\")] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end) return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      const exp = createSimpleExpression(mod, true, getLoc(start, end));\n      currentProp.modifiers.push(exp);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3 /* Skip */;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1 /* Params */;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2 /* Statements */;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.findIndex(\n            (mod) => mod.content === \"sync\"\n          )) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        // \"\n        case 20:\n        // '\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 /* Params */ : 0 /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if (lastNode && lastNode.type === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, lookAhead(end, 62) + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(el.children, el.tag);\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction lookAhead(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++;\n  return i;\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || currentOptions.isBuiltInComponent && currentOptions.isBuiltInComponent(tag) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (// :is on plain element - only treat as component in compat mode\n    p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      currentOptions,\n      p.loc\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = nodes[i - 1] && nodes[i - 1].type;\n          const next = nodes[i + 1] && nodes[i + 1].type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\n    const first = nodes[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2 /* Statements */) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1 /* Params */) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options && options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\n\nfunction cacheStatic(root, context) {\n  walk(\n    root,\n    void 0,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, parent, context, doNotHoistNode = false, inFor = false) {\n  const { children } = node;\n  const toCache = [];\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1;\n          toCache.push(child);\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = codegenNode.patchFlag;\n          if ((flag === void 0 || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType >= 2) {\n        toCache.push(child);\n        continue;\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, node, context, false, inFor);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, node, context, child.children.length === 1, true);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          node,\n          context,\n          child.branches[i2].children.length === 1,\n          inFor\n        );\n      }\n    }\n  }\n  let cachedAsArray = false;\n  if (toCache.length === children.length && node.type === 1) {\n    if (node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n      node.codegenNode.children = getCacheExpression(\n        createArrayExpression(node.codegenNode.children)\n      );\n      cachedAsArray = true;\n    } else if (node.tagType === 1 && node.codegenNode && node.codegenNode.type === 13 && node.codegenNode.children && !shared.isArray(node.codegenNode.children) && node.codegenNode.children.type === 15) {\n      const slot = getSlotNode(node.codegenNode, \"default\");\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    } else if (node.tagType === 3 && parent && parent.type === 1 && parent.tagType === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !shared.isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 15) {\n      const slotName = findDir(node, \"slot\", true);\n      const slot = slotName && slotName.arg && getSlotNode(parent.codegenNode, slotName.arg);\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    }\n  }\n  if (!cachedAsArray) {\n    for (const child of toCache) {\n      child.codegenNode = context.cache(child.codegenNode);\n    }\n  }\n  function getCacheExpression(value) {\n    const exp = context.cache(value);\n    if (inFor && context.hmr) {\n      exp.needArraySpread = true;\n    }\n    return exp;\n  }\n  function getSlotNode(node2, name) {\n    if (node2.children && !shared.isArray(node2.children) && node2.children.type === 15) {\n      const slot = node2.children.properties.find(\n        (p) => p.key === name || p.key.content === name\n      );\n      return slot && slot.value;\n    }\n  }\n  if (toCache.length && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\" && node.tag !== \"math\") {\n        return 0;\n      }\n      if (codegenNode.patchFlag === void 0) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    case 20:\n      return 2;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    cached: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    grandParent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      const cacheExp = createCacheExpression(\n        context.cached.length,\n        exp,\n        isVNode\n      );\n      context.cached.push(cacheExp);\n      return cacheExp;\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    cacheStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    shared.PatchFlagNames[64];\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag,\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child)) continue;\n    context.grandParent = context.parent;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*@__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3 /* Unknown */) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2 /* None */) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1 /* End */) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name)) _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1 /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1 /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1 /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline } = context;\n  newline();\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      push(`const _hoisted_${i + 1} = `);\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  let patchFlagString;\n  if (patchFlag) {\n    {\n      patchFlagString = String(patchFlag);\n    }\n  }\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlagString, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  const { needPauseTracking, needArraySpread } = node;\n  if (needArraySpread) {\n    push(`[...(`);\n  }\n  push(`_cache[${node.index}] || (`);\n  if (needPauseTracking) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n    push(`(`);\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (needPauseTracking) {\n    push(`).cacheIndex = ${node.index},`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n  if (needArraySpread) {\n    push(`)]`);\n  }\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"), -3 /* Unknown */);\n    } else {\n      push(\"${\");\n      if (multilines) indent();\n      genNode(e, context);\n      if (multilines) deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\n\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parseExpression(source, {\n        sourceType: \"module\",\n        plugins: context.expressionPlugins\n      });\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && (!parent || parent.type !== \"CallExpression\" && parent.type !== \"NewExpression\" && parent.type !== \"MemberExpression\")) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit) onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"\"',\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      shared.PatchFlagNames[64];\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag,\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    transformBindShorthand(dir, context);\n    exp = dir.exp;\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.some((mod) => mod.content === \"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.some((mod) => mod.content === \"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.some((mod) => mod.content === \"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst transformBindShorthand = (dir, context) => {\n  const arg = dir.arg;\n  const propName = shared.camelize(arg.content);\n  dir.exp = createSimpleExpression(propName, false, arg.loc);\n  {\n    dir.exp = processExpression(dir.exp, context);\n  }\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`, false, true);\n      if (keyProp && keyProp.type === 7 && !keyProp.exp) {\n        transformBindShorthand(keyProp, context);\n      }\n      const keyExp = keyProp && (keyProp.type === 6 ? keyProp.value ? createSimpleExpression(keyProp.value.content, true) : void 0 : keyProp.exp);\n      const keyProperty = keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag,\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64,\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached.length))\n          );\n          context.cached.push(null);\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit) onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized) return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, /^(else-)?if$/)) {\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (``),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\" || tag === \"math\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (dynamicPropNames && dynamicPropNames.length) {\n      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      patchFlag === 0 ? void 0 : patchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(\n    node,\n    \"is\",\n    false,\n    true\n    /* allow empty */\n  );\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      let exp;\n      if (isProp.type === 6) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true);\n      } else {\n        exp = isProp.exp;\n        if (!exp) {\n          exp = createSimpleExpression(`is`, false, isProp.arg.loc);\n          {\n            exp = isProp.exp = processExpression(exp, context);\n          }\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  const pushRefVForMarker = () => {\n    if (context.scopes.vFor > 0) {\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\"ref_for\", true),\n          createSimpleExpression(\"true\")\n        )\n      );\n    }\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        pushRefVForMarker();\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\")) {\n        pushRefVForMarker();\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushRefVForMarker();\n            pushMergeArg();\n            {\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.some((mod) => mod.content === \"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp, context);\n    const isInlineStatement = !(isMemberExp || isFnExpression(exp, context));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (``)\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(exp, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => m.content).map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  } else if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\") continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92) inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92) inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        // \"\n        case 39:\n          inSingle = true;\n          break;\n        // '\n        case 96:\n          inTemplateString = true;\n          break;\n        // `\n        case 40:\n          paren++;\n          break;\n        // (\n        case 41:\n          paren--;\n          break;\n        // )\n        case 91:\n          square++;\n          break;\n        // [\n        case 93:\n          square--;\n          break;\n        // ]\n        case 123:\n          curly++;\n          break;\n        // {\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \") break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n    node.ast = void 0;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached.length)\n        ]);\n        context.cached.push(null);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter] ,\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\n\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.BindingTypes = BindingTypes;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\nexports.ConstantTypes = ConstantTypes;\nexports.ElementTypes = ElementTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.Namespaces = Namespaces;\nexports.NodeTypes = NodeTypes;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.errorMessages = errorMessages;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isCoreComponent = isCoreComponent;\nexports.isFnExpression = isFnExpression;\nexports.isFnExpressionBrowser = isFnExpressionBrowser;\nexports.isFnExpressionNode = isFnExpressionNode;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isInNewExpression = isInNewExpression;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.unwrapTSNode = unwrapTSNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n","/**\n* @vue/compiler-core v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar decode_js = require('entities/lib/decode.js');\nvar parser = require('@babel/parser');\nvar estreeWalker = require('estree-walker');\nvar sourceMapJs = require('source-map-js');\n\nconst FRAGMENT = Symbol(`Fragment` );\nconst TELEPORT = Symbol(`Teleport` );\nconst SUSPENSE = Symbol(`Suspense` );\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\nconst BASE_TRANSITION = Symbol(\n  `BaseTransition` \n);\nconst OPEN_BLOCK = Symbol(`openBlock` );\nconst CREATE_BLOCK = Symbol(`createBlock` );\nconst CREATE_ELEMENT_BLOCK = Symbol(\n  `createElementBlock` \n);\nconst CREATE_VNODE = Symbol(`createVNode` );\nconst CREATE_ELEMENT_VNODE = Symbol(\n  `createElementVNode` \n);\nconst CREATE_COMMENT = Symbol(\n  `createCommentVNode` \n);\nconst CREATE_TEXT = Symbol(\n  `createTextVNode` \n);\nconst CREATE_STATIC = Symbol(\n  `createStaticVNode` \n);\nconst RESOLVE_COMPONENT = Symbol(\n  `resolveComponent` \n);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  `resolveDynamicComponent` \n);\nconst RESOLVE_DIRECTIVE = Symbol(\n  `resolveDirective` \n);\nconst RESOLVE_FILTER = Symbol(\n  `resolveFilter` \n);\nconst WITH_DIRECTIVES = Symbol(\n  `withDirectives` \n);\nconst RENDER_LIST = Symbol(`renderList` );\nconst RENDER_SLOT = Symbol(`renderSlot` );\nconst CREATE_SLOTS = Symbol(`createSlots` );\nconst TO_DISPLAY_STRING = Symbol(\n  `toDisplayString` \n);\nconst MERGE_PROPS = Symbol(`mergeProps` );\nconst NORMALIZE_CLASS = Symbol(\n  `normalizeClass` \n);\nconst NORMALIZE_STYLE = Symbol(\n  `normalizeStyle` \n);\nconst NORMALIZE_PROPS = Symbol(\n  `normalizeProps` \n);\nconst GUARD_REACTIVE_PROPS = Symbol(\n  `guardReactiveProps` \n);\nconst TO_HANDLERS = Symbol(`toHandlers` );\nconst CAMELIZE = Symbol(`camelize` );\nconst CAPITALIZE = Symbol(`capitalize` );\nconst TO_HANDLER_KEY = Symbol(\n  `toHandlerKey` \n);\nconst SET_BLOCK_TRACKING = Symbol(\n  `setBlockTracking` \n);\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\nconst WITH_CTX = Symbol(`withCtx` );\nconst UNREF = Symbol(`unref` );\nconst IS_REF = Symbol(`isRef` );\nconst WITH_MEMO = Symbol(`withMemo` );\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_CACHE\": 2,\n  \"2\": \"CAN_CACHE\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: [],\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, needPauseTracking = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    needPauseTracking,\n    needArraySpread: false,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(\n        decode_js.htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ; else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n}\n\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  if (enabled) {\n    warnDeprecation(key, context, loc, ...args);\n  }\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n  console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && // eslint-disable-next-line no-restricted-syntax\n      (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"CatchClause\" && node.param) {\n        for (const id of extractIdentifiers(node.param)) {\n          markScopeIdentifier(node, id, knownIds);\n        }\n      } else if (isForStatement(node)) {\n        walkForStatement(\n          node,\n          false,\n          (id) => markScopeIdentifier(node, id, knownIds)\n        );\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare) continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    } else if (isForStatement(stmt)) {\n      walkForStatement(stmt, true, onIdent);\n    }\n  }\n}\nfunction isForStatement(stmt) {\n  return stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\";\n}\nfunction walkForStatement(stmt, isVar, onIdent) {\n  const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n  if (variable && variable.type === \"VariableDeclaration\" && (variable.kind === \"var\" ? isVar : !isVar)) {\n    for (const decl of variable.declarations) {\n      for (const id of extractIdentifiers(decl.id)) {\n        onIdent(id);\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent;\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      return parent.local === node;\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w\\xA0-\\uFFFF]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst getExpSource = (exp) => exp.type === 4 ? exp.content : exp.loc.source;\nconst isMemberExpressionBrowser = (exp) => {\n  const path = getExpSource(exp).trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nconst fnExpRE = /^\\s*(async\\s*)?(\\([^)]*?\\)|[\\w$_]+)\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst isFnExpressionBrowser = (exp) => fnExpRE.test(getExpSource(exp));\nconst isFnExpressionNode = (exp, context) => {\n  try {\n    let ret = exp.ast || parser.parseExpression(getExpSource(exp), {\n      plugins: context.expressionPlugins ? [...context.expressionPlugins, \"typescript\"] : [\"typescript\"]\n    });\n    if (ret.type === \"Program\") {\n      ret = ret.body[0];\n      if (ret.type === \"ExpressionStatement\") {\n        ret = ret.expression;\n      }\n    }\n    ret = unwrapTSNode(ret);\n    return ret.type === \"FunctionExpression\" || ret.type === \"ArrowFunctionExpression\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isFnExpression = isFnExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n    case 20:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+(\\S[\\s\\S]*)/;\n\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: true,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (stack[0] && stack[0].tag === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [createSimpleExpression(\"prop\")] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end) return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      const exp = createSimpleExpression(mod, true, getLoc(start, end));\n      currentProp.modifiers.push(exp);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3 /* Skip */;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1 /* Params */;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2 /* Statements */;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.findIndex(\n            (mod) => mod.content === \"sync\"\n          )) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        // \"\n        case 20:\n        // '\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 /* Params */ : 0 /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if (lastNode && lastNode.type === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, lookAhead(end, 62) + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(el.children, el.tag);\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (isCompatEnabled(\n      \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n      currentOptions\n    )) {\n      let hasIf = false;\n      let hasFor = false;\n      for (let i = 0; i < props.length; i++) {\n        const p = props[i];\n        if (p.type === 7) {\n          if (p.name === \"if\") {\n            hasIf = true;\n          } else if (p.name === \"for\") {\n            hasFor = true;\n          }\n        }\n        if (hasIf && hasFor) {\n          warnDeprecation(\n            \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n            currentOptions,\n            el.loc\n          );\n          break;\n        }\n      }\n    }\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      warnDeprecation(\n        \"COMPILER_NATIVE_TEMPLATE\",\n        currentOptions,\n        el.loc\n      );\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction lookAhead(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++;\n  return i;\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || currentOptions.isBuiltInComponent && currentOptions.isBuiltInComponent(tag) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (// :is on plain element - only treat as component in compat mode\n    p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      currentOptions,\n      p.loc\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = nodes[i - 1] && nodes[i - 1].type;\n          const next = nodes[i + 1] && nodes[i + 1].type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\n    const first = nodes[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2 /* Statements */) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1 /* Params */) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  {\n    if (currentOptions.decodeEntities) {\n      console.warn(\n        `[@vue/compiler-core] decodeEntities option is passed but will be ignored in non-browser builds.`\n      );\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options && options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\n\nfunction cacheStatic(root, context) {\n  walk(\n    root,\n    void 0,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, parent, context, doNotHoistNode = false, inFor = false) {\n  const { children } = node;\n  const toCache = [];\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1;\n          toCache.push(child);\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = codegenNode.patchFlag;\n          if ((flag === void 0 || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType >= 2) {\n        toCache.push(child);\n        continue;\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, node, context, false, inFor);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, node, context, child.children.length === 1, true);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          node,\n          context,\n          child.branches[i2].children.length === 1,\n          inFor\n        );\n      }\n    }\n  }\n  let cachedAsArray = false;\n  if (toCache.length === children.length && node.type === 1) {\n    if (node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n      node.codegenNode.children = getCacheExpression(\n        createArrayExpression(node.codegenNode.children)\n      );\n      cachedAsArray = true;\n    } else if (node.tagType === 1 && node.codegenNode && node.codegenNode.type === 13 && node.codegenNode.children && !shared.isArray(node.codegenNode.children) && node.codegenNode.children.type === 15) {\n      const slot = getSlotNode(node.codegenNode, \"default\");\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    } else if (node.tagType === 3 && parent && parent.type === 1 && parent.tagType === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !shared.isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 15) {\n      const slotName = findDir(node, \"slot\", true);\n      const slot = slotName && slotName.arg && getSlotNode(parent.codegenNode, slotName.arg);\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    }\n  }\n  if (!cachedAsArray) {\n    for (const child of toCache) {\n      child.codegenNode = context.cache(child.codegenNode);\n    }\n  }\n  function getCacheExpression(value) {\n    const exp = context.cache(value);\n    if (inFor && context.hmr) {\n      exp.needArraySpread = true;\n    }\n    return exp;\n  }\n  function getSlotNode(node2, name) {\n    if (node2.children && !shared.isArray(node2.children) && node2.children.type === 15) {\n      const slot = node2.children.properties.find(\n        (p) => p.key === name || p.key.content === name\n      );\n      return slot && slot.value;\n    }\n  }\n  if (toCache.length && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\" && node.tag !== \"math\") {\n        return 0;\n      }\n      if (codegenNode.patchFlag === void 0) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    case 20:\n      return 2;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    cached: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    grandParent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`);\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`);\n        }\n      }\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      if (!context.parent) {\n        throw new Error(`Cannot remove root node.`);\n      }\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`);\n      }\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      const cacheExp = createCacheExpression(\n        context.cached.length,\n        exp,\n        isVNode\n      );\n      context.cached.push(cacheExp);\n      return cacheExp;\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    cacheStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    let patchFlagText = shared.PatchFlagNames[64];\n    if (children.filter((c) => c.type !== 3).length === 1) {\n      patchFlag |= 2048;\n      patchFlagText += `, ${shared.PatchFlagNames[2048]}`;\n    }\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag,\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child)) continue;\n    context.grandParent = context.parent;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*@__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3 /* Unknown */) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2 /* None */) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1 /* End */) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name)) _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1 /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1 /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1 /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline } = context;\n  newline();\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      push(`const _hoisted_${i + 1} = `);\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      assert(\n        node.codegenNode != null,\n        `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`\n      );\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n    /* v8 ignore start */\n    case 10:\n      break;\n    default:\n      {\n        assert(false, `unhandled codegen node type: ${node.type}`);\n        const exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  let patchFlagString;\n  if (patchFlag) {\n    {\n      if (patchFlag < 0) {\n        patchFlagString = patchFlag + ` /* ${shared.PatchFlagNames[patchFlag]} */`;\n      } else {\n        const flagNames = Object.keys(shared.PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => shared.PatchFlagNames[n]).join(`, `);\n        patchFlagString = patchFlag + ` /* ${flagNames} */`;\n      }\n    }\n  }\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlagString, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  const { needPauseTracking, needArraySpread } = node;\n  if (needArraySpread) {\n    push(`[...(`);\n  }\n  push(`_cache[${node.index}] || (`);\n  if (needPauseTracking) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n    push(`(`);\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (needPauseTracking) {\n    push(`).cacheIndex = ${node.index},`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n  if (needArraySpread) {\n    push(`)]`);\n  }\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"), -3 /* Unknown */);\n    } else {\n      push(\"${\");\n      if (multilines) indent();\n      genNode(e, context);\n      if (multilines) deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\n\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parseExpression(source, {\n        sourceType: \"module\",\n        plugins: context.expressionPlugins\n      });\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && (!parent || parent.type !== \"CallExpression\" && parent.type !== \"NewExpression\" && parent.type !== \"MemberExpression\")) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        comments.unshift(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        if (comments.length && // #3619 ignore comments if the v-if is direct child of <transition>\n        !(context.parent && context.parent.type === 1 && (context.parent.tag === \"transition\" || context.parent.tag === \"Transition\"))) {\n          branch.children = [...comments, ...branch.children];\n        }\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit) onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"v-if\"' ,\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      let patchFlagText = shared.PatchFlagNames[64];\n      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {\n        patchFlag |= 2048;\n        patchFlagText += `, ${shared.PatchFlagNames[2048]}`;\n      }\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag,\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    transformBindShorthand(dir, context);\n    exp = dir.exp;\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.some((mod) => mod.content === \"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.some((mod) => mod.content === \"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.some((mod) => mod.content === \"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst transformBindShorthand = (dir, context) => {\n  const arg = dir.arg;\n  const propName = shared.camelize(arg.content);\n  dir.exp = createSimpleExpression(propName, false, arg.loc);\n  {\n    dir.exp = processExpression(dir.exp, context);\n  }\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`, false, true);\n      if (keyProp && keyProp.type === 7 && !keyProp.exp) {\n        transformBindShorthand(keyProp, context);\n      }\n      const keyExp = keyProp && (keyProp.type === 6 ? keyProp.value ? createSimpleExpression(keyProp.value.content, true) : void 0 : keyProp.exp);\n      const keyProperty = keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag,\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64,\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached.length))\n          );\n          context.cached.push(null);\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit) onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized) return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, /^(else-)?if$/)) {\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (` /* ${shared.slotFlagsText[slotFlag]} */` ),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\" || tag === \"math\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n        if (node.children.length > 1) {\n          context.onError(\n            createCompilerError(46, {\n              start: node.children[0].loc.start,\n              end: node.children[node.children.length - 1].loc.end,\n              source: \"\"\n            })\n          );\n        }\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (dynamicPropNames && dynamicPropNames.length) {\n      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      patchFlag === 0 ? void 0 : patchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(\n    node,\n    \"is\",\n    false,\n    true\n    /* allow empty */\n  );\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      let exp;\n      if (isProp.type === 6) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true);\n      } else {\n        exp = isProp.exp;\n        if (!exp) {\n          exp = createSimpleExpression(`is`, false, isProp.arg.loc);\n          {\n            exp = isProp.exp = processExpression(exp, context);\n          }\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  const pushRefVForMarker = () => {\n    if (context.scopes.vFor > 0) {\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\"ref_for\", true),\n          createSimpleExpression(\"true\")\n        )\n      );\n    }\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        pushRefVForMarker();\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\")) {\n        pushRefVForMarker();\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushRefVForMarker();\n            pushMergeArg();\n            {\n              {\n                const hasOverridableKeys = mergeArgs.some((arg2) => {\n                  if (arg2.type === 15) {\n                    return arg2.properties.some(({ key }) => {\n                      if (key.type !== 4 || !key.isStatic) {\n                        return true;\n                      }\n                      return key.content !== \"class\" && key.content !== \"style\" && !shared.isOn(key.content);\n                    });\n                  } else {\n                    return true;\n                  }\n                });\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\n                    \"COMPILER_V_BIND_OBJECT_ORDER\",\n                    context,\n                    loc\n                  );\n                }\n              }\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.some((mod) => mod.content === \"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vnode\")) {\n        context.onError(createCompilerError(51, arg.loc));\n      }\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp, context);\n    const isInlineStatement = !(isMemberExp || isFnExpression(exp, context));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (` /* ${shared.PatchFlagNames[1]} */` )\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(exp, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => m.content).map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  } else if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\") continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92) inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92) inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        // \"\n        case 39:\n          inSingle = true;\n          break;\n        // '\n        case 96:\n          inTemplateString = true;\n          break;\n        // `\n        case 40:\n          paren++;\n          break;\n        // (\n        case 41:\n          paren--;\n          break;\n        // )\n        case 91:\n          square++;\n          break;\n        // [\n        case 93:\n          square--;\n          break;\n        // ]\n        case 123:\n          curly++;\n          break;\n        // {\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \") break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    warnDeprecation(\n      \"COMPILER_FILTERS\",\n      context,\n      node.loc\n    );\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n    node.ast = void 0;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached.length)\n        ]);\n        context.cached.push(null);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter] ,\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\n\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.BindingTypes = BindingTypes;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\nexports.ConstantTypes = ConstantTypes;\nexports.ElementTypes = ElementTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.Namespaces = Namespaces;\nexports.NodeTypes = NodeTypes;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.errorMessages = errorMessages;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isCoreComponent = isCoreComponent;\nexports.isFnExpression = isFnExpression;\nexports.isFnExpressionBrowser = isFnExpressionBrowser;\nexports.isFnExpressionNode = isFnExpressionNode;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isInNewExpression = isInNewExpression;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.unwrapTSNode = unwrapTSNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-core.cjs.js')\n}\n","/**\n* @vue/compiler-dom v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerCore = require('@vue/compiler-core');\nvar shared = require('@vue/shared');\n\nconst V_MODEL_RADIO = Symbol(``);\nconst V_MODEL_CHECKBOX = Symbol(\n  ``\n);\nconst V_MODEL_TEXT = Symbol(``);\nconst V_MODEL_SELECT = Symbol(\n  ``\n);\nconst V_MODEL_DYNAMIC = Symbol(\n  ``\n);\nconst V_ON_WITH_MODIFIERS = Symbol(\n  ``\n);\nconst V_ON_WITH_KEYS = Symbol(\n  ``\n);\nconst V_SHOW = Symbol(``);\nconst TRANSITION = Symbol(``);\nconst TRANSITION_GROUP = Symbol(\n  ``\n);\ncompilerCore.registerRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n});\n\nconst parserOptions = {\n  parseMode: \"html\",\n  isVoidTag: shared.isVoidTag,\n  isNativeTag: (tag) => shared.isHTMLTag(tag) || shared.isSVGTag(tag) || shared.isMathMLTag(tag),\n  isPreTag: (tag) => tag === \"pre\",\n  decodeEntities: void 0,\n  isBuiltInComponent: (tag) => {\n    if (tag === \"Transition\" || tag === \"transition\") {\n      return TRANSITION;\n    } else if (tag === \"TransitionGroup\" || tag === \"transition-group\") {\n      return TRANSITION_GROUP;\n    }\n  },\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent, rootNamespace) {\n    let ns = parent ? parent.ns : rootNamespace;\n    if (parent && ns === 2) {\n      if (parent.tag === \"annotation-xml\") {\n        if (tag === \"svg\") {\n          return 1;\n        }\n        if (parent.props.some(\n          (a) => a.type === 6 && a.name === \"encoding\" && a.value != null && (a.value.content === \"text/html\" || a.value.content === \"application/xhtml+xml\")\n        )) {\n          ns = 0;\n        }\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== \"mglyph\" && tag !== \"malignmark\") {\n        ns = 0;\n      }\n    } else if (parent && ns === 1) {\n      if (parent.tag === \"foreignObject\" || parent.tag === \"desc\" || parent.tag === \"title\") {\n        ns = 0;\n      }\n    }\n    if (ns === 0) {\n      if (tag === \"svg\") {\n        return 1;\n      }\n      if (tag === \"math\") {\n        return 2;\n      }\n    }\n    return ns;\n  }\n};\n\nconst transformStyle = (node) => {\n  if (node.type === 1) {\n    node.props.forEach((p, i) => {\n      if (p.type === 6 && p.name === \"style\" && p.value) {\n        node.props[i] = {\n          type: 7,\n          name: `bind`,\n          arg: compilerCore.createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        };\n      }\n    });\n  }\n};\nconst parseInlineCSS = (cssText, loc) => {\n  const normalized = shared.parseStringStyle(cssText);\n  return compilerCore.createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    3\n  );\n};\n\nfunction createDOMCompilerError(code, loc) {\n  return compilerCore.createCompilerError(\n    code,\n    loc,\n    DOMErrorMessages \n  );\n}\nconst DOMErrorCodes = {\n  \"X_V_HTML_NO_EXPRESSION\": 53,\n  \"53\": \"X_V_HTML_NO_EXPRESSION\",\n  \"X_V_HTML_WITH_CHILDREN\": 54,\n  \"54\": \"X_V_HTML_WITH_CHILDREN\",\n  \"X_V_TEXT_NO_EXPRESSION\": 55,\n  \"55\": \"X_V_TEXT_NO_EXPRESSION\",\n  \"X_V_TEXT_WITH_CHILDREN\": 56,\n  \"56\": \"X_V_TEXT_WITH_CHILDREN\",\n  \"X_V_MODEL_ON_INVALID_ELEMENT\": 57,\n  \"57\": \"X_V_MODEL_ON_INVALID_ELEMENT\",\n  \"X_V_MODEL_ARG_ON_ELEMENT\": 58,\n  \"58\": \"X_V_MODEL_ARG_ON_ELEMENT\",\n  \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\": 59,\n  \"59\": \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\",\n  \"X_V_MODEL_UNNECESSARY_VALUE\": 60,\n  \"60\": \"X_V_MODEL_UNNECESSARY_VALUE\",\n  \"X_V_SHOW_NO_EXPRESSION\": 61,\n  \"61\": \"X_V_SHOW_NO_EXPRESSION\",\n  \"X_TRANSITION_INVALID_CHILDREN\": 62,\n  \"62\": \"X_TRANSITION_INVALID_CHILDREN\",\n  \"X_IGNORED_SIDE_EFFECT_TAG\": 63,\n  \"63\": \"X_IGNORED_SIDE_EFFECT_TAG\",\n  \"__EXTEND_POINT__\": 64,\n  \"64\": \"__EXTEND_POINT__\"\n};\nconst DOMErrorMessages = {\n  [53]: `v-html is missing expression.`,\n  [54]: `v-html will override element children.`,\n  [55]: `v-text is missing expression.`,\n  [56]: `v-text will override element children.`,\n  [57]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [58]: `v-model argument is not supported on plain elements.`,\n  [59]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [60]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [61]: `v-show is missing expression.`,\n  [62]: `<Transition> expects exactly one child element or component.`,\n  [63]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n};\n\nconst transformVHtml = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(53, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(54, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      compilerCore.createObjectProperty(\n        compilerCore.createSimpleExpression(`innerHTML`, true, loc),\n        exp || compilerCore.createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformVText = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(55, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(56, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      compilerCore.createObjectProperty(\n        compilerCore.createSimpleExpression(`textContent`, true),\n        exp ? compilerCore.getConstantType(exp, context) > 0 ? exp : compilerCore.createCallExpression(\n          context.helperString(compilerCore.TO_DISPLAY_STRING),\n          [exp],\n          loc\n        ) : compilerCore.createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformModel = (dir, node, context) => {\n  const baseResult = compilerCore.transformModel(dir, node, context);\n  if (!baseResult.props.length || node.tagType === 1) {\n    return baseResult;\n  }\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        58,\n        dir.arg.loc\n      )\n    );\n  }\n  const { tag } = node;\n  const isCustomElement = context.isCustomElement(tag);\n  if (tag === \"input\" || tag === \"textarea\" || tag === \"select\" || isCustomElement) {\n    let directiveToUse = V_MODEL_TEXT;\n    let isInvalidType = false;\n    if (tag === \"input\" || isCustomElement) {\n      const type = compilerCore.findProp(node, `type`);\n      if (type) {\n        if (type.type === 7) {\n          directiveToUse = V_MODEL_DYNAMIC;\n        } else if (type.value) {\n          switch (type.value.content) {\n            case \"radio\":\n              directiveToUse = V_MODEL_RADIO;\n              break;\n            case \"checkbox\":\n              directiveToUse = V_MODEL_CHECKBOX;\n              break;\n            case \"file\":\n              isInvalidType = true;\n              context.onError(\n                createDOMCompilerError(\n                  59,\n                  dir.loc\n                )\n              );\n              break;\n          }\n        }\n      } else if (compilerCore.hasDynamicKeyVBind(node)) {\n        directiveToUse = V_MODEL_DYNAMIC;\n      } else ;\n    } else if (tag === \"select\") {\n      directiveToUse = V_MODEL_SELECT;\n    } else ;\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse);\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        57,\n        dir.loc\n      )\n    );\n  }\n  baseResult.props = baseResult.props.filter(\n    (p) => !(p.key.type === 4 && p.key.content === \"modelValue\")\n  );\n  return baseResult;\n};\n\nconst isEventOptionModifier = /* @__PURE__ */ shared.makeMap(`passive,once,capture`);\nconst isNonKeyModifier = /* @__PURE__ */ shared.makeMap(\n  // event propagation management\n  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`\n);\nconst maybeKeyModifier = /* @__PURE__ */ shared.makeMap(\"left,right\");\nconst isKeyboardEvent = /* @__PURE__ */ shared.makeMap(\n  `onkeyup,onkeydown,onkeypress`,\n  true\n);\nconst resolveModifiers = (key, modifiers, context, loc) => {\n  const keyModifiers = [];\n  const nonKeyModifiers = [];\n  const eventOptionModifiers = [];\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i].content;\n    if (modifier === \"native\" && compilerCore.checkCompatEnabled(\n      \"COMPILER_V_ON_NATIVE\",\n      context,\n      loc\n    )) {\n      eventOptionModifiers.push(modifier);\n    } else if (isEventOptionModifier(modifier)) {\n      eventOptionModifiers.push(modifier);\n    } else {\n      if (maybeKeyModifier(modifier)) {\n        if (compilerCore.isStaticExp(key)) {\n          if (isKeyboardEvent(key.content)) {\n            keyModifiers.push(modifier);\n          } else {\n            nonKeyModifiers.push(modifier);\n          }\n        } else {\n          keyModifiers.push(modifier);\n          nonKeyModifiers.push(modifier);\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier);\n        } else {\n          keyModifiers.push(modifier);\n        }\n      }\n    }\n  }\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  };\n};\nconst transformClick = (key, event) => {\n  const isStaticClick = compilerCore.isStaticExp(key) && key.content.toLowerCase() === \"onclick\";\n  return isStaticClick ? compilerCore.createSimpleExpression(event, true) : key.type !== 4 ? compilerCore.createCompoundExpression([\n    `(`,\n    key,\n    `) === \"onClick\" ? \"${event}\" : (`,\n    key,\n    `)`\n  ]) : key;\n};\nconst transformOn = (dir, node, context) => {\n  return compilerCore.transformOn(dir, node, context, (baseResult) => {\n    const { modifiers } = dir;\n    if (!modifiers.length) return baseResult;\n    let { key, value: handlerExp } = baseResult.props[0];\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\n    if (nonKeyModifiers.includes(\"right\")) {\n      key = transformClick(key, `onContextmenu`);\n    }\n    if (nonKeyModifiers.includes(\"middle\")) {\n      key = transformClick(key, `onMouseup`);\n    }\n    if (nonKeyModifiers.length) {\n      handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ]);\n    }\n    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard\n    (!compilerCore.isStaticExp(key) || isKeyboardEvent(key.content))) {\n      handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ]);\n    }\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(shared.capitalize).join(\"\");\n      key = compilerCore.isStaticExp(key) ? compilerCore.createSimpleExpression(`${key.content}${modifierPostfix}`, true) : compilerCore.createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\n    }\n    return {\n      props: [compilerCore.createObjectProperty(key, handlerExp)]\n    };\n  });\n};\n\nconst transformShow = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(61, loc)\n    );\n  }\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  };\n};\n\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\nconst stringifyStatic = (children, context, parent) => {\n  if (context.scopes.vSlot > 0) {\n    return;\n  }\n  const isParentCached = parent.type === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !shared.isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 20;\n  let nc = 0;\n  let ec = 0;\n  const currentChunk = [];\n  const stringifyCurrentChunk = (currentIndex) => {\n    if (nc >= 20 || ec >= 5) {\n      const staticCall = compilerCore.createCallExpression(context.helper(compilerCore.CREATE_STATIC), [\n        JSON.stringify(\n          currentChunk.map((node) => stringifyNode(node, context)).join(\"\")\n        ).replace(expReplaceRE, `\" + $1 + \"`),\n        // the 2nd argument indicates the number of DOM nodes this static vnode\n        // will insert / hydrate\n        String(currentChunk.length)\n      ]);\n      if (isParentCached) {\n        parent.codegenNode.children.value = compilerCore.createArrayExpression([staticCall]);\n      } else {\n        currentChunk[0].codegenNode.value = staticCall;\n        if (currentChunk.length > 1) {\n          const deleteCount = currentChunk.length - 1;\n          children.splice(currentIndex - currentChunk.length + 1, deleteCount);\n          const cacheIndex = context.cached.indexOf(\n            currentChunk[currentChunk.length - 1].codegenNode\n          );\n          if (cacheIndex > -1) {\n            for (let i2 = cacheIndex; i2 < context.cached.length; i2++) {\n              const c = context.cached[i2];\n              if (c) c.index -= deleteCount;\n            }\n            context.cached.splice(cacheIndex - deleteCount + 1, deleteCount);\n          }\n          return deleteCount;\n        }\n      }\n    }\n    return 0;\n  };\n  let i = 0;\n  for (; i < children.length; i++) {\n    const child = children[i];\n    const isCached = isParentCached || getCachedNode(child);\n    if (isCached) {\n      const result = analyzeNode(child);\n      if (result) {\n        nc += result[0];\n        ec += result[1];\n        currentChunk.push(child);\n        continue;\n      }\n    }\n    i -= stringifyCurrentChunk(i);\n    nc = 0;\n    ec = 0;\n    currentChunk.length = 0;\n  }\n  stringifyCurrentChunk(i);\n};\nconst getCachedNode = (node) => {\n  if ((node.type === 1 && node.tagType === 0 || node.type === 12) && node.codegenNode && node.codegenNode.type === 20) {\n    return node.codegenNode;\n  }\n};\nconst dataAriaRE = /^(data|aria)-/;\nconst isStringifiableAttr = (name, ns) => {\n  return (ns === 0 ? shared.isKnownHtmlAttr(name) : ns === 1 ? shared.isKnownSvgAttr(name) : false) || dataAriaRE.test(name);\n};\nconst isNonStringifiable = /* @__PURE__ */ shared.makeMap(\n  `caption,thead,tr,th,tbody,td,tfoot,colgroup,col`\n);\nfunction analyzeNode(node) {\n  if (node.type === 1 && isNonStringifiable(node.tag)) {\n    return false;\n  }\n  if (node.type === 12) {\n    return [1, 0];\n  }\n  let nc = 1;\n  let ec = node.props.length > 0 ? 1 : 0;\n  let bailed = false;\n  const bail = () => {\n    bailed = true;\n    return false;\n  };\n  function walk(node2) {\n    const isOptionTag = node2.tag === \"option\" && node2.ns === 0;\n    for (let i = 0; i < node2.props.length; i++) {\n      const p = node2.props[i];\n      if (p.type === 6 && !isStringifiableAttr(p.name, node2.ns)) {\n        return bail();\n      }\n      if (p.type === 7 && p.name === \"bind\") {\n        if (p.arg && (p.arg.type === 8 || p.arg.isStatic && !isStringifiableAttr(p.arg.content, node2.ns))) {\n          return bail();\n        }\n        if (p.exp && (p.exp.type === 8 || p.exp.constType < 3)) {\n          return bail();\n        }\n        if (isOptionTag && compilerCore.isStaticArgOf(p.arg, \"value\") && p.exp && p.exp.ast && p.exp.ast.type !== \"StringLiteral\") {\n          return bail();\n        }\n      }\n    }\n    for (let i = 0; i < node2.children.length; i++) {\n      nc++;\n      const child = node2.children[i];\n      if (child.type === 1) {\n        if (child.props.length > 0) {\n          ec++;\n        }\n        walk(child);\n        if (bailed) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return walk(node) ? [nc, ec] : false;\n}\nfunction stringifyNode(node, context) {\n  if (shared.isString(node)) {\n    return node;\n  }\n  if (shared.isSymbol(node)) {\n    return ``;\n  }\n  switch (node.type) {\n    case 1:\n      return stringifyElement(node, context);\n    case 2:\n      return shared.escapeHtml(node.content);\n    case 3:\n      return `<!--${shared.escapeHtml(node.content)}-->`;\n    case 5:\n      return shared.escapeHtml(shared.toDisplayString(evaluateConstant(node.content)));\n    case 8:\n      return shared.escapeHtml(evaluateConstant(node));\n    case 12:\n      return stringifyNode(node.content, context);\n    default:\n      return \"\";\n  }\n}\nfunction stringifyElement(node, context) {\n  let res = `<${node.tag}`;\n  let innerHTML = \"\";\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      res += ` ${p.name}`;\n      if (p.value) {\n        res += `=\"${shared.escapeHtml(p.value.content)}\"`;\n      }\n    } else if (p.type === 7) {\n      if (p.name === \"bind\") {\n        const exp = p.exp;\n        if (exp.content[0] === \"_\") {\n          res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\n          continue;\n        }\n        if (shared.isBooleanAttr(p.arg.content) && exp.content === \"false\") {\n          continue;\n        }\n        let evaluated = evaluateConstant(exp);\n        if (evaluated != null) {\n          const arg = p.arg && p.arg.content;\n          if (arg === \"class\") {\n            evaluated = shared.normalizeClass(evaluated);\n          } else if (arg === \"style\") {\n            evaluated = shared.stringifyStyle(shared.normalizeStyle(evaluated));\n          }\n          res += ` ${p.arg.content}=\"${shared.escapeHtml(\n            evaluated\n          )}\"`;\n        }\n      } else if (p.name === \"html\") {\n        innerHTML = evaluateConstant(p.exp);\n      } else if (p.name === \"text\") {\n        innerHTML = shared.escapeHtml(\n          shared.toDisplayString(evaluateConstant(p.exp))\n        );\n      }\n    }\n  }\n  if (context.scopeId) {\n    res += ` ${context.scopeId}`;\n  }\n  res += `>`;\n  if (innerHTML) {\n    res += innerHTML;\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      res += stringifyNode(node.children[i], context);\n    }\n  }\n  if (!shared.isVoidTag(node.tag)) {\n    res += `</${node.tag}>`;\n  }\n  return res;\n}\nfunction evaluateConstant(exp) {\n  if (exp.type === 4) {\n    return new Function(`return (${exp.content})`)();\n  } else {\n    let res = ``;\n    exp.children.forEach((c) => {\n      if (shared.isString(c) || shared.isSymbol(c)) {\n        return;\n      }\n      if (c.type === 2) {\n        res += c.content;\n      } else if (c.type === 5) {\n        res += shared.toDisplayString(evaluateConstant(c.content));\n      } else {\n        res += evaluateConstant(c);\n      }\n    });\n    return res;\n  }\n}\n\nconst ignoreSideEffectTags = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && (node.tag === \"script\" || node.tag === \"style\")) {\n    context.removeNode();\n  }\n};\n\nconst DOMNodeTransforms = [\n  transformStyle,\n  ...[]\n];\nconst DOMDirectiveTransforms = {\n  cloak: compilerCore.noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel,\n  // override compiler-core\n  on: transformOn,\n  // override compiler-core\n  show: transformShow\n};\nfunction compile(src, options = {}) {\n  return compilerCore.baseCompile(\n    src,\n    shared.extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...options.nodeTransforms || []\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {}\n      ),\n      transformHoist: stringifyStatic\n    })\n  );\n}\nfunction parse(template, options = {}) {\n  return compilerCore.baseParse(template, shared.extend({}, parserOptions, options));\n}\n\nexports.DOMDirectiveTransforms = DOMDirectiveTransforms;\nexports.DOMErrorCodes = DOMErrorCodes;\nexports.DOMErrorMessages = DOMErrorMessages;\nexports.DOMNodeTransforms = DOMNodeTransforms;\nexports.TRANSITION = TRANSITION;\nexports.TRANSITION_GROUP = TRANSITION_GROUP;\nexports.V_MODEL_CHECKBOX = V_MODEL_CHECKBOX;\nexports.V_MODEL_DYNAMIC = V_MODEL_DYNAMIC;\nexports.V_MODEL_RADIO = V_MODEL_RADIO;\nexports.V_MODEL_SELECT = V_MODEL_SELECT;\nexports.V_MODEL_TEXT = V_MODEL_TEXT;\nexports.V_ON_WITH_KEYS = V_ON_WITH_KEYS;\nexports.V_ON_WITH_MODIFIERS = V_ON_WITH_MODIFIERS;\nexports.V_SHOW = V_SHOW;\nexports.compile = compile;\nexports.createDOMCompilerError = createDOMCompilerError;\nexports.parse = parse;\nexports.parserOptions = parserOptions;\nexports.transformStyle = transformStyle;\nObject.keys(compilerCore).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = compilerCore[k];\n});\n","/**\n* @vue/compiler-dom v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerCore = require('@vue/compiler-core');\nvar shared = require('@vue/shared');\n\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\nconst V_MODEL_CHECKBOX = Symbol(\n  `vModelCheckbox` \n);\nconst V_MODEL_TEXT = Symbol(`vModelText` );\nconst V_MODEL_SELECT = Symbol(\n  `vModelSelect` \n);\nconst V_MODEL_DYNAMIC = Symbol(\n  `vModelDynamic` \n);\nconst V_ON_WITH_MODIFIERS = Symbol(\n  `vOnModifiersGuard` \n);\nconst V_ON_WITH_KEYS = Symbol(\n  `vOnKeysGuard` \n);\nconst V_SHOW = Symbol(`vShow` );\nconst TRANSITION = Symbol(`Transition` );\nconst TRANSITION_GROUP = Symbol(\n  `TransitionGroup` \n);\ncompilerCore.registerRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n});\n\nconst parserOptions = {\n  parseMode: \"html\",\n  isVoidTag: shared.isVoidTag,\n  isNativeTag: (tag) => shared.isHTMLTag(tag) || shared.isSVGTag(tag) || shared.isMathMLTag(tag),\n  isPreTag: (tag) => tag === \"pre\",\n  decodeEntities: void 0,\n  isBuiltInComponent: (tag) => {\n    if (tag === \"Transition\" || tag === \"transition\") {\n      return TRANSITION;\n    } else if (tag === \"TransitionGroup\" || tag === \"transition-group\") {\n      return TRANSITION_GROUP;\n    }\n  },\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent, rootNamespace) {\n    let ns = parent ? parent.ns : rootNamespace;\n    if (parent && ns === 2) {\n      if (parent.tag === \"annotation-xml\") {\n        if (tag === \"svg\") {\n          return 1;\n        }\n        if (parent.props.some(\n          (a) => a.type === 6 && a.name === \"encoding\" && a.value != null && (a.value.content === \"text/html\" || a.value.content === \"application/xhtml+xml\")\n        )) {\n          ns = 0;\n        }\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== \"mglyph\" && tag !== \"malignmark\") {\n        ns = 0;\n      }\n    } else if (parent && ns === 1) {\n      if (parent.tag === \"foreignObject\" || parent.tag === \"desc\" || parent.tag === \"title\") {\n        ns = 0;\n      }\n    }\n    if (ns === 0) {\n      if (tag === \"svg\") {\n        return 1;\n      }\n      if (tag === \"math\") {\n        return 2;\n      }\n    }\n    return ns;\n  }\n};\n\nconst transformStyle = (node) => {\n  if (node.type === 1) {\n    node.props.forEach((p, i) => {\n      if (p.type === 6 && p.name === \"style\" && p.value) {\n        node.props[i] = {\n          type: 7,\n          name: `bind`,\n          arg: compilerCore.createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        };\n      }\n    });\n  }\n};\nconst parseInlineCSS = (cssText, loc) => {\n  const normalized = shared.parseStringStyle(cssText);\n  return compilerCore.createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    3\n  );\n};\n\nfunction createDOMCompilerError(code, loc) {\n  return compilerCore.createCompilerError(\n    code,\n    loc,\n    DOMErrorMessages \n  );\n}\nconst DOMErrorCodes = {\n  \"X_V_HTML_NO_EXPRESSION\": 53,\n  \"53\": \"X_V_HTML_NO_EXPRESSION\",\n  \"X_V_HTML_WITH_CHILDREN\": 54,\n  \"54\": \"X_V_HTML_WITH_CHILDREN\",\n  \"X_V_TEXT_NO_EXPRESSION\": 55,\n  \"55\": \"X_V_TEXT_NO_EXPRESSION\",\n  \"X_V_TEXT_WITH_CHILDREN\": 56,\n  \"56\": \"X_V_TEXT_WITH_CHILDREN\",\n  \"X_V_MODEL_ON_INVALID_ELEMENT\": 57,\n  \"57\": \"X_V_MODEL_ON_INVALID_ELEMENT\",\n  \"X_V_MODEL_ARG_ON_ELEMENT\": 58,\n  \"58\": \"X_V_MODEL_ARG_ON_ELEMENT\",\n  \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\": 59,\n  \"59\": \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\",\n  \"X_V_MODEL_UNNECESSARY_VALUE\": 60,\n  \"60\": \"X_V_MODEL_UNNECESSARY_VALUE\",\n  \"X_V_SHOW_NO_EXPRESSION\": 61,\n  \"61\": \"X_V_SHOW_NO_EXPRESSION\",\n  \"X_TRANSITION_INVALID_CHILDREN\": 62,\n  \"62\": \"X_TRANSITION_INVALID_CHILDREN\",\n  \"X_IGNORED_SIDE_EFFECT_TAG\": 63,\n  \"63\": \"X_IGNORED_SIDE_EFFECT_TAG\",\n  \"__EXTEND_POINT__\": 64,\n  \"64\": \"__EXTEND_POINT__\"\n};\nconst DOMErrorMessages = {\n  [53]: `v-html is missing expression.`,\n  [54]: `v-html will override element children.`,\n  [55]: `v-text is missing expression.`,\n  [56]: `v-text will override element children.`,\n  [57]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [58]: `v-model argument is not supported on plain elements.`,\n  [59]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [60]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [61]: `v-show is missing expression.`,\n  [62]: `<Transition> expects exactly one child element or component.`,\n  [63]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n};\n\nconst transformVHtml = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(53, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(54, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      compilerCore.createObjectProperty(\n        compilerCore.createSimpleExpression(`innerHTML`, true, loc),\n        exp || compilerCore.createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformVText = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(55, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(56, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      compilerCore.createObjectProperty(\n        compilerCore.createSimpleExpression(`textContent`, true),\n        exp ? compilerCore.getConstantType(exp, context) > 0 ? exp : compilerCore.createCallExpression(\n          context.helperString(compilerCore.TO_DISPLAY_STRING),\n          [exp],\n          loc\n        ) : compilerCore.createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformModel = (dir, node, context) => {\n  const baseResult = compilerCore.transformModel(dir, node, context);\n  if (!baseResult.props.length || node.tagType === 1) {\n    return baseResult;\n  }\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        58,\n        dir.arg.loc\n      )\n    );\n  }\n  function checkDuplicatedValue() {\n    const value = compilerCore.findDir(node, \"bind\");\n    if (value && compilerCore.isStaticArgOf(value.arg, \"value\")) {\n      context.onError(\n        createDOMCompilerError(\n          60,\n          value.loc\n        )\n      );\n    }\n  }\n  const { tag } = node;\n  const isCustomElement = context.isCustomElement(tag);\n  if (tag === \"input\" || tag === \"textarea\" || tag === \"select\" || isCustomElement) {\n    let directiveToUse = V_MODEL_TEXT;\n    let isInvalidType = false;\n    if (tag === \"input\" || isCustomElement) {\n      const type = compilerCore.findProp(node, `type`);\n      if (type) {\n        if (type.type === 7) {\n          directiveToUse = V_MODEL_DYNAMIC;\n        } else if (type.value) {\n          switch (type.value.content) {\n            case \"radio\":\n              directiveToUse = V_MODEL_RADIO;\n              break;\n            case \"checkbox\":\n              directiveToUse = V_MODEL_CHECKBOX;\n              break;\n            case \"file\":\n              isInvalidType = true;\n              context.onError(\n                createDOMCompilerError(\n                  59,\n                  dir.loc\n                )\n              );\n              break;\n            default:\n              checkDuplicatedValue();\n              break;\n          }\n        }\n      } else if (compilerCore.hasDynamicKeyVBind(node)) {\n        directiveToUse = V_MODEL_DYNAMIC;\n      } else {\n        checkDuplicatedValue();\n      }\n    } else if (tag === \"select\") {\n      directiveToUse = V_MODEL_SELECT;\n    } else {\n      checkDuplicatedValue();\n    }\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse);\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        57,\n        dir.loc\n      )\n    );\n  }\n  baseResult.props = baseResult.props.filter(\n    (p) => !(p.key.type === 4 && p.key.content === \"modelValue\")\n  );\n  return baseResult;\n};\n\nconst isEventOptionModifier = /* @__PURE__ */ shared.makeMap(`passive,once,capture`);\nconst isNonKeyModifier = /* @__PURE__ */ shared.makeMap(\n  // event propagation management\n  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`\n);\nconst maybeKeyModifier = /* @__PURE__ */ shared.makeMap(\"left,right\");\nconst isKeyboardEvent = /* @__PURE__ */ shared.makeMap(\n  `onkeyup,onkeydown,onkeypress`,\n  true\n);\nconst resolveModifiers = (key, modifiers, context, loc) => {\n  const keyModifiers = [];\n  const nonKeyModifiers = [];\n  const eventOptionModifiers = [];\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i].content;\n    if (modifier === \"native\" && compilerCore.checkCompatEnabled(\n      \"COMPILER_V_ON_NATIVE\",\n      context,\n      loc\n    )) {\n      eventOptionModifiers.push(modifier);\n    } else if (isEventOptionModifier(modifier)) {\n      eventOptionModifiers.push(modifier);\n    } else {\n      if (maybeKeyModifier(modifier)) {\n        if (compilerCore.isStaticExp(key)) {\n          if (isKeyboardEvent(key.content)) {\n            keyModifiers.push(modifier);\n          } else {\n            nonKeyModifiers.push(modifier);\n          }\n        } else {\n          keyModifiers.push(modifier);\n          nonKeyModifiers.push(modifier);\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier);\n        } else {\n          keyModifiers.push(modifier);\n        }\n      }\n    }\n  }\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  };\n};\nconst transformClick = (key, event) => {\n  const isStaticClick = compilerCore.isStaticExp(key) && key.content.toLowerCase() === \"onclick\";\n  return isStaticClick ? compilerCore.createSimpleExpression(event, true) : key.type !== 4 ? compilerCore.createCompoundExpression([\n    `(`,\n    key,\n    `) === \"onClick\" ? \"${event}\" : (`,\n    key,\n    `)`\n  ]) : key;\n};\nconst transformOn = (dir, node, context) => {\n  return compilerCore.transformOn(dir, node, context, (baseResult) => {\n    const { modifiers } = dir;\n    if (!modifiers.length) return baseResult;\n    let { key, value: handlerExp } = baseResult.props[0];\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\n    if (nonKeyModifiers.includes(\"right\")) {\n      key = transformClick(key, `onContextmenu`);\n    }\n    if (nonKeyModifiers.includes(\"middle\")) {\n      key = transformClick(key, `onMouseup`);\n    }\n    if (nonKeyModifiers.length) {\n      handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ]);\n    }\n    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard\n    (!compilerCore.isStaticExp(key) || isKeyboardEvent(key.content))) {\n      handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ]);\n    }\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(shared.capitalize).join(\"\");\n      key = compilerCore.isStaticExp(key) ? compilerCore.createSimpleExpression(`${key.content}${modifierPostfix}`, true) : compilerCore.createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\n    }\n    return {\n      props: [compilerCore.createObjectProperty(key, handlerExp)]\n    };\n  });\n};\n\nconst transformShow = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(61, loc)\n    );\n  }\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  };\n};\n\nconst transformTransition = (node, context) => {\n  if (node.type === 1 && node.tagType === 1) {\n    const component = context.isBuiltInComponent(node.tag);\n    if (component === TRANSITION) {\n      return () => {\n        if (!node.children.length) {\n          return;\n        }\n        if (hasMultipleChildren(node)) {\n          context.onError(\n            createDOMCompilerError(\n              62,\n              {\n                start: node.children[0].loc.start,\n                end: node.children[node.children.length - 1].loc.end,\n                source: \"\"\n              }\n            )\n          );\n        }\n        const child = node.children[0];\n        if (child.type === 1) {\n          for (const p of child.props) {\n            if (p.type === 7 && p.name === \"show\") {\n              node.props.push({\n                type: 6,\n                name: \"persisted\",\n                nameLoc: node.loc,\n                value: void 0,\n                loc: node.loc\n              });\n            }\n          }\n        }\n      };\n    }\n  }\n};\nfunction hasMultipleChildren(node) {\n  const children = node.children = node.children.filter(\n    (c) => c.type !== 3 && !(c.type === 2 && !c.content.trim())\n  );\n  const child = children[0];\n  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);\n}\n\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\nconst stringifyStatic = (children, context, parent) => {\n  if (context.scopes.vSlot > 0) {\n    return;\n  }\n  const isParentCached = parent.type === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !shared.isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 20;\n  let nc = 0;\n  let ec = 0;\n  const currentChunk = [];\n  const stringifyCurrentChunk = (currentIndex) => {\n    if (nc >= 20 || ec >= 5) {\n      const staticCall = compilerCore.createCallExpression(context.helper(compilerCore.CREATE_STATIC), [\n        JSON.stringify(\n          currentChunk.map((node) => stringifyNode(node, context)).join(\"\")\n        ).replace(expReplaceRE, `\" + $1 + \"`),\n        // the 2nd argument indicates the number of DOM nodes this static vnode\n        // will insert / hydrate\n        String(currentChunk.length)\n      ]);\n      if (isParentCached) {\n        parent.codegenNode.children.value = compilerCore.createArrayExpression([staticCall]);\n      } else {\n        currentChunk[0].codegenNode.value = staticCall;\n        if (currentChunk.length > 1) {\n          const deleteCount = currentChunk.length - 1;\n          children.splice(currentIndex - currentChunk.length + 1, deleteCount);\n          const cacheIndex = context.cached.indexOf(\n            currentChunk[currentChunk.length - 1].codegenNode\n          );\n          if (cacheIndex > -1) {\n            for (let i2 = cacheIndex; i2 < context.cached.length; i2++) {\n              const c = context.cached[i2];\n              if (c) c.index -= deleteCount;\n            }\n            context.cached.splice(cacheIndex - deleteCount + 1, deleteCount);\n          }\n          return deleteCount;\n        }\n      }\n    }\n    return 0;\n  };\n  let i = 0;\n  for (; i < children.length; i++) {\n    const child = children[i];\n    const isCached = isParentCached || getCachedNode(child);\n    if (isCached) {\n      const result = analyzeNode(child);\n      if (result) {\n        nc += result[0];\n        ec += result[1];\n        currentChunk.push(child);\n        continue;\n      }\n    }\n    i -= stringifyCurrentChunk(i);\n    nc = 0;\n    ec = 0;\n    currentChunk.length = 0;\n  }\n  stringifyCurrentChunk(i);\n};\nconst getCachedNode = (node) => {\n  if ((node.type === 1 && node.tagType === 0 || node.type === 12) && node.codegenNode && node.codegenNode.type === 20) {\n    return node.codegenNode;\n  }\n};\nconst dataAriaRE = /^(data|aria)-/;\nconst isStringifiableAttr = (name, ns) => {\n  return (ns === 0 ? shared.isKnownHtmlAttr(name) : ns === 1 ? shared.isKnownSvgAttr(name) : false) || dataAriaRE.test(name);\n};\nconst isNonStringifiable = /* @__PURE__ */ shared.makeMap(\n  `caption,thead,tr,th,tbody,td,tfoot,colgroup,col`\n);\nfunction analyzeNode(node) {\n  if (node.type === 1 && isNonStringifiable(node.tag)) {\n    return false;\n  }\n  if (node.type === 12) {\n    return [1, 0];\n  }\n  let nc = 1;\n  let ec = node.props.length > 0 ? 1 : 0;\n  let bailed = false;\n  const bail = () => {\n    bailed = true;\n    return false;\n  };\n  function walk(node2) {\n    const isOptionTag = node2.tag === \"option\" && node2.ns === 0;\n    for (let i = 0; i < node2.props.length; i++) {\n      const p = node2.props[i];\n      if (p.type === 6 && !isStringifiableAttr(p.name, node2.ns)) {\n        return bail();\n      }\n      if (p.type === 7 && p.name === \"bind\") {\n        if (p.arg && (p.arg.type === 8 || p.arg.isStatic && !isStringifiableAttr(p.arg.content, node2.ns))) {\n          return bail();\n        }\n        if (p.exp && (p.exp.type === 8 || p.exp.constType < 3)) {\n          return bail();\n        }\n        if (isOptionTag && compilerCore.isStaticArgOf(p.arg, \"value\") && p.exp && p.exp.ast && p.exp.ast.type !== \"StringLiteral\") {\n          return bail();\n        }\n      }\n    }\n    for (let i = 0; i < node2.children.length; i++) {\n      nc++;\n      const child = node2.children[i];\n      if (child.type === 1) {\n        if (child.props.length > 0) {\n          ec++;\n        }\n        walk(child);\n        if (bailed) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return walk(node) ? [nc, ec] : false;\n}\nfunction stringifyNode(node, context) {\n  if (shared.isString(node)) {\n    return node;\n  }\n  if (shared.isSymbol(node)) {\n    return ``;\n  }\n  switch (node.type) {\n    case 1:\n      return stringifyElement(node, context);\n    case 2:\n      return shared.escapeHtml(node.content);\n    case 3:\n      return `<!--${shared.escapeHtml(node.content)}-->`;\n    case 5:\n      return shared.escapeHtml(shared.toDisplayString(evaluateConstant(node.content)));\n    case 8:\n      return shared.escapeHtml(evaluateConstant(node));\n    case 12:\n      return stringifyNode(node.content, context);\n    default:\n      return \"\";\n  }\n}\nfunction stringifyElement(node, context) {\n  let res = `<${node.tag}`;\n  let innerHTML = \"\";\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      res += ` ${p.name}`;\n      if (p.value) {\n        res += `=\"${shared.escapeHtml(p.value.content)}\"`;\n      }\n    } else if (p.type === 7) {\n      if (p.name === \"bind\") {\n        const exp = p.exp;\n        if (exp.content[0] === \"_\") {\n          res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\n          continue;\n        }\n        if (shared.isBooleanAttr(p.arg.content) && exp.content === \"false\") {\n          continue;\n        }\n        let evaluated = evaluateConstant(exp);\n        if (evaluated != null) {\n          const arg = p.arg && p.arg.content;\n          if (arg === \"class\") {\n            evaluated = shared.normalizeClass(evaluated);\n          } else if (arg === \"style\") {\n            evaluated = shared.stringifyStyle(shared.normalizeStyle(evaluated));\n          }\n          res += ` ${p.arg.content}=\"${shared.escapeHtml(\n            evaluated\n          )}\"`;\n        }\n      } else if (p.name === \"html\") {\n        innerHTML = evaluateConstant(p.exp);\n      } else if (p.name === \"text\") {\n        innerHTML = shared.escapeHtml(\n          shared.toDisplayString(evaluateConstant(p.exp))\n        );\n      }\n    }\n  }\n  if (context.scopeId) {\n    res += ` ${context.scopeId}`;\n  }\n  res += `>`;\n  if (innerHTML) {\n    res += innerHTML;\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      res += stringifyNode(node.children[i], context);\n    }\n  }\n  if (!shared.isVoidTag(node.tag)) {\n    res += `</${node.tag}>`;\n  }\n  return res;\n}\nfunction evaluateConstant(exp) {\n  if (exp.type === 4) {\n    return new Function(`return (${exp.content})`)();\n  } else {\n    let res = ``;\n    exp.children.forEach((c) => {\n      if (shared.isString(c) || shared.isSymbol(c)) {\n        return;\n      }\n      if (c.type === 2) {\n        res += c.content;\n      } else if (c.type === 5) {\n        res += shared.toDisplayString(evaluateConstant(c.content));\n      } else {\n        res += evaluateConstant(c);\n      }\n    });\n    return res;\n  }\n}\n\nconst ignoreSideEffectTags = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && (node.tag === \"script\" || node.tag === \"style\")) {\n    context.onError(\n      createDOMCompilerError(\n        63,\n        node.loc\n      )\n    );\n    context.removeNode();\n  }\n};\n\nfunction isValidHTMLNesting(parent, child) {\n  if (parent in onlyValidChildren) {\n    return onlyValidChildren[parent].has(child);\n  }\n  if (child in onlyValidParents) {\n    return onlyValidParents[child].has(parent);\n  }\n  if (parent in knownInvalidChildren) {\n    if (knownInvalidChildren[parent].has(child)) return false;\n  }\n  if (child in knownInvalidParents) {\n    if (knownInvalidParents[child].has(parent)) return false;\n  }\n  return true;\n}\nconst headings = /* @__PURE__ */ new Set([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]);\nconst emptySet = /* @__PURE__ */ new Set([]);\nconst onlyValidChildren = {\n  head: /* @__PURE__ */ new Set([\n    \"base\",\n    \"basefront\",\n    \"bgsound\",\n    \"link\",\n    \"meta\",\n    \"title\",\n    \"noscript\",\n    \"noframes\",\n    \"style\",\n    \"script\",\n    \"template\"\n  ]),\n  optgroup: /* @__PURE__ */ new Set([\"option\"]),\n  select: /* @__PURE__ */ new Set([\"optgroup\", \"option\", \"hr\"]),\n  // table\n  table: /* @__PURE__ */ new Set([\"caption\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"]),\n  tr: /* @__PURE__ */ new Set([\"td\", \"th\"]),\n  colgroup: /* @__PURE__ */ new Set([\"col\"]),\n  tbody: /* @__PURE__ */ new Set([\"tr\"]),\n  thead: /* @__PURE__ */ new Set([\"tr\"]),\n  tfoot: /* @__PURE__ */ new Set([\"tr\"]),\n  // these elements can not have any children elements\n  script: emptySet,\n  iframe: emptySet,\n  option: emptySet,\n  textarea: emptySet,\n  style: emptySet,\n  title: emptySet\n};\nconst onlyValidParents = {\n  // sections\n  html: emptySet,\n  body: /* @__PURE__ */ new Set([\"html\"]),\n  head: /* @__PURE__ */ new Set([\"html\"]),\n  // table\n  td: /* @__PURE__ */ new Set([\"tr\"]),\n  colgroup: /* @__PURE__ */ new Set([\"table\"]),\n  caption: /* @__PURE__ */ new Set([\"table\"]),\n  tbody: /* @__PURE__ */ new Set([\"table\"]),\n  tfoot: /* @__PURE__ */ new Set([\"table\"]),\n  col: /* @__PURE__ */ new Set([\"colgroup\"]),\n  th: /* @__PURE__ */ new Set([\"tr\"]),\n  thead: /* @__PURE__ */ new Set([\"table\"]),\n  tr: /* @__PURE__ */ new Set([\"tbody\", \"thead\", \"tfoot\"]),\n  // data list\n  dd: /* @__PURE__ */ new Set([\"dl\", \"div\"]),\n  dt: /* @__PURE__ */ new Set([\"dl\", \"div\"]),\n  // other\n  figcaption: /* @__PURE__ */ new Set([\"figure\"]),\n  // li: new Set([\"ul\", \"ol\"]),\n  summary: /* @__PURE__ */ new Set([\"details\"]),\n  area: /* @__PURE__ */ new Set([\"map\"])\n};\nconst knownInvalidChildren = {\n  p: /* @__PURE__ */ new Set([\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"blockquote\",\n    \"center\",\n    \"details\",\n    \"dialog\",\n    \"dir\",\n    \"div\",\n    \"dl\",\n    \"fieldset\",\n    \"figure\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"li\",\n    \"main\",\n    \"nav\",\n    \"menu\",\n    \"ol\",\n    \"p\",\n    \"pre\",\n    \"section\",\n    \"table\",\n    \"ul\"\n  ]),\n  svg: /* @__PURE__ */ new Set([\n    \"b\",\n    \"blockquote\",\n    \"br\",\n    \"code\",\n    \"dd\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"hr\",\n    \"i\",\n    \"img\",\n    \"li\",\n    \"menu\",\n    \"meta\",\n    \"ol\",\n    \"p\",\n    \"pre\",\n    \"ruby\",\n    \"s\",\n    \"small\",\n    \"span\",\n    \"strong\",\n    \"sub\",\n    \"sup\",\n    \"table\",\n    \"u\",\n    \"ul\",\n    \"var\"\n  ])\n};\nconst knownInvalidParents = {\n  a: /* @__PURE__ */ new Set([\"a\"]),\n  button: /* @__PURE__ */ new Set([\"button\"]),\n  dd: /* @__PURE__ */ new Set([\"dd\", \"dt\"]),\n  dt: /* @__PURE__ */ new Set([\"dd\", \"dt\"]),\n  form: /* @__PURE__ */ new Set([\"form\"]),\n  li: /* @__PURE__ */ new Set([\"li\"]),\n  h1: headings,\n  h2: headings,\n  h3: headings,\n  h4: headings,\n  h5: headings,\n  h6: headings\n};\n\nconst validateHtmlNesting = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && context.parent && context.parent.type === 1 && context.parent.tagType === 0 && !isValidHTMLNesting(context.parent.tag, node.tag)) {\n    const error = new SyntaxError(\n      `<${node.tag}> cannot be child of <${context.parent.tag}>, according to HTML specifications. This can cause hydration errors or potentially disrupt future functionality.`\n    );\n    error.loc = node.loc;\n    context.onWarn(error);\n  }\n};\n\nconst DOMNodeTransforms = [\n  transformStyle,\n  ...[transformTransition, validateHtmlNesting] \n];\nconst DOMDirectiveTransforms = {\n  cloak: compilerCore.noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel,\n  // override compiler-core\n  on: transformOn,\n  // override compiler-core\n  show: transformShow\n};\nfunction compile(src, options = {}) {\n  return compilerCore.baseCompile(\n    src,\n    shared.extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...options.nodeTransforms || []\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {}\n      ),\n      transformHoist: stringifyStatic\n    })\n  );\n}\nfunction parse(template, options = {}) {\n  return compilerCore.baseParse(template, shared.extend({}, parserOptions, options));\n}\n\nexports.DOMDirectiveTransforms = DOMDirectiveTransforms;\nexports.DOMErrorCodes = DOMErrorCodes;\nexports.DOMErrorMessages = DOMErrorMessages;\nexports.DOMNodeTransforms = DOMNodeTransforms;\nexports.TRANSITION = TRANSITION;\nexports.TRANSITION_GROUP = TRANSITION_GROUP;\nexports.V_MODEL_CHECKBOX = V_MODEL_CHECKBOX;\nexports.V_MODEL_DYNAMIC = V_MODEL_DYNAMIC;\nexports.V_MODEL_RADIO = V_MODEL_RADIO;\nexports.V_MODEL_SELECT = V_MODEL_SELECT;\nexports.V_MODEL_TEXT = V_MODEL_TEXT;\nexports.V_ON_WITH_KEYS = V_ON_WITH_KEYS;\nexports.V_ON_WITH_MODIFIERS = V_ON_WITH_MODIFIERS;\nexports.V_SHOW = V_SHOW;\nexports.compile = compile;\nexports.createDOMCompilerError = createDOMCompilerError;\nexports.parse = parse;\nexports.parserOptions = parserOptions;\nexports.transformStyle = transformStyle;\nObject.keys(compilerCore).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = compilerCore[k];\n});\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-dom.cjs.js')\n}\n","/**\n* @vue/reactivity v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this._isPaused = false;\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  pause() {\n    if (this._active) {\n      this._isPaused = true;\n      let i, l;\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].pause();\n        }\n      }\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].pause();\n      }\n    }\n  }\n  /**\n   * Resumes the effect scope, including all child scopes and effects.\n   */\n  resume() {\n    if (this._active) {\n      if (this._isPaused) {\n        this._isPaused = false;\n        let i, l;\n        if (this.scopes) {\n          for (i = 0, l = this.scopes.length; i < l; i++) {\n            this.scopes[i].resume();\n          }\n        }\n        for (i = 0, l = this.effects.length; i < l; i++) {\n          this.effects[i].resume();\n        }\n      }\n    }\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn, failSilently = false) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  }\n}\n\nlet activeSub;\nconst EffectFlags = {\n  \"ACTIVE\": 1,\n  \"1\": \"ACTIVE\",\n  \"RUNNING\": 2,\n  \"2\": \"RUNNING\",\n  \"TRACKING\": 4,\n  \"4\": \"TRACKING\",\n  \"NOTIFIED\": 8,\n  \"8\": \"NOTIFIED\",\n  \"DIRTY\": 16,\n  \"16\": \"DIRTY\",\n  \"ALLOW_RECURSE\": 32,\n  \"32\": \"ALLOW_RECURSE\",\n  \"PAUSED\": 64,\n  \"64\": \"PAUSED\"\n};\nconst pausedQueueEffects = /* @__PURE__ */ new WeakSet();\nclass ReactiveEffect {\n  constructor(fn) {\n    this.fn = fn;\n    /**\n     * @internal\n     */\n    this.deps = void 0;\n    /**\n     * @internal\n     */\n    this.depsTail = void 0;\n    /**\n     * @internal\n     */\n    this.flags = 1 | 4;\n    /**\n     * @internal\n     */\n    this.nextEffect = void 0;\n    /**\n     * @internal\n     */\n    this.cleanup = void 0;\n    this.scheduler = void 0;\n    if (activeEffectScope && activeEffectScope.active) {\n      activeEffectScope.effects.push(this);\n    }\n  }\n  pause() {\n    this.flags |= 64;\n  }\n  resume() {\n    if (this.flags & 64) {\n      this.flags &= ~64;\n      if (pausedQueueEffects.has(this)) {\n        pausedQueueEffects.delete(this);\n        this.trigger();\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  notify() {\n    if (this.flags & 2 && !(this.flags & 32)) {\n      return;\n    }\n    if (!(this.flags & 8)) {\n      this.flags |= 8;\n      this.nextEffect = batchedEffect;\n      batchedEffect = this;\n    }\n  }\n  run() {\n    if (!(this.flags & 1)) {\n      return this.fn();\n    }\n    this.flags |= 2;\n    cleanupEffect(this);\n    prepareDeps(this);\n    const prevEffect = activeSub;\n    const prevShouldTrack = shouldTrack;\n    activeSub = this;\n    shouldTrack = true;\n    try {\n      return this.fn();\n    } finally {\n      cleanupDeps(this);\n      activeSub = prevEffect;\n      shouldTrack = prevShouldTrack;\n      this.flags &= ~2;\n    }\n  }\n  stop() {\n    if (this.flags & 1) {\n      for (let link = this.deps; link; link = link.nextDep) {\n        removeSub(link);\n      }\n      this.deps = this.depsTail = void 0;\n      cleanupEffect(this);\n      this.onStop && this.onStop();\n      this.flags &= ~1;\n    }\n  }\n  trigger() {\n    if (this.flags & 64) {\n      pausedQueueEffects.add(this);\n    } else if (this.scheduler) {\n      this.scheduler();\n    } else {\n      this.runIfDirty();\n    }\n  }\n  /**\n   * @internal\n   */\n  runIfDirty() {\n    if (isDirty(this)) {\n      this.run();\n    }\n  }\n  get dirty() {\n    return isDirty(this);\n  }\n}\nlet batchDepth = 0;\nlet batchedEffect;\nfunction startBatch() {\n  batchDepth++;\n}\nfunction endBatch() {\n  if (--batchDepth > 0) {\n    return;\n  }\n  let error;\n  while (batchedEffect) {\n    let e = batchedEffect;\n    batchedEffect = void 0;\n    while (e) {\n      const next = e.nextEffect;\n      e.nextEffect = void 0;\n      e.flags &= ~8;\n      if (e.flags & 1) {\n        try {\n          e.trigger();\n        } catch (err) {\n          if (!error) error = err;\n        }\n      }\n      e = next;\n    }\n  }\n  if (error) throw error;\n}\nfunction prepareDeps(sub) {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    link.version = -1;\n    link.prevActiveLink = link.dep.activeLink;\n    link.dep.activeLink = link;\n  }\n}\nfunction cleanupDeps(sub) {\n  let head;\n  let tail = sub.depsTail;\n  for (let link = tail; link; link = link.prevDep) {\n    if (link.version === -1) {\n      if (link === tail) tail = link.prevDep;\n      removeSub(link);\n      removeDep(link);\n    } else {\n      head = link;\n    }\n    link.dep.activeLink = link.prevActiveLink;\n    link.prevActiveLink = void 0;\n  }\n  sub.deps = head;\n  sub.depsTail = tail;\n}\nfunction isDirty(sub) {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    if (link.dep.version !== link.version || link.dep.computed && refreshComputed(link.dep.computed) === false || link.dep.version !== link.version) {\n      return true;\n    }\n  }\n  if (sub._dirty) {\n    return true;\n  }\n  return false;\n}\nfunction refreshComputed(computed) {\n  if (computed.flags & 2) {\n    return false;\n  }\n  if (computed.flags & 4 && !(computed.flags & 16)) {\n    return;\n  }\n  computed.flags &= ~16;\n  if (computed.globalVersion === globalVersion) {\n    return;\n  }\n  computed.globalVersion = globalVersion;\n  const dep = computed.dep;\n  computed.flags |= 2;\n  if (dep.version > 0 && !computed.isSSR && !isDirty(computed)) {\n    computed.flags &= ~2;\n    return;\n  }\n  const prevSub = activeSub;\n  const prevShouldTrack = shouldTrack;\n  activeSub = computed;\n  shouldTrack = true;\n  try {\n    prepareDeps(computed);\n    const value = computed.fn(computed._value);\n    if (dep.version === 0 || shared.hasChanged(value, computed._value)) {\n      computed._value = value;\n      dep.version++;\n    }\n  } catch (err) {\n    dep.version++;\n    throw err;\n  } finally {\n    activeSub = prevSub;\n    shouldTrack = prevShouldTrack;\n    cleanupDeps(computed);\n    computed.flags &= ~2;\n  }\n}\nfunction removeSub(link) {\n  const { dep, prevSub, nextSub } = link;\n  if (prevSub) {\n    prevSub.nextSub = nextSub;\n    link.prevSub = void 0;\n  }\n  if (nextSub) {\n    nextSub.prevSub = prevSub;\n    link.nextSub = void 0;\n  }\n  if (dep.subs === link) {\n    dep.subs = prevSub;\n  }\n  if (!dep.subs && dep.computed) {\n    dep.computed.flags &= ~4;\n    for (let l = dep.computed.deps; l; l = l.nextDep) {\n      removeSub(l);\n    }\n  }\n}\nfunction removeDep(link) {\n  const { prevDep, nextDep } = link;\n  if (prevDep) {\n    prevDep.nextDep = nextDep;\n    link.prevDep = void 0;\n  }\n  if (nextDep) {\n    nextDep.prevDep = prevDep;\n    link.nextDep = void 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const e = new ReactiveEffect(fn);\n  if (options) {\n    shared.extend(e, options);\n  }\n  try {\n    e.run();\n  } catch (err) {\n    e.stop();\n    throw err;\n  }\n  const runner = e.run.bind(e);\n  runner.effect = e;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction onEffectCleanup(fn, failSilently = false) {\n  if (activeSub instanceof ReactiveEffect) {\n    activeSub.cleanup = fn;\n  }\n}\nfunction cleanupEffect(e) {\n  const { cleanup } = e;\n  e.cleanup = void 0;\n  if (cleanup) {\n    const prevSub = activeSub;\n    activeSub = void 0;\n    try {\n      cleanup();\n    } finally {\n      activeSub = prevSub;\n    }\n  }\n}\n\nlet globalVersion = 0;\nclass Dep {\n  constructor(computed) {\n    this.computed = computed;\n    this.version = 0;\n    /**\n     * Link between this dep and the current active effect\n     */\n    this.activeLink = void 0;\n    /**\n     * Doubly linked list representing the subscribing effects (tail)\n     */\n    this.subs = void 0;\n  }\n  track(debugInfo) {\n    if (!activeSub || !shouldTrack || activeSub === this.computed) {\n      return;\n    }\n    let link = this.activeLink;\n    if (link === void 0 || link.sub !== activeSub) {\n      link = this.activeLink = {\n        dep: this,\n        sub: activeSub,\n        version: this.version,\n        nextDep: void 0,\n        prevDep: void 0,\n        nextSub: void 0,\n        prevSub: void 0,\n        prevActiveLink: void 0\n      };\n      if (!activeSub.deps) {\n        activeSub.deps = activeSub.depsTail = link;\n      } else {\n        link.prevDep = activeSub.depsTail;\n        activeSub.depsTail.nextDep = link;\n        activeSub.depsTail = link;\n      }\n      if (activeSub.flags & 4) {\n        addSub(link);\n      }\n    } else if (link.version === -1) {\n      link.version = this.version;\n      if (link.nextDep) {\n        const next = link.nextDep;\n        next.prevDep = link.prevDep;\n        if (link.prevDep) {\n          link.prevDep.nextDep = next;\n        }\n        link.prevDep = activeSub.depsTail;\n        link.nextDep = void 0;\n        activeSub.depsTail.nextDep = link;\n        activeSub.depsTail = link;\n        if (activeSub.deps === link) {\n          activeSub.deps = next;\n        }\n      }\n    }\n    return link;\n  }\n  trigger(debugInfo) {\n    this.version++;\n    globalVersion++;\n    this.notify(debugInfo);\n  }\n  notify(debugInfo) {\n    startBatch();\n    try {\n      if (false) ;\n      for (let link = this.subs; link; link = link.prevSub) {\n        link.sub.notify();\n      }\n    } finally {\n      endBatch();\n    }\n  }\n}\nfunction addSub(link) {\n  const computed = link.dep.computed;\n  if (computed && !link.dep.subs) {\n    computed.flags |= 4 | 16;\n    for (let l = computed.deps; l; l = l.nextDep) {\n      addSub(l);\n    }\n  }\n  const currentTail = link.dep.subs;\n  if (currentTail !== link) {\n    link.prevSub = currentTail;\n    if (currentTail) currentTail.nextSub = link;\n  }\n  link.dep.subs = link;\n}\nconst targetMap = /* @__PURE__ */ new WeakMap();\nconst ITERATE_KEY = Symbol(\n  \"\"\n);\nconst MAP_KEY_ITERATE_KEY = Symbol(\n  \"\"\n);\nconst ARRAY_ITERATE_KEY = Symbol(\n  \"\"\n);\nfunction track(target, type, key) {\n  if (shouldTrack && activeSub) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = new Dep());\n    }\n    {\n      dep.track();\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    globalVersion++;\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else {\n    const targetIsArray = shared.isArray(target);\n    const isArrayIndex = targetIsArray && shared.isIntegerKey(key);\n    if (targetIsArray && key === \"length\") {\n      const newLength = Number(newValue);\n      depsMap.forEach((dep, key2) => {\n        if (key2 === \"length\" || key2 === ARRAY_ITERATE_KEY || !shared.isSymbol(key2) && key2 >= newLength) {\n          deps.push(dep);\n        }\n      });\n    } else {\n      const push = (dep) => dep && deps.push(dep);\n      if (key !== void 0) {\n        push(depsMap.get(key));\n      }\n      if (isArrayIndex) {\n        push(depsMap.get(ARRAY_ITERATE_KEY));\n      }\n      switch (type) {\n        case \"add\":\n          if (!targetIsArray) {\n            push(depsMap.get(ITERATE_KEY));\n            if (shared.isMap(target)) {\n              push(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          } else if (isArrayIndex) {\n            push(depsMap.get(\"length\"));\n          }\n          break;\n        case \"delete\":\n          if (!targetIsArray) {\n            push(depsMap.get(ITERATE_KEY));\n            if (shared.isMap(target)) {\n              push(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          }\n          break;\n        case \"set\":\n          if (shared.isMap(target)) {\n            push(depsMap.get(ITERATE_KEY));\n          }\n          break;\n      }\n    }\n  }\n  startBatch();\n  for (const dep of deps) {\n    {\n      dep.trigger();\n    }\n  }\n  endBatch();\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nfunction reactiveReadArray(array) {\n  const raw = toRaw(array);\n  if (raw === array) return raw;\n  track(raw, \"iterate\", ARRAY_ITERATE_KEY);\n  return isShallow(array) ? raw : raw.map(toReactive);\n}\nfunction shallowReadArray(arr) {\n  track(arr = toRaw(arr), \"iterate\", ARRAY_ITERATE_KEY);\n  return arr;\n}\nconst arrayInstrumentations = {\n  __proto__: null,\n  [Symbol.iterator]() {\n    return iterator(this, Symbol.iterator, toReactive);\n  },\n  concat(...args) {\n    return reactiveReadArray(this).concat(\n      ...args.map((x) => shared.isArray(x) ? reactiveReadArray(x) : x)\n    );\n  },\n  entries() {\n    return iterator(this, \"entries\", (value) => {\n      value[1] = toReactive(value[1]);\n      return value;\n    });\n  },\n  every(fn, thisArg) {\n    return apply(this, \"every\", fn, thisArg, void 0, arguments);\n  },\n  filter(fn, thisArg) {\n    return apply(this, \"filter\", fn, thisArg, (v) => v.map(toReactive), arguments);\n  },\n  find(fn, thisArg) {\n    return apply(this, \"find\", fn, thisArg, toReactive, arguments);\n  },\n  findIndex(fn, thisArg) {\n    return apply(this, \"findIndex\", fn, thisArg, void 0, arguments);\n  },\n  findLast(fn, thisArg) {\n    return apply(this, \"findLast\", fn, thisArg, toReactive, arguments);\n  },\n  findLastIndex(fn, thisArg) {\n    return apply(this, \"findLastIndex\", fn, thisArg, void 0, arguments);\n  },\n  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement\n  forEach(fn, thisArg) {\n    return apply(this, \"forEach\", fn, thisArg, void 0, arguments);\n  },\n  includes(...args) {\n    return searchProxy(this, \"includes\", args);\n  },\n  indexOf(...args) {\n    return searchProxy(this, \"indexOf\", args);\n  },\n  join(separator) {\n    return reactiveReadArray(this).join(separator);\n  },\n  // keys() iterator only reads `length`, no optimisation required\n  lastIndexOf(...args) {\n    return searchProxy(this, \"lastIndexOf\", args);\n  },\n  map(fn, thisArg) {\n    return apply(this, \"map\", fn, thisArg, void 0, arguments);\n  },\n  pop() {\n    return noTracking(this, \"pop\");\n  },\n  push(...args) {\n    return noTracking(this, \"push\", args);\n  },\n  reduce(fn, ...args) {\n    return reduce(this, \"reduce\", fn, args);\n  },\n  reduceRight(fn, ...args) {\n    return reduce(this, \"reduceRight\", fn, args);\n  },\n  shift() {\n    return noTracking(this, \"shift\");\n  },\n  // slice could use ARRAY_ITERATE but also seems to beg for range tracking\n  some(fn, thisArg) {\n    return apply(this, \"some\", fn, thisArg, void 0, arguments);\n  },\n  splice(...args) {\n    return noTracking(this, \"splice\", args);\n  },\n  toReversed() {\n    return reactiveReadArray(this).toReversed();\n  },\n  toSorted(comparer) {\n    return reactiveReadArray(this).toSorted(comparer);\n  },\n  toSpliced(...args) {\n    return reactiveReadArray(this).toSpliced(...args);\n  },\n  unshift(...args) {\n    return noTracking(this, \"unshift\", args);\n  },\n  values() {\n    return iterator(this, \"values\", toReactive);\n  }\n};\nfunction iterator(self, method, wrapValue) {\n  const arr = shallowReadArray(self);\n  const iter = arr[method]();\n  if (arr !== self && !isShallow(self)) {\n    iter._next = iter.next;\n    iter.next = () => {\n      const result = iter._next();\n      if (result.value) {\n        result.value = wrapValue(result.value);\n      }\n      return result;\n    };\n  }\n  return iter;\n}\nconst arrayProto = Array.prototype;\nfunction apply(self, method, fn, thisArg, wrappedRetFn, args) {\n  const arr = shallowReadArray(self);\n  const needsWrap = arr !== self && !isShallow(self);\n  const methodFn = arr[method];\n  if (methodFn !== arrayProto[method]) {\n    const result2 = methodFn.apply(self, args);\n    return needsWrap ? toReactive(result2) : result2;\n  }\n  let wrappedFn = fn;\n  if (arr !== self) {\n    if (needsWrap) {\n      wrappedFn = function(item, index) {\n        return fn.call(this, toReactive(item), index, self);\n      };\n    } else if (fn.length > 2) {\n      wrappedFn = function(item, index) {\n        return fn.call(this, item, index, self);\n      };\n    }\n  }\n  const result = methodFn.call(arr, wrappedFn, thisArg);\n  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result;\n}\nfunction reduce(self, method, fn, args) {\n  const arr = shallowReadArray(self);\n  let wrappedFn = fn;\n  if (arr !== self) {\n    if (!isShallow(self)) {\n      wrappedFn = function(acc, item, index) {\n        return fn.call(this, acc, toReactive(item), index, self);\n      };\n    } else if (fn.length > 3) {\n      wrappedFn = function(acc, item, index) {\n        return fn.call(this, acc, item, index, self);\n      };\n    }\n  }\n  return arr[method](wrappedFn, ...args);\n}\nfunction searchProxy(self, method, args) {\n  const arr = toRaw(self);\n  track(arr, \"iterate\", ARRAY_ITERATE_KEY);\n  const res = arr[method](...args);\n  if ((res === -1 || res === false) && isProxy(args[0])) {\n    args[0] = toRaw(args[0]);\n    return arr[method](...args);\n  }\n  return res;\n}\nfunction noTracking(self, method, args = []) {\n  pauseTracking();\n  startBatch();\n  const res = toRaw(self)[method].apply(self, args);\n  endBatch();\n  resetTracking();\n  return res;\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ shared.makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(shared.isSymbol)\n);\nfunction hasOwnProperty(key) {\n  if (!shared.isSymbol(key)) key = String(key);\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _isShallow = false) {\n    this._isReadonly = _isReadonly;\n    this._isShallow = _isShallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return isShallow2;\n    } else if (key === \"__v_raw\") {\n      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype\n      // this means the receiver is a user proxy of the reactive proxy\n      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {\n        return target;\n      }\n      return;\n    }\n    const targetIsArray = shared.isArray(target);\n    if (!isReadonly2) {\n      let fn;\n      if (targetIsArray && (fn = arrayInstrumentations[key])) {\n        return fn;\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(\n      target,\n      key,\n      // if this is a proxy wrapping a ref, return methods using the raw ref\n      // as receiver so that we don't have to call `toRaw` on the ref in all\n      // its class methods\n      isRef(target) ? target : receiver\n    );\n    if (shared.isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (isShallow2) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && shared.isIntegerKey(key) ? res : res.value;\n    }\n    if (shared.isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(false, isShallow2);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (!this._isShallow) {\n      const isOldValueReadonly = isReadonly(oldValue);\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!shared.isArray(target) && isRef(oldValue) && !isRef(value)) {\n        if (isOldValueReadonly) {\n          return false;\n        } else {\n          oldValue.value = value;\n          return true;\n        }\n      }\n    }\n    const hadKey = shared.isArray(target) && shared.isIntegerKey(key) ? Number(key) < target.length : shared.hasOwn(target, key);\n    const result = Reflect.set(\n      target,\n      key,\n      value,\n      isRef(target) ? target : receiver\n    );\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (shared.hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = shared.hasOwn(target, key);\n    target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!shared.isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      shared.isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(true, isShallow2);\n  }\n  set(target, key) {\n    return true;\n  }\n  deleteProperty(target, key) {\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(true);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly2 = false, isShallow2 = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly2) {\n    if (shared.hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly2 = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly2) {\n    if (shared.hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly2 = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly2 && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value, _isShallow = false) {\n  if (!_isShallow && !isShallow(value) && !isReadonly(value)) {\n    value = toRaw(value);\n  }\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value, _isShallow = false) {\n  if (!_isShallow && !isShallow(value) && !isReadonly(value)) {\n    value = toRaw(value);\n  }\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (shared.hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  }\n  get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0);\n  }\n  return result;\n}\nfunction createForEach(isReadonly2, isShallow2) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n    !isReadonly2 && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly2, isShallow2) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = shared.isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n    !isReadonly2 && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    return type === \"delete\" ? false : type === \"clear\" ? void 0 : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add(value) {\n      return add.call(this, value, true);\n    },\n    set(key, value) {\n      return set.call(this, key, value, true);\n    },\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\n    \"keys\",\n    \"values\",\n    \"entries\",\n    Symbol.iterator\n  ];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations2[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations2[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly2, shallow) {\n  const instrumentations = shallow ? isReadonly2 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly2 ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      shared.hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(shared.toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!shared.isObject(target)) {\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return value ? !!value[\"__v_raw\"] : false;\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  if (Object.isExtensible(value)) {\n    shared.def(value, \"__v_skip\", true);\n  }\n  return value;\n}\nconst toReactive = (value) => shared.isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => shared.isObject(value) ? readonly(value) : value;\n\nfunction isRef(r) {\n  return r ? r[\"__v_isRef\"] === true : false;\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, isShallow2) {\n    this.dep = new Dep();\n    this[\"__v_isRef\"] = true;\n    this[\"__v_isShallow\"] = false;\n    this._rawValue = isShallow2 ? value : toRaw(value);\n    this._value = isShallow2 ? value : toReactive(value);\n    this[\"__v_isShallow\"] = isShallow2;\n  }\n  get value() {\n    {\n      this.dep.track();\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    const oldValue = this._rawValue;\n    const useDirectValue = this[\"__v_isShallow\"] || isShallow(newValue) || isReadonly(newValue);\n    newValue = useDirectValue ? newValue : toRaw(newValue);\n    if (shared.hasChanged(newValue, oldValue)) {\n      this._rawValue = newValue;\n      this._value = useDirectValue ? newValue : toReactive(newValue);\n      {\n        this.dep.trigger();\n      }\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  {\n    ref2.dep.trigger();\n  }\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return shared.isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => key === \"__v_raw\" ? target : unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this[\"__v_isRef\"] = true;\n    this._value = void 0;\n    const dep = this.dep = new Dep();\n    const { get, set } = factory(dep.track.bind(dep), dep.trigger.bind(dep));\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._value = this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  const ret = shared.isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this[\"__v_isRef\"] = true;\n    this._value = void 0;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return this._value = val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this[\"__v_isRef\"] = true;\n    this[\"__v_isReadonly\"] = true;\n    this._value = void 0;\n  }\n  get value() {\n    return this._value = this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (shared.isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (shared.isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(fn, setter, isSSR) {\n    this.fn = fn;\n    this.setter = setter;\n    /**\n     * @internal\n     */\n    this._value = void 0;\n    /**\n     * @internal\n     */\n    this.dep = new Dep(this);\n    /**\n     * @internal\n     */\n    this.__v_isRef = true;\n    // TODO isolatedDeclarations \"__v_isReadonly\"\n    // A computed is also a subscriber that tracks other deps\n    /**\n     * @internal\n     */\n    this.deps = void 0;\n    /**\n     * @internal\n     */\n    this.depsTail = void 0;\n    /**\n     * @internal\n     */\n    this.flags = 16;\n    /**\n     * @internal\n     */\n    this.globalVersion = globalVersion - 1;\n    // for backwards compat\n    this.effect = this;\n    this[\"__v_isReadonly\"] = !setter;\n    this.isSSR = isSSR;\n  }\n  /**\n   * @internal\n   */\n  notify() {\n    if (activeSub !== this) {\n      this.flags |= 16;\n      this.dep.notify();\n    }\n  }\n  get value() {\n    const link = this.dep.track();\n    refreshComputed(this);\n    if (link) {\n      link.version = this.dep.version;\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    if (this.setter) {\n      this.setter(newValue);\n    }\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  if (shared.isFunction(getterOrOptions)) {\n    getter = getterOrOptions;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, isSSR);\n  return cRef;\n}\n\nconst TrackOpTypes = {\n  \"GET\": \"get\",\n  \"HAS\": \"has\",\n  \"ITERATE\": \"iterate\"\n};\nconst TriggerOpTypes = {\n  \"SET\": \"set\",\n  \"ADD\": \"add\",\n  \"DELETE\": \"delete\",\n  \"CLEAR\": \"clear\"\n};\nconst ReactiveFlags = {\n  \"SKIP\": \"__v_skip\",\n  \"IS_REACTIVE\": \"__v_isReactive\",\n  \"IS_READONLY\": \"__v_isReadonly\",\n  \"IS_SHALLOW\": \"__v_isShallow\",\n  \"RAW\": \"__v_raw\",\n  \"IS_REF\": \"__v_isRef\"\n};\n\nconst WatchErrorCodes = {\n  \"WATCH_GETTER\": 2,\n  \"2\": \"WATCH_GETTER\",\n  \"WATCH_CALLBACK\": 3,\n  \"3\": \"WATCH_CALLBACK\",\n  \"WATCH_CLEANUP\": 4,\n  \"4\": \"WATCH_CLEANUP\"\n};\nconst INITIAL_WATCHER_VALUE = {};\nconst cleanupMap = /* @__PURE__ */ new WeakMap();\nlet activeWatcher = void 0;\nfunction getCurrentWatcher() {\n  return activeWatcher;\n}\nfunction onWatcherCleanup(cleanupFn, failSilently = false, owner = activeWatcher) {\n  if (owner) {\n    let cleanups = cleanupMap.get(owner);\n    if (!cleanups) cleanupMap.set(owner, cleanups = []);\n    cleanups.push(cleanupFn);\n  }\n}\nfunction watch(source, cb, options = shared.EMPTY_OBJ) {\n  const { immediate, deep, once, scheduler, augmentJob, call } = options;\n  const reactiveGetter = (source2) => {\n    if (deep) return source2;\n    if (isShallow(source2) || deep === false || deep === 0)\n      return traverse(source2, 1);\n    return traverse(source2);\n  };\n  let effect;\n  let getter;\n  let cleanup;\n  let boundCleanup;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => reactiveGetter(source);\n    forceTrigger = true;\n  } else if (shared.isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return reactiveGetter(s);\n      } else if (shared.isFunction(s)) {\n        return call ? call(s, 2) : s();\n      } else ;\n    });\n  } else if (shared.isFunction(source)) {\n    if (cb) {\n      getter = call ? () => call(source, 2) : source;\n    } else {\n      getter = () => {\n        if (cleanup) {\n          pauseTracking();\n          try {\n            cleanup();\n          } finally {\n            resetTracking();\n          }\n        }\n        const currentEffect = activeWatcher;\n        activeWatcher = effect;\n        try {\n          return call ? call(source, 3, [boundCleanup]) : source(boundCleanup);\n        } finally {\n          activeWatcher = currentEffect;\n        }\n      };\n    }\n  } else {\n    getter = shared.NOOP;\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    const depth = deep === true ? Infinity : deep;\n    getter = () => traverse(baseGetter(), depth);\n  }\n  const scope = getCurrentScope();\n  const watchHandle = () => {\n    effect.stop();\n    if (scope) {\n      shared.remove(scope.effects, effect);\n    }\n  };\n  if (once) {\n    if (cb) {\n      const _cb = cb;\n      cb = (...args) => {\n        _cb(...args);\n        watchHandle();\n      };\n    } else {\n      const _getter = getter;\n      getter = () => {\n        _getter();\n        watchHandle();\n      };\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = (immediateFirstRun) => {\n    if (!(effect.flags & 1) || !effect.dirty && !immediateFirstRun) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i])) : shared.hasChanged(newValue, oldValue))) {\n        if (cleanup) {\n          cleanup();\n        }\n        const currentWatcher = activeWatcher;\n        activeWatcher = effect;\n        try {\n          const args = [\n            newValue,\n            // pass undefined as the old value when it's changed for the first time\n            oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n            boundCleanup\n          ];\n          call ? call(cb, 3, args) : (\n            // @ts-expect-error\n            cb(...args)\n          );\n          oldValue = newValue;\n        } finally {\n          activeWatcher = currentWatcher;\n        }\n      }\n    } else {\n      effect.run();\n    }\n  };\n  if (augmentJob) {\n    augmentJob(job);\n  }\n  effect = new ReactiveEffect(getter);\n  effect.scheduler = scheduler ? () => scheduler(job, false) : job;\n  boundCleanup = (fn) => onWatcherCleanup(fn, false, effect);\n  cleanup = effect.onStop = () => {\n    const cleanups = cleanupMap.get(effect);\n    if (cleanups) {\n      if (call) {\n        call(cleanups, 4);\n      } else {\n        for (const cleanup2 of cleanups) cleanup2();\n      }\n      cleanupMap.delete(effect);\n    }\n  };\n  if (cb) {\n    if (immediate) {\n      job(true);\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (scheduler) {\n    scheduler(job.bind(null, true), true);\n  } else {\n    effect.run();\n  }\n  watchHandle.pause = effect.pause.bind(effect);\n  watchHandle.resume = effect.resume.bind(effect);\n  watchHandle.stop = watchHandle;\n  return watchHandle;\n}\nfunction traverse(value, depth = Infinity, seen) {\n  if (depth <= 0 || !shared.isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  depth--;\n  if (isRef(value)) {\n    traverse(value.value, depth, seen);\n  } else if (shared.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], depth, seen);\n    }\n  } else if (shared.isSet(value) || shared.isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, depth, seen);\n    });\n  } else if (shared.isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], depth, seen);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n      if (Object.prototype.propertyIsEnumerable.call(value, key)) {\n        traverse(value[key], depth, seen);\n      }\n    }\n  }\n  return value;\n}\n\nexports.ARRAY_ITERATE_KEY = ARRAY_ITERATE_KEY;\nexports.EffectFlags = EffectFlags;\nexports.EffectScope = EffectScope;\nexports.ITERATE_KEY = ITERATE_KEY;\nexports.MAP_KEY_ITERATE_KEY = MAP_KEY_ITERATE_KEY;\nexports.ReactiveEffect = ReactiveEffect;\nexports.ReactiveFlags = ReactiveFlags;\nexports.TrackOpTypes = TrackOpTypes;\nexports.TriggerOpTypes = TriggerOpTypes;\nexports.WatchErrorCodes = WatchErrorCodes;\nexports.computed = computed;\nexports.customRef = customRef;\nexports.effect = effect;\nexports.effectScope = effectScope;\nexports.enableTracking = enableTracking;\nexports.getCurrentScope = getCurrentScope;\nexports.getCurrentWatcher = getCurrentWatcher;\nexports.isProxy = isProxy;\nexports.isReactive = isReactive;\nexports.isReadonly = isReadonly;\nexports.isRef = isRef;\nexports.isShallow = isShallow;\nexports.markRaw = markRaw;\nexports.onEffectCleanup = onEffectCleanup;\nexports.onScopeDispose = onScopeDispose;\nexports.onWatcherCleanup = onWatcherCleanup;\nexports.pauseTracking = pauseTracking;\nexports.proxyRefs = proxyRefs;\nexports.reactive = reactive;\nexports.reactiveReadArray = reactiveReadArray;\nexports.readonly = readonly;\nexports.ref = ref;\nexports.resetTracking = resetTracking;\nexports.shallowReactive = shallowReactive;\nexports.shallowReadArray = shallowReadArray;\nexports.shallowReadonly = shallowReadonly;\nexports.shallowRef = shallowRef;\nexports.stop = stop;\nexports.toRaw = toRaw;\nexports.toReactive = toReactive;\nexports.toReadonly = toReadonly;\nexports.toRef = toRef;\nexports.toRefs = toRefs;\nexports.toValue = toValue;\nexports.track = track;\nexports.traverse = traverse;\nexports.trigger = trigger;\nexports.triggerRef = triggerRef;\nexports.unref = unref;\nexports.watch = watch;\n","/**\n* @vue/reactivity v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this._isPaused = false;\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  pause() {\n    if (this._active) {\n      this._isPaused = true;\n      let i, l;\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].pause();\n        }\n      }\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].pause();\n      }\n    }\n  }\n  /**\n   * Resumes the effect scope, including all child scopes and effects.\n   */\n  resume() {\n    if (this._active) {\n      if (this._isPaused) {\n        this._isPaused = false;\n        let i, l;\n        if (this.scopes) {\n          for (i = 0, l = this.scopes.length; i < l; i++) {\n            this.scopes[i].resume();\n          }\n        }\n        for (i = 0, l = this.effects.length; i < l; i++) {\n          this.effects[i].resume();\n        }\n      }\n    }\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn, failSilently = false) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!failSilently) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nlet activeSub;\nconst EffectFlags = {\n  \"ACTIVE\": 1,\n  \"1\": \"ACTIVE\",\n  \"RUNNING\": 2,\n  \"2\": \"RUNNING\",\n  \"TRACKING\": 4,\n  \"4\": \"TRACKING\",\n  \"NOTIFIED\": 8,\n  \"8\": \"NOTIFIED\",\n  \"DIRTY\": 16,\n  \"16\": \"DIRTY\",\n  \"ALLOW_RECURSE\": 32,\n  \"32\": \"ALLOW_RECURSE\",\n  \"PAUSED\": 64,\n  \"64\": \"PAUSED\"\n};\nconst pausedQueueEffects = /* @__PURE__ */ new WeakSet();\nclass ReactiveEffect {\n  constructor(fn) {\n    this.fn = fn;\n    /**\n     * @internal\n     */\n    this.deps = void 0;\n    /**\n     * @internal\n     */\n    this.depsTail = void 0;\n    /**\n     * @internal\n     */\n    this.flags = 1 | 4;\n    /**\n     * @internal\n     */\n    this.nextEffect = void 0;\n    /**\n     * @internal\n     */\n    this.cleanup = void 0;\n    this.scheduler = void 0;\n    if (activeEffectScope && activeEffectScope.active) {\n      activeEffectScope.effects.push(this);\n    }\n  }\n  pause() {\n    this.flags |= 64;\n  }\n  resume() {\n    if (this.flags & 64) {\n      this.flags &= ~64;\n      if (pausedQueueEffects.has(this)) {\n        pausedQueueEffects.delete(this);\n        this.trigger();\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  notify() {\n    if (this.flags & 2 && !(this.flags & 32)) {\n      return;\n    }\n    if (!(this.flags & 8)) {\n      this.flags |= 8;\n      this.nextEffect = batchedEffect;\n      batchedEffect = this;\n    }\n  }\n  run() {\n    if (!(this.flags & 1)) {\n      return this.fn();\n    }\n    this.flags |= 2;\n    cleanupEffect(this);\n    prepareDeps(this);\n    const prevEffect = activeSub;\n    const prevShouldTrack = shouldTrack;\n    activeSub = this;\n    shouldTrack = true;\n    try {\n      return this.fn();\n    } finally {\n      if (activeSub !== this) {\n        warn(\n          \"Active effect was not restored correctly - this is likely a Vue internal bug.\"\n        );\n      }\n      cleanupDeps(this);\n      activeSub = prevEffect;\n      shouldTrack = prevShouldTrack;\n      this.flags &= ~2;\n    }\n  }\n  stop() {\n    if (this.flags & 1) {\n      for (let link = this.deps; link; link = link.nextDep) {\n        removeSub(link);\n      }\n      this.deps = this.depsTail = void 0;\n      cleanupEffect(this);\n      this.onStop && this.onStop();\n      this.flags &= ~1;\n    }\n  }\n  trigger() {\n    if (this.flags & 64) {\n      pausedQueueEffects.add(this);\n    } else if (this.scheduler) {\n      this.scheduler();\n    } else {\n      this.runIfDirty();\n    }\n  }\n  /**\n   * @internal\n   */\n  runIfDirty() {\n    if (isDirty(this)) {\n      this.run();\n    }\n  }\n  get dirty() {\n    return isDirty(this);\n  }\n}\nlet batchDepth = 0;\nlet batchedEffect;\nfunction startBatch() {\n  batchDepth++;\n}\nfunction endBatch() {\n  if (--batchDepth > 0) {\n    return;\n  }\n  let error;\n  while (batchedEffect) {\n    let e = batchedEffect;\n    batchedEffect = void 0;\n    while (e) {\n      const next = e.nextEffect;\n      e.nextEffect = void 0;\n      e.flags &= ~8;\n      if (e.flags & 1) {\n        try {\n          e.trigger();\n        } catch (err) {\n          if (!error) error = err;\n        }\n      }\n      e = next;\n    }\n  }\n  if (error) throw error;\n}\nfunction prepareDeps(sub) {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    link.version = -1;\n    link.prevActiveLink = link.dep.activeLink;\n    link.dep.activeLink = link;\n  }\n}\nfunction cleanupDeps(sub) {\n  let head;\n  let tail = sub.depsTail;\n  for (let link = tail; link; link = link.prevDep) {\n    if (link.version === -1) {\n      if (link === tail) tail = link.prevDep;\n      removeSub(link);\n      removeDep(link);\n    } else {\n      head = link;\n    }\n    link.dep.activeLink = link.prevActiveLink;\n    link.prevActiveLink = void 0;\n  }\n  sub.deps = head;\n  sub.depsTail = tail;\n}\nfunction isDirty(sub) {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    if (link.dep.version !== link.version || link.dep.computed && refreshComputed(link.dep.computed) === false || link.dep.version !== link.version) {\n      return true;\n    }\n  }\n  if (sub._dirty) {\n    return true;\n  }\n  return false;\n}\nfunction refreshComputed(computed) {\n  if (computed.flags & 2) {\n    return false;\n  }\n  if (computed.flags & 4 && !(computed.flags & 16)) {\n    return;\n  }\n  computed.flags &= ~16;\n  if (computed.globalVersion === globalVersion) {\n    return;\n  }\n  computed.globalVersion = globalVersion;\n  const dep = computed.dep;\n  computed.flags |= 2;\n  if (dep.version > 0 && !computed.isSSR && !isDirty(computed)) {\n    computed.flags &= ~2;\n    return;\n  }\n  const prevSub = activeSub;\n  const prevShouldTrack = shouldTrack;\n  activeSub = computed;\n  shouldTrack = true;\n  try {\n    prepareDeps(computed);\n    const value = computed.fn(computed._value);\n    if (dep.version === 0 || shared.hasChanged(value, computed._value)) {\n      computed._value = value;\n      dep.version++;\n    }\n  } catch (err) {\n    dep.version++;\n    throw err;\n  } finally {\n    activeSub = prevSub;\n    shouldTrack = prevShouldTrack;\n    cleanupDeps(computed);\n    computed.flags &= ~2;\n  }\n}\nfunction removeSub(link) {\n  const { dep, prevSub, nextSub } = link;\n  if (prevSub) {\n    prevSub.nextSub = nextSub;\n    link.prevSub = void 0;\n  }\n  if (nextSub) {\n    nextSub.prevSub = prevSub;\n    link.nextSub = void 0;\n  }\n  if (dep.subs === link) {\n    dep.subs = prevSub;\n  }\n  if (!dep.subs && dep.computed) {\n    dep.computed.flags &= ~4;\n    for (let l = dep.computed.deps; l; l = l.nextDep) {\n      removeSub(l);\n    }\n  }\n}\nfunction removeDep(link) {\n  const { prevDep, nextDep } = link;\n  if (prevDep) {\n    prevDep.nextDep = nextDep;\n    link.prevDep = void 0;\n  }\n  if (nextDep) {\n    nextDep.prevDep = prevDep;\n    link.nextDep = void 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const e = new ReactiveEffect(fn);\n  if (options) {\n    shared.extend(e, options);\n  }\n  try {\n    e.run();\n  } catch (err) {\n    e.stop();\n    throw err;\n  }\n  const runner = e.run.bind(e);\n  runner.effect = e;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction onEffectCleanup(fn, failSilently = false) {\n  if (activeSub instanceof ReactiveEffect) {\n    activeSub.cleanup = fn;\n  } else if (!failSilently) {\n    warn(\n      `onEffectCleanup() was called when there was no active effect to associate with.`\n    );\n  }\n}\nfunction cleanupEffect(e) {\n  const { cleanup } = e;\n  e.cleanup = void 0;\n  if (cleanup) {\n    const prevSub = activeSub;\n    activeSub = void 0;\n    try {\n      cleanup();\n    } finally {\n      activeSub = prevSub;\n    }\n  }\n}\n\nlet globalVersion = 0;\nclass Dep {\n  constructor(computed) {\n    this.computed = computed;\n    this.version = 0;\n    /**\n     * Link between this dep and the current active effect\n     */\n    this.activeLink = void 0;\n    /**\n     * Doubly linked list representing the subscribing effects (tail)\n     */\n    this.subs = void 0;\n    {\n      this.subsHead = void 0;\n    }\n  }\n  track(debugInfo) {\n    if (!activeSub || !shouldTrack || activeSub === this.computed) {\n      return;\n    }\n    let link = this.activeLink;\n    if (link === void 0 || link.sub !== activeSub) {\n      link = this.activeLink = {\n        dep: this,\n        sub: activeSub,\n        version: this.version,\n        nextDep: void 0,\n        prevDep: void 0,\n        nextSub: void 0,\n        prevSub: void 0,\n        prevActiveLink: void 0\n      };\n      if (!activeSub.deps) {\n        activeSub.deps = activeSub.depsTail = link;\n      } else {\n        link.prevDep = activeSub.depsTail;\n        activeSub.depsTail.nextDep = link;\n        activeSub.depsTail = link;\n      }\n      if (activeSub.flags & 4) {\n        addSub(link);\n      }\n    } else if (link.version === -1) {\n      link.version = this.version;\n      if (link.nextDep) {\n        const next = link.nextDep;\n        next.prevDep = link.prevDep;\n        if (link.prevDep) {\n          link.prevDep.nextDep = next;\n        }\n        link.prevDep = activeSub.depsTail;\n        link.nextDep = void 0;\n        activeSub.depsTail.nextDep = link;\n        activeSub.depsTail = link;\n        if (activeSub.deps === link) {\n          activeSub.deps = next;\n        }\n      }\n    }\n    if (activeSub.onTrack) {\n      activeSub.onTrack(\n        shared.extend(\n          {\n            effect: activeSub\n          },\n          debugInfo\n        )\n      );\n    }\n    return link;\n  }\n  trigger(debugInfo) {\n    this.version++;\n    globalVersion++;\n    this.notify(debugInfo);\n  }\n  notify(debugInfo) {\n    startBatch();\n    try {\n      if (true) {\n        for (let head = this.subsHead; head; head = head.nextSub) {\n          if (head.sub.onTrigger && !(head.sub.flags & 8)) {\n            head.sub.onTrigger(\n              shared.extend(\n                {\n                  effect: head.sub\n                },\n                debugInfo\n              )\n            );\n          }\n        }\n      }\n      for (let link = this.subs; link; link = link.prevSub) {\n        link.sub.notify();\n      }\n    } finally {\n      endBatch();\n    }\n  }\n}\nfunction addSub(link) {\n  const computed = link.dep.computed;\n  if (computed && !link.dep.subs) {\n    computed.flags |= 4 | 16;\n    for (let l = computed.deps; l; l = l.nextDep) {\n      addSub(l);\n    }\n  }\n  const currentTail = link.dep.subs;\n  if (currentTail !== link) {\n    link.prevSub = currentTail;\n    if (currentTail) currentTail.nextSub = link;\n  }\n  if (link.dep.subsHead === void 0) {\n    link.dep.subsHead = link;\n  }\n  link.dep.subs = link;\n}\nconst targetMap = /* @__PURE__ */ new WeakMap();\nconst ITERATE_KEY = Symbol(\n  \"Object iterate\" \n);\nconst MAP_KEY_ITERATE_KEY = Symbol(\n  \"Map keys iterate\" \n);\nconst ARRAY_ITERATE_KEY = Symbol(\n  \"Array iterate\" \n);\nfunction track(target, type, key) {\n  if (shouldTrack && activeSub) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = new Dep());\n    }\n    {\n      dep.track({\n        target,\n        type,\n        key\n      });\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    globalVersion++;\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else {\n    const targetIsArray = shared.isArray(target);\n    const isArrayIndex = targetIsArray && shared.isIntegerKey(key);\n    if (targetIsArray && key === \"length\") {\n      const newLength = Number(newValue);\n      depsMap.forEach((dep, key2) => {\n        if (key2 === \"length\" || key2 === ARRAY_ITERATE_KEY || !shared.isSymbol(key2) && key2 >= newLength) {\n          deps.push(dep);\n        }\n      });\n    } else {\n      const push = (dep) => dep && deps.push(dep);\n      if (key !== void 0) {\n        push(depsMap.get(key));\n      }\n      if (isArrayIndex) {\n        push(depsMap.get(ARRAY_ITERATE_KEY));\n      }\n      switch (type) {\n        case \"add\":\n          if (!targetIsArray) {\n            push(depsMap.get(ITERATE_KEY));\n            if (shared.isMap(target)) {\n              push(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          } else if (isArrayIndex) {\n            push(depsMap.get(\"length\"));\n          }\n          break;\n        case \"delete\":\n          if (!targetIsArray) {\n            push(depsMap.get(ITERATE_KEY));\n            if (shared.isMap(target)) {\n              push(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          }\n          break;\n        case \"set\":\n          if (shared.isMap(target)) {\n            push(depsMap.get(ITERATE_KEY));\n          }\n          break;\n      }\n    }\n  }\n  startBatch();\n  for (const dep of deps) {\n    {\n      dep.trigger({\n        target,\n        type,\n        key,\n        newValue,\n        oldValue,\n        oldTarget\n      });\n    }\n  }\n  endBatch();\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nfunction reactiveReadArray(array) {\n  const raw = toRaw(array);\n  if (raw === array) return raw;\n  track(raw, \"iterate\", ARRAY_ITERATE_KEY);\n  return isShallow(array) ? raw : raw.map(toReactive);\n}\nfunction shallowReadArray(arr) {\n  track(arr = toRaw(arr), \"iterate\", ARRAY_ITERATE_KEY);\n  return arr;\n}\nconst arrayInstrumentations = {\n  __proto__: null,\n  [Symbol.iterator]() {\n    return iterator(this, Symbol.iterator, toReactive);\n  },\n  concat(...args) {\n    return reactiveReadArray(this).concat(\n      ...args.map((x) => shared.isArray(x) ? reactiveReadArray(x) : x)\n    );\n  },\n  entries() {\n    return iterator(this, \"entries\", (value) => {\n      value[1] = toReactive(value[1]);\n      return value;\n    });\n  },\n  every(fn, thisArg) {\n    return apply(this, \"every\", fn, thisArg, void 0, arguments);\n  },\n  filter(fn, thisArg) {\n    return apply(this, \"filter\", fn, thisArg, (v) => v.map(toReactive), arguments);\n  },\n  find(fn, thisArg) {\n    return apply(this, \"find\", fn, thisArg, toReactive, arguments);\n  },\n  findIndex(fn, thisArg) {\n    return apply(this, \"findIndex\", fn, thisArg, void 0, arguments);\n  },\n  findLast(fn, thisArg) {\n    return apply(this, \"findLast\", fn, thisArg, toReactive, arguments);\n  },\n  findLastIndex(fn, thisArg) {\n    return apply(this, \"findLastIndex\", fn, thisArg, void 0, arguments);\n  },\n  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement\n  forEach(fn, thisArg) {\n    return apply(this, \"forEach\", fn, thisArg, void 0, arguments);\n  },\n  includes(...args) {\n    return searchProxy(this, \"includes\", args);\n  },\n  indexOf(...args) {\n    return searchProxy(this, \"indexOf\", args);\n  },\n  join(separator) {\n    return reactiveReadArray(this).join(separator);\n  },\n  // keys() iterator only reads `length`, no optimisation required\n  lastIndexOf(...args) {\n    return searchProxy(this, \"lastIndexOf\", args);\n  },\n  map(fn, thisArg) {\n    return apply(this, \"map\", fn, thisArg, void 0, arguments);\n  },\n  pop() {\n    return noTracking(this, \"pop\");\n  },\n  push(...args) {\n    return noTracking(this, \"push\", args);\n  },\n  reduce(fn, ...args) {\n    return reduce(this, \"reduce\", fn, args);\n  },\n  reduceRight(fn, ...args) {\n    return reduce(this, \"reduceRight\", fn, args);\n  },\n  shift() {\n    return noTracking(this, \"shift\");\n  },\n  // slice could use ARRAY_ITERATE but also seems to beg for range tracking\n  some(fn, thisArg) {\n    return apply(this, \"some\", fn, thisArg, void 0, arguments);\n  },\n  splice(...args) {\n    return noTracking(this, \"splice\", args);\n  },\n  toReversed() {\n    return reactiveReadArray(this).toReversed();\n  },\n  toSorted(comparer) {\n    return reactiveReadArray(this).toSorted(comparer);\n  },\n  toSpliced(...args) {\n    return reactiveReadArray(this).toSpliced(...args);\n  },\n  unshift(...args) {\n    return noTracking(this, \"unshift\", args);\n  },\n  values() {\n    return iterator(this, \"values\", toReactive);\n  }\n};\nfunction iterator(self, method, wrapValue) {\n  const arr = shallowReadArray(self);\n  const iter = arr[method]();\n  if (arr !== self && !isShallow(self)) {\n    iter._next = iter.next;\n    iter.next = () => {\n      const result = iter._next();\n      if (result.value) {\n        result.value = wrapValue(result.value);\n      }\n      return result;\n    };\n  }\n  return iter;\n}\nconst arrayProto = Array.prototype;\nfunction apply(self, method, fn, thisArg, wrappedRetFn, args) {\n  const arr = shallowReadArray(self);\n  const needsWrap = arr !== self && !isShallow(self);\n  const methodFn = arr[method];\n  if (methodFn !== arrayProto[method]) {\n    const result2 = methodFn.apply(self, args);\n    return needsWrap ? toReactive(result2) : result2;\n  }\n  let wrappedFn = fn;\n  if (arr !== self) {\n    if (needsWrap) {\n      wrappedFn = function(item, index) {\n        return fn.call(this, toReactive(item), index, self);\n      };\n    } else if (fn.length > 2) {\n      wrappedFn = function(item, index) {\n        return fn.call(this, item, index, self);\n      };\n    }\n  }\n  const result = methodFn.call(arr, wrappedFn, thisArg);\n  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result;\n}\nfunction reduce(self, method, fn, args) {\n  const arr = shallowReadArray(self);\n  let wrappedFn = fn;\n  if (arr !== self) {\n    if (!isShallow(self)) {\n      wrappedFn = function(acc, item, index) {\n        return fn.call(this, acc, toReactive(item), index, self);\n      };\n    } else if (fn.length > 3) {\n      wrappedFn = function(acc, item, index) {\n        return fn.call(this, acc, item, index, self);\n      };\n    }\n  }\n  return arr[method](wrappedFn, ...args);\n}\nfunction searchProxy(self, method, args) {\n  const arr = toRaw(self);\n  track(arr, \"iterate\", ARRAY_ITERATE_KEY);\n  const res = arr[method](...args);\n  if ((res === -1 || res === false) && isProxy(args[0])) {\n    args[0] = toRaw(args[0]);\n    return arr[method](...args);\n  }\n  return res;\n}\nfunction noTracking(self, method, args = []) {\n  pauseTracking();\n  startBatch();\n  const res = toRaw(self)[method].apply(self, args);\n  endBatch();\n  resetTracking();\n  return res;\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ shared.makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(shared.isSymbol)\n);\nfunction hasOwnProperty(key) {\n  if (!shared.isSymbol(key)) key = String(key);\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _isShallow = false) {\n    this._isReadonly = _isReadonly;\n    this._isShallow = _isShallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return isShallow2;\n    } else if (key === \"__v_raw\") {\n      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype\n      // this means the receiver is a user proxy of the reactive proxy\n      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {\n        return target;\n      }\n      return;\n    }\n    const targetIsArray = shared.isArray(target);\n    if (!isReadonly2) {\n      let fn;\n      if (targetIsArray && (fn = arrayInstrumentations[key])) {\n        return fn;\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(\n      target,\n      key,\n      // if this is a proxy wrapping a ref, return methods using the raw ref\n      // as receiver so that we don't have to call `toRaw` on the ref in all\n      // its class methods\n      isRef(target) ? target : receiver\n    );\n    if (shared.isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (isShallow2) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && shared.isIntegerKey(key) ? res : res.value;\n    }\n    if (shared.isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(false, isShallow2);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (!this._isShallow) {\n      const isOldValueReadonly = isReadonly(oldValue);\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!shared.isArray(target) && isRef(oldValue) && !isRef(value)) {\n        if (isOldValueReadonly) {\n          return false;\n        } else {\n          oldValue.value = value;\n          return true;\n        }\n      }\n    }\n    const hadKey = shared.isArray(target) && shared.isIntegerKey(key) ? Number(key) < target.length : shared.hasOwn(target, key);\n    const result = Reflect.set(\n      target,\n      key,\n      value,\n      isRef(target) ? target : receiver\n    );\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (shared.hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = shared.hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!shared.isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      shared.isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(true, isShallow2);\n  }\n  set(target, key) {\n    {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n  deleteProperty(target, key) {\n    {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(true);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly2 = false, isShallow2 = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly2) {\n    if (shared.hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly2 = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly2) {\n    if (shared.hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly2 = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly2 && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value, _isShallow = false) {\n  if (!_isShallow && !isShallow(value) && !isReadonly(value)) {\n    value = toRaw(value);\n  }\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value, _isShallow = false) {\n  if (!_isShallow && !isShallow(value) && !isReadonly(value)) {\n    value = toRaw(value);\n  }\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (shared.hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = shared.isMap(target) ? new Map(target) : new Set(target) ;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly2, isShallow2) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n    !isReadonly2 && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly2, isShallow2) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = shared.isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n    !isReadonly2 && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      warn(\n        `${shared.capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : type === \"clear\" ? void 0 : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add(value) {\n      return add.call(this, value, true);\n    },\n    set(key, value) {\n      return set.call(this, key, value, true);\n    },\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\n    \"keys\",\n    \"values\",\n    \"entries\",\n    Symbol.iterator\n  ];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations2[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations2[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly2, shallow) {\n  const instrumentations = shallow ? isReadonly2 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly2 ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      shared.hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = shared.toRawType(target);\n    warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(shared.toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!shared.isObject(target)) {\n    {\n      warn(\n        `value cannot be made ${isReadonly2 ? \"readonly\" : \"reactive\"}: ${String(\n          target\n        )}`\n      );\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return value ? !!value[\"__v_raw\"] : false;\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  if (Object.isExtensible(value)) {\n    shared.def(value, \"__v_skip\", true);\n  }\n  return value;\n}\nconst toReactive = (value) => shared.isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => shared.isObject(value) ? readonly(value) : value;\n\nfunction isRef(r) {\n  return r ? r[\"__v_isRef\"] === true : false;\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, isShallow2) {\n    this.dep = new Dep();\n    this[\"__v_isRef\"] = true;\n    this[\"__v_isShallow\"] = false;\n    this._rawValue = isShallow2 ? value : toRaw(value);\n    this._value = isShallow2 ? value : toReactive(value);\n    this[\"__v_isShallow\"] = isShallow2;\n  }\n  get value() {\n    {\n      this.dep.track({\n        target: this,\n        type: \"get\",\n        key: \"value\"\n      });\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    const oldValue = this._rawValue;\n    const useDirectValue = this[\"__v_isShallow\"] || isShallow(newValue) || isReadonly(newValue);\n    newValue = useDirectValue ? newValue : toRaw(newValue);\n    if (shared.hasChanged(newValue, oldValue)) {\n      this._rawValue = newValue;\n      this._value = useDirectValue ? newValue : toReactive(newValue);\n      {\n        this.dep.trigger({\n          target: this,\n          type: \"set\",\n          key: \"value\",\n          newValue,\n          oldValue\n        });\n      }\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  {\n    ref2.dep.trigger({\n      target: ref2,\n      type: \"set\",\n      key: \"value\",\n      newValue: ref2._value\n    });\n  }\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return shared.isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => key === \"__v_raw\" ? target : unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this[\"__v_isRef\"] = true;\n    this._value = void 0;\n    const dep = this.dep = new Dep();\n    const { get, set } = factory(dep.track.bind(dep), dep.trigger.bind(dep));\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._value = this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!isProxy(object)) {\n    warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = shared.isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this[\"__v_isRef\"] = true;\n    this._value = void 0;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return this._value = val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this[\"__v_isRef\"] = true;\n    this[\"__v_isReadonly\"] = true;\n    this._value = void 0;\n  }\n  get value() {\n    return this._value = this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (shared.isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (shared.isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(fn, setter, isSSR) {\n    this.fn = fn;\n    this.setter = setter;\n    /**\n     * @internal\n     */\n    this._value = void 0;\n    /**\n     * @internal\n     */\n    this.dep = new Dep(this);\n    /**\n     * @internal\n     */\n    this.__v_isRef = true;\n    // TODO isolatedDeclarations \"__v_isReadonly\"\n    // A computed is also a subscriber that tracks other deps\n    /**\n     * @internal\n     */\n    this.deps = void 0;\n    /**\n     * @internal\n     */\n    this.depsTail = void 0;\n    /**\n     * @internal\n     */\n    this.flags = 16;\n    /**\n     * @internal\n     */\n    this.globalVersion = globalVersion - 1;\n    // for backwards compat\n    this.effect = this;\n    this[\"__v_isReadonly\"] = !setter;\n    this.isSSR = isSSR;\n  }\n  /**\n   * @internal\n   */\n  notify() {\n    if (activeSub !== this) {\n      this.flags |= 16;\n      this.dep.notify();\n    }\n  }\n  get value() {\n    const link = this.dep.track({\n      target: this,\n      type: \"get\",\n      key: \"value\"\n    }) ;\n    refreshComputed(this);\n    if (link) {\n      link.version = this.dep.version;\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    if (this.setter) {\n      this.setter(newValue);\n    } else {\n      warn(\"Write operation failed: computed value is readonly\");\n    }\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  if (shared.isFunction(getterOrOptions)) {\n    getter = getterOrOptions;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, isSSR);\n  if (debugOptions && !isSSR) {\n    cRef.onTrack = debugOptions.onTrack;\n    cRef.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst TrackOpTypes = {\n  \"GET\": \"get\",\n  \"HAS\": \"has\",\n  \"ITERATE\": \"iterate\"\n};\nconst TriggerOpTypes = {\n  \"SET\": \"set\",\n  \"ADD\": \"add\",\n  \"DELETE\": \"delete\",\n  \"CLEAR\": \"clear\"\n};\nconst ReactiveFlags = {\n  \"SKIP\": \"__v_skip\",\n  \"IS_REACTIVE\": \"__v_isReactive\",\n  \"IS_READONLY\": \"__v_isReadonly\",\n  \"IS_SHALLOW\": \"__v_isShallow\",\n  \"RAW\": \"__v_raw\",\n  \"IS_REF\": \"__v_isRef\"\n};\n\nconst WatchErrorCodes = {\n  \"WATCH_GETTER\": 2,\n  \"2\": \"WATCH_GETTER\",\n  \"WATCH_CALLBACK\": 3,\n  \"3\": \"WATCH_CALLBACK\",\n  \"WATCH_CLEANUP\": 4,\n  \"4\": \"WATCH_CLEANUP\"\n};\nconst INITIAL_WATCHER_VALUE = {};\nconst cleanupMap = /* @__PURE__ */ new WeakMap();\nlet activeWatcher = void 0;\nfunction getCurrentWatcher() {\n  return activeWatcher;\n}\nfunction onWatcherCleanup(cleanupFn, failSilently = false, owner = activeWatcher) {\n  if (owner) {\n    let cleanups = cleanupMap.get(owner);\n    if (!cleanups) cleanupMap.set(owner, cleanups = []);\n    cleanups.push(cleanupFn);\n  } else if (!failSilently) {\n    warn(\n      `onWatcherCleanup() was called when there was no active watcher to associate with.`\n    );\n  }\n}\nfunction watch(source, cb, options = shared.EMPTY_OBJ) {\n  const { immediate, deep, once, scheduler, augmentJob, call } = options;\n  const warnInvalidSource = (s) => {\n    (options.onWarn || warn)(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const reactiveGetter = (source2) => {\n    if (deep) return source2;\n    if (isShallow(source2) || deep === false || deep === 0)\n      return traverse(source2, 1);\n    return traverse(source2);\n  };\n  let effect;\n  let getter;\n  let cleanup;\n  let boundCleanup;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => reactiveGetter(source);\n    forceTrigger = true;\n  } else if (shared.isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return reactiveGetter(s);\n      } else if (shared.isFunction(s)) {\n        return call ? call(s, 2) : s();\n      } else {\n        warnInvalidSource(s);\n      }\n    });\n  } else if (shared.isFunction(source)) {\n    if (cb) {\n      getter = call ? () => call(source, 2) : source;\n    } else {\n      getter = () => {\n        if (cleanup) {\n          pauseTracking();\n          try {\n            cleanup();\n          } finally {\n            resetTracking();\n          }\n        }\n        const currentEffect = activeWatcher;\n        activeWatcher = effect;\n        try {\n          return call ? call(source, 3, [boundCleanup]) : source(boundCleanup);\n        } finally {\n          activeWatcher = currentEffect;\n        }\n      };\n    }\n  } else {\n    getter = shared.NOOP;\n    warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    const depth = deep === true ? Infinity : deep;\n    getter = () => traverse(baseGetter(), depth);\n  }\n  const scope = getCurrentScope();\n  const watchHandle = () => {\n    effect.stop();\n    if (scope) {\n      shared.remove(scope.effects, effect);\n    }\n  };\n  if (once) {\n    if (cb) {\n      const _cb = cb;\n      cb = (...args) => {\n        _cb(...args);\n        watchHandle();\n      };\n    } else {\n      const _getter = getter;\n      getter = () => {\n        _getter();\n        watchHandle();\n      };\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = (immediateFirstRun) => {\n    if (!(effect.flags & 1) || !effect.dirty && !immediateFirstRun) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i])) : shared.hasChanged(newValue, oldValue))) {\n        if (cleanup) {\n          cleanup();\n        }\n        const currentWatcher = activeWatcher;\n        activeWatcher = effect;\n        try {\n          const args = [\n            newValue,\n            // pass undefined as the old value when it's changed for the first time\n            oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n            boundCleanup\n          ];\n          call ? call(cb, 3, args) : (\n            // @ts-expect-error\n            cb(...args)\n          );\n          oldValue = newValue;\n        } finally {\n          activeWatcher = currentWatcher;\n        }\n      }\n    } else {\n      effect.run();\n    }\n  };\n  if (augmentJob) {\n    augmentJob(job);\n  }\n  effect = new ReactiveEffect(getter);\n  effect.scheduler = scheduler ? () => scheduler(job, false) : job;\n  boundCleanup = (fn) => onWatcherCleanup(fn, false, effect);\n  cleanup = effect.onStop = () => {\n    const cleanups = cleanupMap.get(effect);\n    if (cleanups) {\n      if (call) {\n        call(cleanups, 4);\n      } else {\n        for (const cleanup2 of cleanups) cleanup2();\n      }\n      cleanupMap.delete(effect);\n    }\n  };\n  {\n    effect.onTrack = options.onTrack;\n    effect.onTrigger = options.onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job(true);\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (scheduler) {\n    scheduler(job.bind(null, true), true);\n  } else {\n    effect.run();\n  }\n  watchHandle.pause = effect.pause.bind(effect);\n  watchHandle.resume = effect.resume.bind(effect);\n  watchHandle.stop = watchHandle;\n  return watchHandle;\n}\nfunction traverse(value, depth = Infinity, seen) {\n  if (depth <= 0 || !shared.isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  depth--;\n  if (isRef(value)) {\n    traverse(value.value, depth, seen);\n  } else if (shared.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], depth, seen);\n    }\n  } else if (shared.isSet(value) || shared.isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, depth, seen);\n    });\n  } else if (shared.isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], depth, seen);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n      if (Object.prototype.propertyIsEnumerable.call(value, key)) {\n        traverse(value[key], depth, seen);\n      }\n    }\n  }\n  return value;\n}\n\nexports.ARRAY_ITERATE_KEY = ARRAY_ITERATE_KEY;\nexports.EffectFlags = EffectFlags;\nexports.EffectScope = EffectScope;\nexports.ITERATE_KEY = ITERATE_KEY;\nexports.MAP_KEY_ITERATE_KEY = MAP_KEY_ITERATE_KEY;\nexports.ReactiveEffect = ReactiveEffect;\nexports.ReactiveFlags = ReactiveFlags;\nexports.TrackOpTypes = TrackOpTypes;\nexports.TriggerOpTypes = TriggerOpTypes;\nexports.WatchErrorCodes = WatchErrorCodes;\nexports.computed = computed;\nexports.customRef = customRef;\nexports.effect = effect;\nexports.effectScope = effectScope;\nexports.enableTracking = enableTracking;\nexports.getCurrentScope = getCurrentScope;\nexports.getCurrentWatcher = getCurrentWatcher;\nexports.isProxy = isProxy;\nexports.isReactive = isReactive;\nexports.isReadonly = isReadonly;\nexports.isRef = isRef;\nexports.isShallow = isShallow;\nexports.markRaw = markRaw;\nexports.onEffectCleanup = onEffectCleanup;\nexports.onScopeDispose = onScopeDispose;\nexports.onWatcherCleanup = onWatcherCleanup;\nexports.pauseTracking = pauseTracking;\nexports.proxyRefs = proxyRefs;\nexports.reactive = reactive;\nexports.reactiveReadArray = reactiveReadArray;\nexports.readonly = readonly;\nexports.ref = ref;\nexports.resetTracking = resetTracking;\nexports.shallowReactive = shallowReactive;\nexports.shallowReadArray = shallowReadArray;\nexports.shallowReadonly = shallowReadonly;\nexports.shallowRef = shallowRef;\nexports.stop = stop;\nexports.toRaw = toRaw;\nexports.toReactive = toReactive;\nexports.toReadonly = toReadonly;\nexports.toRef = toRef;\nexports.toRefs = toRefs;\nexports.toValue = toValue;\nexports.track = track;\nexports.traverse = traverse;\nexports.trigger = trigger;\nexports.triggerRef = triggerRef;\nexports.unref = unref;\nexports.watch = watch;\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/reactivity.cjs.prod.js')\n} else {\n  module.exports = require('./dist/reactivity.cjs.js')\n}\n","/**\n* @vue/runtime-core v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar reactivity = require('@vue/reactivity');\nvar shared = require('@vue/shared');\n\nfunction pushWarningContext(vnode) {\n}\nfunction popWarningContext() {\n}\nfunction assertNumber(val, type) {\n  return;\n}\n\nconst ErrorCodes = {\n  \"SETUP_FUNCTION\": 0,\n  \"0\": \"SETUP_FUNCTION\",\n  \"RENDER_FUNCTION\": 1,\n  \"1\": \"RENDER_FUNCTION\",\n  \"NATIVE_EVENT_HANDLER\": 5,\n  \"5\": \"NATIVE_EVENT_HANDLER\",\n  \"COMPONENT_EVENT_HANDLER\": 6,\n  \"6\": \"COMPONENT_EVENT_HANDLER\",\n  \"VNODE_HOOK\": 7,\n  \"7\": \"VNODE_HOOK\",\n  \"DIRECTIVE_HOOK\": 8,\n  \"8\": \"DIRECTIVE_HOOK\",\n  \"TRANSITION_HOOK\": 9,\n  \"9\": \"TRANSITION_HOOK\",\n  \"APP_ERROR_HANDLER\": 10,\n  \"10\": \"APP_ERROR_HANDLER\",\n  \"APP_WARN_HANDLER\": 11,\n  \"11\": \"APP_WARN_HANDLER\",\n  \"FUNCTION_REF\": 12,\n  \"12\": \"FUNCTION_REF\",\n  \"ASYNC_COMPONENT_LOADER\": 13,\n  \"13\": \"ASYNC_COMPONENT_LOADER\",\n  \"SCHEDULER\": 14,\n  \"14\": \"SCHEDULER\",\n  \"COMPONENT_UPDATE\": 15,\n  \"15\": \"COMPONENT_UPDATE\",\n  \"APP_UNMOUNT_CLEANUP\": 16,\n  \"16\": \"APP_UNMOUNT_CLEANUP\"\n};\nconst ErrorTypeStrings$1 = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush\",\n  [15]: \"component update\",\n  [16]: \"app unmount cleanup function\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  try {\n    return args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (shared.isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && shared.isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  if (shared.isArray(fn)) {\n    const values = [];\n    for (let i = 0; i < fn.length; i++) {\n      values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n    }\n    return values;\n  }\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  const { errorHandler, throwUnhandledErrorInProduction } = instance && instance.appContext.config || shared.EMPTY_OBJ;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = `https://vuejs.org/error-reference/#runtime-${type}`;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    if (errorHandler) {\n      reactivity.pauseTracking();\n      callWithErrorHandling(errorHandler, null, 10, [\n        err,\n        exposedInstance,\n        errorInfo\n      ]);\n      reactivity.resetTracking();\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev, throwUnhandledErrorInProduction);\n}\nfunction logError(err, type, contextVNode, throwInDev = true, throwInProd = false) {\n  if (throwInProd) {\n    throw err;\n  } else {\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = isFlushing ? flushIndex + 1 : 0;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJob = queue[middle];\n    const middleJobId = getId(middleJob);\n    if (middleJobId < id || middleJobId === id && middleJob.flags & 2) {\n      start = middle + 1;\n    } else {\n      end = middle;\n    }\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!(job.flags & 1)) {\n    const jobId = getId(job);\n    const lastJob = queue[queue.length - 1];\n    if (!lastJob || // fast path when the job id is larger than the tail\n    !(job.flags & 2) && jobId >= getId(lastJob)) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(jobId), 0, job);\n    }\n    job.flags |= 1;\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!shared.isArray(cb)) {\n    if (activePostFlushCbs && cb.id === -1) {\n      activePostFlushCbs.splice(postFlushIndex + 1, 0, cb);\n    } else if (!(cb.flags & 1)) {\n      pendingPostFlushCbs.push(cb);\n      cb.flags |= 1;\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(instance, seen, i = isFlushing ? flushIndex + 1 : 0) {\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.flags & 2) {\n      if (instance && cb.id !== instance.uid) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      if (cb.flags & 4) {\n        cb.flags &= ~1;\n      }\n      cb();\n      cb.flags &= ~1;\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)].sort(\n      (a, b) => getId(a) - getId(b)\n    );\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      const cb = activePostFlushCbs[postFlushIndex];\n      if (cb.flags & 4) {\n        cb.flags &= ~1;\n      }\n      if (!(cb.flags & 8)) cb();\n      cb.flags &= ~1;\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? job.flags & 2 ? -1 : Infinity : job.id;\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && !(job.flags & 8)) {\n        if (false) ;\n        if (job.flags & 4) {\n          job.flags &= ~1;\n        }\n        callWithErrorHandling(\n          job,\n          job.i,\n          job.i ? 15 : 14\n        );\n        job.flags &= ~1;\n      }\n    }\n  } finally {\n    for (; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job) {\n        job.flags &= ~1;\n      }\n    }\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs();\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs();\n    }\n  }\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx) return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nfunction withDirectives(vnode, directives) {\n  if (currentRenderingInstance === null) {\n    return vnode;\n  }\n  const instance = getComponentPublicInstance(currentRenderingInstance);\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (shared.isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        reactivity.traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      reactivity.pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      reactivity.resetTracking();\n    }\n  }\n}\n\nconst TeleportEndKey = Symbol(\"_vte\");\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTeleportDeferred = (props) => props && (props.defer || props.defer === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst isTargetMathML = (target) => typeof MathMLElement === \"function\" && target instanceof MathMLElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (shared.isString(targetSelector)) {\n    if (!select) {\n      return null;\n    } else {\n      const target = select(targetSelector);\n      return target;\n    }\n  } else {\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  name: \"Teleport\",\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (n1 == null) {\n      const placeholder = n2.el = createText(\"\");\n      const mainAnchor = n2.anchor = createText(\"\");\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      const mountToTarget = () => {\n        const target = n2.target = resolveTarget(n2.props, querySelector);\n        const targetAnchor = prepareAnchor(target, n2, createText, insert);\n        if (target) {\n          if (namespace !== \"svg\" && isTargetSVG(target)) {\n            namespace = \"svg\";\n          } else if (namespace !== \"mathml\" && isTargetMathML(target)) {\n            namespace = \"mathml\";\n          }\n          if (!disabled) {\n            mount(target, targetAnchor);\n            updateCssVars(n2);\n          }\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n        updateCssVars(n2);\n      }\n      if (isTeleportDeferred(n2.props)) {\n        queuePostRenderEffect(mountToTarget, parentSuspense);\n      } else {\n        mountToTarget();\n      }\n    } else {\n      n2.el = n1.el;\n      n2.targetStart = n1.targetStart;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      if (namespace === \"svg\" || isTargetSVG(target)) {\n        namespace = \"svg\";\n      } else if (namespace === \"mathml\" || isTargetMathML(target)) {\n        namespace = \"mathml\";\n      }\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        } else {\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to;\n          }\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n      updateCssVars(n2);\n    }\n  },\n  remove(vnode, parentComponent, parentSuspense, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const {\n      shapeFlag,\n      children,\n      anchor,\n      targetStart,\n      targetAnchor,\n      target,\n      props\n    } = vnode;\n    if (target) {\n      hostRemove(targetStart);\n      hostRemove(targetAnchor);\n    }\n    doRemove && hostRemove(anchor);\n    if (shapeFlag & 16) {\n      const shouldRemove = doRemove || !isTeleportDisabled(props);\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        unmount(\n          child,\n          parentComponent,\n          parentSuspense,\n          shouldRemove,\n          !!child.dynamicChildren\n        );\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector, insert, createText }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetStart = targetNode;\n        vnode.targetAnchor = targetNode && nextSibling(targetNode);\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          if (targetAnchor && targetAnchor.nodeType === 8) {\n            if (targetAnchor.data === \"teleport start anchor\") {\n              vnode.targetStart = targetAnchor;\n            } else if (targetAnchor.data === \"teleport anchor\") {\n              vnode.targetAnchor = targetAnchor;\n              target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n              break;\n            }\n          }\n          targetAnchor = nextSibling(targetAnchor);\n        }\n        if (!vnode.targetAnchor) {\n          prepareAnchor(target, vnode, createText, insert);\n        }\n        hydrateChildren(\n          targetNode && nextSibling(targetNode),\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.targetStart;\n    while (node && node !== vnode.targetAnchor) {\n      if (node.nodeType === 1) node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\nfunction prepareAnchor(target, vnode, createText, insert) {\n  const targetStart = vnode.targetStart = createText(\"\");\n  const targetAnchor = vnode.targetAnchor = createText(\"\");\n  targetStart[TeleportEndKey] = targetAnchor;\n  if (target) {\n    insert(targetStart, target);\n    insert(targetAnchor, target);\n  }\n  return targetAnchor;\n}\n\nconst leaveCbKey = Symbol(\"_leaveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst recursiveGetSubtree = (instance) => {\n  const subTree = instance.subTree;\n  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      const child = findNonCommentChild(children);\n      const rawProps = reactivity.toRaw(props);\n      const { mode } = rawProps;\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getInnerChild$1(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      let enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance,\n        // #11061, ensure enterHooks is fresh after clone\n        (hooks) => enterHooks = hooks\n      );\n      if (innerChild.type !== Comment) {\n        setTransitionHooks(innerChild, enterHooks);\n      }\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getInnerChild$1(oldChild);\n      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(innerChild, oldInnerChild) && recursiveGetSubtree(instance).type !== Comment) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\" && innerChild.type !== Comment) {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (!(instance.job.flags & 8)) {\n              instance.update();\n            }\n            delete leavingHooks.afterLeave;\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el[leaveCbKey] = () => {\n              earlyRemove();\n              el[leaveCbKey] = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nfunction findNonCommentChild(children) {\n  let child = children[0];\n  if (children.length > 1) {\n    for (const c of children) {\n      if (c.type !== Comment) {\n        child = c;\n        break;\n      }\n    }\n  }\n  return child;\n}\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance, postClone) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (shared.isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1)) done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {\n        leavingVNode.el[leaveCbKey]();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el[enterCbKey] = (cancelled) => {\n        if (called) return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el[enterCbKey] = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el[enterCbKey]) {\n        el[enterCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el[leaveCbKey] = (cancelled) => {\n        if (called) return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el[leaveCbKey] = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      const hooks2 = resolveTransitionHooks(\n        vnode2,\n        props,\n        state,\n        instance,\n        postClone\n      );\n      if (postClone) postClone(hooks2);\n      return hooks2;\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getInnerChild$1(vnode) {\n  if (!isKeepAlive(vnode)) {\n    if (isTeleport(vnode.type) && vnode.children) {\n      return findNonCommentChild(vnode.children);\n    }\n    return vnode;\n  }\n  const { shapeFlag, children } = vnode;\n  if (children) {\n    if (shapeFlag & 16) {\n      return children[0];\n    }\n    if (shapeFlag & 32 && shared.isFunction(children.default)) {\n      return children.default();\n    }\n  }\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    vnode.transition = hooks;\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128) keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineComponent(options, extraOptions) {\n  return shared.isFunction(options) ? (\n    // #8236: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => shared.extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nfunction useId() {\n  const i = getCurrentInstance();\n  if (i) {\n    return (i.appContext.config.idPrefix || \"v\") + \"-\" + i.ids[0] + i.ids[1]++;\n  }\n}\nfunction markAsyncBoundary(instance) {\n  instance.ids = [instance.ids[0] + instance.ids[2]++ + \"-\", 0, 0];\n}\n\nfunction useTemplateRef(key) {\n  const i = getCurrentInstance();\n  const r = reactivity.shallowRef(null);\n  if (i) {\n    const refs = i.refs === shared.EMPTY_OBJ ? i.refs = {} : i.refs;\n    {\n      Object.defineProperty(refs, key, {\n        enumerable: true,\n        get: () => r.value,\n        set: (val) => r.value = val\n      });\n    }\n  }\n  const ret = r;\n  return ret;\n}\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (shared.isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === shared.EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  const rawSetupState = reactivity.toRaw(setupState);\n  const canSetSetupRef = setupState === shared.EMPTY_OBJ ? () => false : (key) => {\n    return shared.hasOwn(rawSetupState, key);\n  };\n  if (oldRef != null && oldRef !== ref) {\n    if (shared.isString(oldRef)) {\n      refs[oldRef] = null;\n      if (canSetSetupRef(oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (reactivity.isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (shared.isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = shared.isString(ref);\n    const _isRef = reactivity.isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? canSetSetupRef(ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            shared.isArray(existing) && shared.remove(existing, refValue);\n          } else {\n            if (!shared.isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (canSetSetupRef(ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k) refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (canSetSetupRef(ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k) refs[rawRef.k] = value;\n        } else ;\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    }\n  }\n}\n\nlet hasLoggedMismatchError = false;\nconst logMismatchError = () => {\n  if (hasLoggedMismatchError) {\n    return;\n  }\n  console.error(\"Hydration completed but contains mismatches.\");\n  hasLoggedMismatchError = true;\n};\nconst isSVGContainer = (container) => container.namespaceURI.includes(\"svg\") && container.tagName !== \"foreignObject\";\nconst isMathMLContainer = (container) => container.namespaceURI.includes(\"MathML\");\nconst getContainerType = (container) => {\n  if (container.nodeType !== 1) return void 0;\n  if (isSVGContainer(container)) return \"svg\";\n  if (isMathMLContainer(container)) return \"mathml\";\n  return void 0;\n};\nconst isComment = (node) => node.nodeType === 8;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            logMismatchError();\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (isTemplateNode(node)) {\n          nextNode = nextSibling(node);\n          replaceNode(\n            vnode.el = node.content.firstChild,\n            node,\n            parentComponent\n          );\n        } else if (domType !== 8 || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 || domType === 3) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if ((domType !== 1 || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          if (isFragmentStart) {\n            nextNode = locateClosingAnchor(node);\n          } else if (isComment(node) && node.data === \"teleport start\") {\n            nextNode = locateClosingAnchor(node, node.data, \"teleport end\");\n          } else {\n            nextNode = nextSibling(node);\n          }\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            getContainerType(container),\n            optimized\n          );\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            getContainerType(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else ;\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;\n    const forcePatch = type === \"input\" || type === \"option\";\n    if (forcePatch || patchFlag !== -1) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      let needCallTransitionHooks = false;\n      if (isTemplateNode(el)) {\n        needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;\n        const content = el.content.firstChild;\n        if (needCallTransitionHooks) {\n          transition.beforeEnter(content);\n        }\n        replaceNode(content, el, parentComponent);\n        vnode.el = el = content;\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        while (next) {\n          if (!isMismatchAllowed(el, 1 /* CHILDREN */)) {\n            logMismatchError();\n          }\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          if (!isMismatchAllowed(el, 0 /* TEXT */)) {\n            logMismatchError();\n          }\n          el.textContent = vnode.children;\n        }\n      }\n      if (props) {\n        if (forcePatch || !optimized || patchFlag & (16 | 32)) {\n          const isCustomElement = el.tagName.includes(\"-\");\n          for (const key in props) {\n            if (forcePatch && (key.endsWith(\"value\") || key === \"indeterminate\") || shared.isOn(key) && !shared.isReservedProp(key) || // force hydrate v-bind with .prop modifiers\n            key[0] === \".\" || isCustomElement) {\n              patchProp(el, key, null, props[key], void 0, parentComponent);\n            }\n          }\n        } else if (props.onClick) {\n          patchProp(\n            el,\n            \"onClick\",\n            null,\n            props.onClick,\n            void 0,\n            parentComponent\n          );\n        } else if (patchFlag & 4 && reactivity.isReactive(props.style)) {\n          for (const key in props.style) props.style[key];\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          needCallTransitionHooks && transition.enter(el);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      const isText = vnode.type === Text;\n      if (node) {\n        if (isText && !optimized) {\n          if (i + 1 < l && normalizeVNode(children[i + 1]).type === Text) {\n            insert(\n              createText(\n                node.data.slice(vnode.children.length)\n              ),\n              container,\n              nextSibling(node)\n            );\n            node.data = vnode.children;\n          }\n        }\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (isText && !vnode.children) {\n        insert(vnode.el = createText(\"\"), container);\n      } else {\n        if (!isMismatchAllowed(container, 1 /* CHILDREN */)) {\n          logMismatchError();\n        }\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          getContainerType(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      logMismatchError();\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    if (!isMismatchAllowed(node.parentElement, 1 /* CHILDREN */)) {\n      logMismatchError();\n    }\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      getContainerType(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAnchor = (node, open = \"[\", close = \"]\") => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === open) match++;\n        if (node.data === close) {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  const replaceNode = (newNode, oldNode, parentComponent) => {\n    const parentNode2 = oldNode.parentNode;\n    if (parentNode2) {\n      parentNode2.replaceChild(newNode, oldNode);\n    }\n    let parent = parentComponent;\n    while (parent) {\n      if (parent.vnode.el === oldNode) {\n        parent.vnode.el = parent.subTree.el = newNode;\n      }\n      parent = parent.parent;\n    }\n  };\n  const isTemplateNode = (node) => {\n    return node.nodeType === 1 && node.tagName.toLowerCase() === \"template\";\n  };\n  return [hydrate, hydrateNode];\n}\nconst allowMismatchAttr = \"data-allow-mismatch\";\nconst MismatchTypeString = {\n  [0 /* TEXT */]: \"text\",\n  [1 /* CHILDREN */]: \"children\",\n  [2 /* CLASS */]: \"class\",\n  [3 /* STYLE */]: \"style\",\n  [4 /* ATTRIBUTE */]: \"attribute\"\n};\nfunction isMismatchAllowed(el, allowedType) {\n  if (allowedType === 0 /* TEXT */ || allowedType === 1 /* CHILDREN */) {\n    while (el && !el.hasAttribute(allowMismatchAttr)) {\n      el = el.parentElement;\n    }\n  }\n  const allowedAttr = el && el.getAttribute(allowMismatchAttr);\n  if (allowedAttr == null) {\n    return false;\n  } else if (allowedAttr === \"\") {\n    return true;\n  } else {\n    const list = allowedAttr.split(\",\");\n    if (allowedType === 0 /* TEXT */ && list.includes(\"children\")) {\n      return true;\n    }\n    return allowedAttr.split(\",\").includes(MismatchTypeString[allowedType]);\n  }\n}\n\nconst hydrateOnIdle = (timeout = 1e4) => (hydrate) => {\n  const id = requestIdleCallback(hydrate, { timeout });\n  return () => cancelIdleCallback(id);\n};\nconst hydrateOnVisible = (opts) => (hydrate, forEach) => {\n  const ob = new IntersectionObserver((entries) => {\n    for (const e of entries) {\n      if (!e.isIntersecting) continue;\n      ob.disconnect();\n      hydrate();\n      break;\n    }\n  }, opts);\n  forEach((el) => ob.observe(el));\n  return () => ob.disconnect();\n};\nconst hydrateOnMediaQuery = (query) => (hydrate) => {\n  if (query) {\n    const mql = matchMedia(query);\n    if (mql.matches) {\n      hydrate();\n    } else {\n      mql.addEventListener(\"change\", hydrate, { once: true });\n      return () => mql.removeEventListener(\"change\", hydrate);\n    }\n  }\n};\nconst hydrateOnInteraction = (interactions = []) => (hydrate, forEach) => {\n  if (shared.isString(interactions)) interactions = [interactions];\n  let hasHydrated = false;\n  const doHydrate = (e) => {\n    if (!hasHydrated) {\n      hasHydrated = true;\n      teardown();\n      hydrate();\n      e.target.dispatchEvent(new e.constructor(e.type, e));\n    }\n  };\n  const teardown = () => {\n    forEach((el) => {\n      for (const i of interactions) {\n        el.removeEventListener(i, doHydrate);\n      }\n    });\n  };\n  forEach((el) => {\n    for (const i of interactions) {\n      el.addEventListener(i, doHydrate, { once: true });\n    }\n  });\n  return teardown;\n};\nfunction forEachElement(node, cb) {\n  if (isComment(node) && node.data === \"[\") {\n    let depth = 1;\n    let next = node.nextSibling;\n    while (next) {\n      if (next.nodeType === 1) {\n        cb(next);\n      } else if (isComment(next)) {\n        if (next.data === \"]\") {\n          if (--depth === 0) break;\n        } else if (next.data === \"[\") {\n          depth++;\n        }\n      }\n      next = next.nextSibling;\n    }\n  } else {\n    cb(node);\n  }\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineAsyncComponent(source) {\n  if (shared.isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    hydrate: hydrateStrategy,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    __asyncHydrate(el, instance, hydrate) {\n      const doHydrate = hydrateStrategy ? () => {\n        const teardown = hydrateStrategy(\n          hydrate,\n          (cb) => forEachElement(el, cb)\n        );\n        if (teardown) {\n          (instance.bum || (instance.bum = [])).push(teardown);\n        }\n      } : hydrate;\n      if (resolvedComp) {\n        doHydrate();\n      } else {\n        load().then(() => !instance.isUnmounted && doHydrate());\n      }\n    },\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      markAsyncBoundary(instance);\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = reactivity.ref(false);\n      const error = reactivity.ref();\n      const delayed = reactivity.ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, namespace, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        namespace,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          shared.invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      invalidateMount(instance2.m);\n      invalidateMount(instance2.a);\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          shared.invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && !filter(name)) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (cached && (!current || !isSameVNodeType(cached, current))) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        if (isSuspense(instance.subTree.type)) {\n          queuePostRenderEffect(() => {\n            cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n          }, instance.subTree.suspense);\n        } else {\n          cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n        }\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return current = null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      if (vnode.type === Comment) {\n        current = null;\n        return vnode;\n      }\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        vnode.shapeFlag &= ~256;\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (shared.isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (shared.isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (shared.isRegExp(pattern)) {\n    pattern.lastIndex = 0;\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    shared.remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      reactivity.pauseTracking();\n      const reset = setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      reset();\n      reactivity.resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => {\n  if (!isInSSRComponentSetup || lifecycle === \"sp\") {\n    injectHook(lifecycle, (...args) => hook(...args), target);\n  }\n};\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\n  \"bu\"\n);\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\n  \"bum\"\n);\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\n  \"sp\"\n);\nconst onRenderTriggered = createHook(\"rtg\");\nconst onRenderTracked = createHook(\"rtc\");\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (shared.isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n      );\n      if (selfName && (selfName === name || selfName === shared.camelize(name) || selfName === shared.capitalize(shared.camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    return res;\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[shared.camelize(name)] || registry[shared.capitalize(shared.camelize(name))]);\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  const sourceIsArray = shared.isArray(source);\n  if (sourceIsArray || shared.isString(source)) {\n    const sourceIsReactiveArray = sourceIsArray && reactivity.isReactive(source);\n    if (sourceIsReactiveArray) {\n      source = reactivity.shallowReadArray(source);\n    }\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(\n        sourceIsReactiveArray ? reactivity.toReactive(source[i]) : source[i],\n        i,\n        void 0,\n        cached && cached[i]\n      );\n    }\n  } else if (typeof source === \"number\") {\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (shared.isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (shared.isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res) res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.ce || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.ce) {\n    if (name !== \"default\") props.name = name;\n    return openBlock(), createBlock(\n      Fragment,\n      null,\n      [createVNode(\"slot\", props, fallback && fallback())],\n      64\n    );\n  }\n  let slot = slots[name];\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: (props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`) + // #7256 force differentiate fallback content from actual content\n      (!validSlotContent && fallback ? \"_fb\" : \"\")\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child)) return true;\n    if (child.type === Comment) return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : shared.toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i) return null;\n  if (isStatefulComponent(i)) return getComponentPublicInstance(i);\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ shared.extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => i.props,\n    $attrs: (i) => i.attrs,\n    $slots: (i) => i.slots,\n    $refs: (i) => i.refs,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $host: (i) => i.ce,\n    $emit: (i) => i.emit,\n    $options: (i) => resolveMergedOptions(i) ,\n    $forceUpdate: (i) => i.f || (i.f = () => {\n      queueJob(i.update);\n    }),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => instanceWatch.bind(i) \n  })\n);\nconst hasSetupBinding = (state, key) => state !== shared.EMPTY_OBJ && !state.__isScriptSetup && shared.hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    if (key === \"__v_skip\") {\n      return true;\n    }\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && shared.hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        reactivity.track(instance.attrs, \"get\", \"\");\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, shared.hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else ;\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (shared.hasOwn(instance.props, key)) {\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      return false;\n    } else {\n      {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== shared.EMPTY_OBJ && shared.hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key) || shared.hasOwn(ctx, key) || shared.hasOwn(publicPropertiesMap, key) || shared.hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (shared.hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ shared.extend({}, PublicInstanceProxyHandlers, {\n  get(target, key) {\n    if (key === Symbol.unscopables) {\n      return;\n    }\n    return PublicInstanceProxyHandlers.get(target, key, target);\n  },\n  has(_, key) {\n    const has = key[0] !== \"_\" && !shared.isGloballyAllowed(key);\n    return has;\n  }\n});\n\nfunction defineProps() {\n  return null;\n}\nfunction defineEmits() {\n  return null;\n}\nfunction defineExpose(exposed) {\n}\nfunction defineOptions(options) {\n}\nfunction defineSlots() {\n  return null;\n}\nfunction defineModel() {\n}\nfunction withDefaults(props, defaults) {\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return shared.isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\")) continue;\n    let opt = props[key];\n    if (opt) {\n      if (shared.isArray(opt) || shared.isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else ;\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b) return a || b;\n  if (shared.isArray(a) && shared.isArray(b)) return a.concat(b);\n  return shared.extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (shared.isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = null;\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (shared.isFunction(methodHandler)) {\n        {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n      }\n    }\n  }\n  if (dataOptions) {\n    const data = dataOptions.call(publicThis, publicThis);\n    if (!shared.isObject(data)) ; else {\n      instance.data = reactivity.reactive(data);\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = shared.isFunction(opt) ? opt.bind(publicThis, publicThis) : shared.isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : shared.NOOP;\n      const set = !shared.isFunction(opt) && shared.isFunction(opt.set) ? opt.set.bind(publicThis) : shared.NOOP;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = shared.isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (shared.isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (shared.isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === shared.NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components) instance.components = components;\n  if (directives) instance.directives = directives;\n  if (serverPrefetch) {\n    markAsyncBoundary(instance);\n  }\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP) {\n  if (shared.isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (shared.isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (reactivity.isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    shared.isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  let getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (shared.isString(raw)) {\n    const handler = ctx[raw];\n    if (shared.isFunction(handler)) {\n      {\n        watch(getter, handler);\n      }\n    }\n  } else if (shared.isFunction(raw)) {\n    {\n      watch(getter, raw.bind(publicThis));\n    }\n  } else if (shared.isObject(raw)) {\n    if (shared.isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = shared.isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (shared.isFunction(handler)) {\n        watch(getter, handler, raw);\n      }\n    }\n  } else ;\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (shared.isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") ; else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (shared.extend)(\n      shared.isFunction(to) ? to.call(this, this) : to,\n      shared.isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (shared.isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? shared.extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (shared.isArray(to) && shared.isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return shared.extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to) return from;\n  if (!from) return to;\n  const merged = shared.extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: shared.NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!shared.isFunction(rootComponent)) {\n      rootComponent = shared.extend({}, rootComponent);\n    }\n    if (rootProps != null && !shared.isObject(rootProps)) {\n      rootProps = null;\n    }\n    const context = createAppContext();\n    const installedPlugins = /* @__PURE__ */ new WeakSet();\n    const pluginCleanupFns = [];\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) ; else if (plugin && shared.isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (shared.isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else ;\n        return app;\n      },\n      mixin(mixin) {\n        {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          }\n        }\n        return app;\n      },\n      component(name, component) {\n        if (!component) {\n          return context.components[name];\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        if (!directive) {\n          return context.directives[name];\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, namespace) {\n        if (!isMounted) {\n          const vnode = app._ceVNode || createVNode(rootComponent, rootProps);\n          vnode.appContext = context;\n          if (namespace === true) {\n            namespace = \"svg\";\n          } else if (namespace === false) {\n            namespace = void 0;\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, namespace);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          return getComponentPublicInstance(vnode.component);\n        }\n      },\n      onUnmount(cleanupFn) {\n        pluginCleanupFns.push(cleanupFn);\n      },\n      unmount() {\n        if (isMounted) {\n          callWithAsyncErrorHandling(\n            pluginCleanupFns,\n            app._instance,\n            16\n          );\n          render(null, app._container);\n          delete app._container.__vue_app__;\n        }\n      },\n      provide(key, value) {\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        const lastApp = currentApp;\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = lastApp;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) ; else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = currentApp ? currentApp._context.provides : instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : void 0;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && shared.isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else ;\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nconst internalObjectProto = {};\nconst createInternalObject = () => Object.create(internalObjectProto);\nconst isInternalObject = (obj) => Object.getPrototypeOf(obj) === internalObjectProto;\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = createInternalObject();\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : reactivity.shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = reactivity.toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (shared.hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = shared.camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !shared.hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !shared.hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    reactivity.trigger(instance.attrs, \"set\", \"\");\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (shared.isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && shared.hasOwn(options, camelKey = shared.camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = reactivity.toRaw(props);\n    const castValues = rawCastValues || shared.EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !shared.hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = shared.hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && shared.isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          const reset = setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          reset();\n        }\n      } else {\n        value = defaultValue;\n      }\n      if (instance.ce) {\n        instance.ce._setProp(key, value);\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === shared.hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nconst mixinPropsCache = /* @__PURE__ */ new WeakMap();\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = asMixin ? mixinPropsCache : appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (!shared.isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      shared.extend(normalized, props);\n      if (keys) needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (shared.isObject(comp)) {\n      cache.set(comp, shared.EMPTY_ARR);\n    }\n    return shared.EMPTY_ARR;\n  }\n  if (shared.isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      const normalizedKey = shared.camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = shared.EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    for (const key in raw) {\n      const normalizedKey = shared.camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = shared.isArray(opt) || shared.isFunction(opt) ? { type: opt } : shared.extend({}, opt);\n        const propType = prop.type;\n        let shouldCast = false;\n        let shouldCastTrue = true;\n        if (shared.isArray(propType)) {\n          for (let index = 0; index < propType.length; ++index) {\n            const type = propType[index];\n            const typeName = shared.isFunction(type) && type.name;\n            if (typeName === \"Boolean\") {\n              shouldCast = true;\n              break;\n            } else if (typeName === \"String\") {\n              shouldCastTrue = false;\n            }\n          }\n        } else {\n          shouldCast = shared.isFunction(propType) && propType.name === \"Boolean\";\n        }\n        prop[0 /* shouldCast */] = shouldCast;\n        prop[1 /* shouldCastTrue */] = shouldCastTrue;\n        if (shouldCast || shared.hasOwn(prop, \"default\")) {\n          needCastKeys.push(normalizedKey);\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (shared.isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\" && !shared.isReservedProp(key)) {\n    return true;\n  }\n  return false;\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => shared.isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (false) ;\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue;\n    const value = rawSlots[key];\n    if (shared.isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst assignSlots = (slots, children, optimized) => {\n  for (const key in children) {\n    if (optimized || key !== \"_\") {\n      slots[key] = children[key];\n    }\n  }\n};\nconst initSlots = (instance, children, optimized) => {\n  const slots = instance.slots = createInternalObject();\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      assignSlots(slots, children, optimized);\n      if (optimized) {\n        shared.def(slots, \"_\", type, true);\n      }\n    } else {\n      normalizeObjectSlots(children, slots);\n    }\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n  }\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = shared.EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        assignSlots(slots, children, optimized);\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  const target = shared.getGlobalThis();\n  target.__VUE__ = true;\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = shared.NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, namespace);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else ;\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, namespace) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      namespace,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    if (n2.type === \"svg\") {\n      namespace = \"svg\";\n    } else if (n2.type === \"math\") {\n      namespace = \"mathml\";\n    }\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      namespace,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(vnode, namespace),\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !shared.isReservedProp(key)) {\n          hostPatchProp(el, key, null, props[key], namespace, parentComponent);\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value, namespace);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = needTransition(parentSuspense, transition);\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (vnode === subTree || isSuspense(subTree.type) && (subTree.ssContent === vnode || subTree.ssFallback === vnode)) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || shared.EMPTY_OBJ;\n    const newProps = n2.props || shared.EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (oldProps.innerHTML && newProps.innerHTML == null || oldProps.textContent && newProps.textContent == null) {\n      hostSetElementText(el, \"\");\n    }\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds\n      );\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(el, oldProps, newProps, parentComponent, namespace);\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, namespace);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, namespace);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(el, key, prev, next, namespace, parentComponent);\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(el, oldProps, newProps, parentComponent, namespace);\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, oldProps, newProps, parentComponent, namespace) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== shared.EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!shared.isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              namespace,\n              parentComponent\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (shared.isReservedProp(key)) continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(el, key, prev, next, namespace, parentComponent);\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value, namespace);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        // #10007\n        // such fragment like `<></>` will be compiled into\n        // a fragment which doesn't have a children.\n        // In this case fallback to an empty array\n        n2.children || [],\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null || parentComponent && n2 === parentComponent.subTree\n        ) {\n          traverseStaticChildren(\n            n1,\n            n2,\n            true\n            /* shallow */\n          );\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          namespace,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      setupComponent(instance, false, optimized);\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n    } else {\n      setupRenderEffect(\n        instance,\n        initialVNode,\n        container,\n        anchor,\n        parentSuspense,\n        namespace,\n        optimized\n      );\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        updateComponentPreRender(instance, n2, optimized);\n        return;\n      } else {\n        instance.next = n2;\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent, root, type } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          shared.invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            instance.subTree = renderComponentRoot(instance);\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n          };\n          if (isAsyncWrapperVNode && type.__asyncHydrate) {\n            type.__asyncHydrate(\n              el,\n              instance,\n              hydrateSubTree\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (root.ce) {\n            root.ce._injectChildStyle(type);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            namespace\n          );\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        {\n          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);\n          if (nonHydratedAsyncRoot) {\n            if (next) {\n              next.el = vnode.el;\n              updateComponentPreRender(instance, next, optimized);\n            }\n            nonHydratedAsyncRoot.asyncDep.then(() => {\n              if (!instance.isUnmounted) {\n                componentUpdateFn();\n              }\n            });\n            return;\n          }\n        }\n        let originNext = next;\n        let vnodeHook;\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          shared.invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        const nextTree = renderComponentRoot(instance);\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          namespace\n        );\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n      }\n    };\n    instance.scope.on();\n    const effect = instance.effect = new reactivity.ReactiveEffect(componentUpdateFn);\n    instance.scope.off();\n    const update = instance.update = effect.run.bind(effect);\n    const job = instance.job = effect.runIfDirty.bind(effect);\n    job.i = instance;\n    job.id = instance.uid;\n    effect.scheduler = () => queueJob(job);\n    toggleRecurse(instance, true);\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    reactivity.pauseTracking();\n    flushPreFlushCbs(instance);\n    reactivity.resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    c1 = c1 || shared.EMPTY_ARR;\n    c2 = c2 || shared.EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : shared.EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition2) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs,\n      cacheIndex\n    } = vnode;\n    if (patchFlag === -2) {\n      optimized = false;\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (cacheIndex != null) {\n      parentComponent.renderCache[cacheIndex] = void 0;\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #5154\n      // when v-once is used inside a block, setBlockTracking(-1) marks the\n      // parent block with hasOnce: true\n      // so that it doesn't take the fast path during unmount - otherwise\n      // components nested in v-once are never unmounted.\n      !dynamicChildren.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    const { bum, scope, job, subTree, um, m, a } = instance;\n    invalidateMount(m);\n    invalidateMount(a);\n    if (bum) {\n      shared.invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (job) {\n      job.flags |= 8;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    const el = hostNextSibling(vnode.anchor || vnode.el);\n    const teleportEnd = el && el[TeleportEndKey];\n    return teleportEnd ? hostNextSibling(teleportEnd) : el;\n  };\n  let isFlushing = false;\n  const render = (vnode, container, namespace) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(\n        container._vnode || null,\n        vnode,\n        container,\n        null,\n        null,\n        null,\n        namespace\n      );\n    }\n    container._vnode = vnode;\n    if (!isFlushing) {\n      isFlushing = true;\n      flushPreFlushCbs();\n      flushPostFlushCbs();\n      isFlushing = false;\n    }\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction resolveChildrenNamespace({ type, props }, currentNamespace) {\n  return currentNamespace === \"svg\" && type === \"foreignObject\" || currentNamespace === \"mathml\" && type === \"annotation-xml\" && props && props.encoding && props.encoding.includes(\"html\") ? void 0 : currentNamespace;\n}\nfunction toggleRecurse({ effect, job }, allowed) {\n  if (allowed) {\n    effect.flags |= 32;\n    job.flags |= 4;\n  } else {\n    effect.flags &= ~32;\n    job.flags &= ~4;\n  }\n}\nfunction needTransition(parentSuspense, transition) {\n  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (shared.isArray(ch1) && shared.isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow && c2.patchFlag !== -2)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\nfunction locateNonHydratedAsyncRoot(instance) {\n  const subComponent = instance.subTree.component;\n  if (subComponent) {\n    if (subComponent.asyncDep && !subComponent.asyncResolved) {\n      return subComponent;\n    } else {\n      return locateNonHydratedAsyncRoot(subComponent);\n    }\n  }\n}\nfunction invalidateMount(hooks) {\n  if (hooks) {\n    for (let i = 0; i < hooks.length; i++)\n      hooks[i].flags |= 8;\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    return ctx;\n  }\n};\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    { flush: \"post\" }\n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    { flush: \"sync\" }\n  );\n}\nfunction watch(source, cb, options) {\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, options = shared.EMPTY_OBJ) {\n  const { immediate, deep, flush, once } = options;\n  const baseWatchOptions = shared.extend({}, options);\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else if (!cb || immediate) {\n      baseWatchOptions.once = true;\n    } else {\n      return {\n        stop: shared.NOOP,\n        resume: shared.NOOP,\n        pause: shared.NOOP\n      };\n    }\n  }\n  const instance = currentInstance;\n  baseWatchOptions.call = (fn, type, args) => callWithAsyncErrorHandling(fn, instance, type, args);\n  let isPre = false;\n  if (flush === \"post\") {\n    baseWatchOptions.scheduler = (job) => {\n      queuePostRenderEffect(job, instance && instance.suspense);\n    };\n  } else if (flush !== \"sync\") {\n    isPre = true;\n    baseWatchOptions.scheduler = (job, isFirstRun) => {\n      if (isFirstRun) {\n        job();\n      } else {\n        queueJob(job);\n      }\n    };\n  }\n  baseWatchOptions.augmentJob = (job) => {\n    if (cb) {\n      job.flags |= 4;\n    }\n    if (isPre) {\n      job.flags |= 2;\n      if (instance) {\n        job.id = instance.uid;\n        job.i = instance;\n      }\n    }\n  };\n  const watchHandle = reactivity.watch(source, cb, baseWatchOptions);\n  if (ssrCleanup) ssrCleanup.push(watchHandle);\n  return watchHandle;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = shared.isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (shared.isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const reset = setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  reset();\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\n\nfunction useModel(props, name, options = shared.EMPTY_OBJ) {\n  const i = getCurrentInstance();\n  const camelizedName = shared.camelize(name);\n  const hyphenatedName = shared.hyphenate(name);\n  const modifiers = getModelModifiers(props, name);\n  const res = reactivity.customRef((track, trigger) => {\n    let localValue;\n    let prevSetValue = shared.EMPTY_OBJ;\n    let prevEmittedValue;\n    watchSyncEffect(() => {\n      const propValue = props[name];\n      if (shared.hasChanged(localValue, propValue)) {\n        localValue = propValue;\n        trigger();\n      }\n    });\n    return {\n      get() {\n        track();\n        return options.get ? options.get(localValue) : localValue;\n      },\n      set(value) {\n        const emittedValue = options.set ? options.set(value) : value;\n        if (!shared.hasChanged(emittedValue, localValue) && !(prevSetValue !== shared.EMPTY_OBJ && shared.hasChanged(value, prevSetValue))) {\n          return;\n        }\n        const rawProps = i.vnode.props;\n        if (!(rawProps && // check if parent has passed v-model\n        (name in rawProps || camelizedName in rawProps || hyphenatedName in rawProps) && (`onUpdate:${name}` in rawProps || `onUpdate:${camelizedName}` in rawProps || `onUpdate:${hyphenatedName}` in rawProps))) {\n          localValue = value;\n          trigger();\n        }\n        i.emit(`update:${name}`, emittedValue);\n        if (shared.hasChanged(value, emittedValue) && shared.hasChanged(value, prevSetValue) && !shared.hasChanged(emittedValue, prevEmittedValue)) {\n          trigger();\n        }\n        prevSetValue = value;\n        prevEmittedValue = emittedValue;\n      }\n    };\n  });\n  res[Symbol.iterator] = () => {\n    let i2 = 0;\n    return {\n      next() {\n        if (i2 < 2) {\n          return { value: i2++ ? modifiers || shared.EMPTY_OBJ : res, done: false };\n        } else {\n          return { done: true };\n        }\n      }\n    };\n  };\n  return res;\n}\nconst getModelModifiers = (props, modelName) => {\n  return modelName === \"modelValue\" || modelName === \"model-value\" ? props.modelModifiers : props[`${modelName}Modifiers`] || props[`${shared.camelize(modelName)}Modifiers`] || props[`${shared.hyphenate(modelName)}Modifiers`];\n};\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted) return;\n  const props = instance.vnode.props || shared.EMPTY_OBJ;\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modifiers = isModelListener && getModelModifiers(props, event.slice(7));\n  if (modifiers) {\n    if (modifiers.trim) {\n      args = rawArgs.map((a) => shared.isString(a) ? a.trim() : a);\n    }\n    if (modifiers.number) {\n      args = rawArgs.map(shared.looseToNumber);\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = shared.toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = shared.toHandlerKey(shared.camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = shared.toHandlerKey(shared.hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (!shared.isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        shared.extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (shared.isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (shared.isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    shared.extend(normalized, raw);\n  }\n  if (shared.isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !shared.isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) || shared.hasOwn(options, shared.hyphenate(key)) || shared.hasOwn(options, key);\n}\n\nfunction markAttrsAccessed() {\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    props,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  const prev = setCurrentRenderingInstance(instance);\n  let result;\n  let fallthroughAttrs;\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      const thisProxy = false ? new Proxy(proxyToUse, {\n        get(target, key, receiver) {\n          warn(\n            `Property '${String(\n              key\n            )}' was accessed via 'this'. Avoid using 'this' in templates.`\n          );\n          return Reflect.get(target, key, receiver);\n        }\n      }) : proxyToUse;\n      result = normalizeVNode(\n        render.call(\n          thisProxy,\n          proxyToUse,\n          renderCache,\n          false ? shallowReadonly(props) : props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (false) ;\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          false ? shallowReadonly(props) : props,\n          false ? {\n            get attrs() {\n              markAttrsAccessed();\n              return shallowReadonly(attrs);\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          false ? shallowReadonly(props) : props,\n          null\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(shared.isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs, false, true);\n      }\n    }\n  }\n  if (vnode.dirs) {\n    root = cloneVNode(root, null, false, true);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    setTransitionHooks(root, vnode.transition);\n  }\n  {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nfunction filterSingleRoot(children, recurse = true) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || shared.isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent) {\n    const root = parent.subTree;\n    if (root.suspense && root.suspense.activeBranch === vnode) {\n      root.el = vnode.el;\n    }\n    if (root === vnode) {\n      (vnode = parent.vnode).el = el;\n      parent = parent.parent;\n    } else {\n      break;\n    }\n  }\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nlet suspenseId = 0;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      if (parentSuspense && parentSuspense.deps > 0 && !n1.suspense.isInFallback) {\n        n2.suspense = n1.suspense;\n        n2.suspense.vnode = n2;\n        n2.el = n1.el;\n        return;\n      }\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (shared.isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    namespace,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      namespace,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, namespace, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        if (!isHydrating) {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      }\n    } else {\n      suspense.pendingId = suspenseId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      if (newBranch.shapeFlag & 512) {\n        suspense.pendingId = newBranch.component.suspenseId;\n      } else {\n        suspense.pendingId = suspenseId++;\n      }\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense && parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? shared.toNumber(vnode.props.timeout) : void 0;\n  const initialAnchor = anchor;\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    namespace,\n    container,\n    hiddenContainer,\n    deps: 0,\n    pendingId: suspenseId++,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: !isHydrating,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      let delayEnter = false;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(\n                pendingBranch,\n                container2,\n                anchor === initialAnchor ? next(activeBranch) : anchor,\n                0\n              );\n              queuePostFlushCb(effects);\n            }\n          };\n        }\n        if (activeBranch) {\n          if (parentNode(activeBranch.el) === container2) {\n            anchor = next(activeBranch);\n          }\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor && !delayEnter) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, namespace: namespace2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          namespace2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect, optimized2) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          namespace,\n          optimized2\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    // eslint-disable-next-line no-restricted-globals\n    document.createElement(\"div\"),\n    null,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (shared.isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (shared.isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (shared.isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  let el = branch.el;\n  while (!el && branch.component) {\n    branch = branch.component.subTree;\n    el = branch.el;\n  }\n  vnode.el = el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  const suspensible = vnode.props && vnode.props.suspensible;\n  return suspensible != null && suspensible !== false;\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n  if (value < 0 && currentBlock) {\n    currentBlock.hasOnce = true;\n  }\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  return n1.type === n2.type && n1.key === n2.key;\n}\nfunction transformVNodeArgs(transformer) {\n}\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetStart: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= shared.isString(children) ? 8 : 16;\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = _createVNode;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag = -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !shared.isString(klass)) {\n      props.class = shared.normalizeClass(klass);\n    }\n    if (shared.isObject(style)) {\n      if (reactivity.isProxy(style) && !shared.isArray(style)) {\n        style = shared.extend({}, style);\n      }\n      props.style = shared.normalizeStyle(style);\n    }\n  }\n  const shapeFlag = shared.isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : shared.isObject(type) ? 4 : shared.isFunction(type) ? 2 : 0;\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props) return null;\n  return reactivity.isProxy(props) || isInternalObject(props) ? shared.extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {\n  const { props, ref, patchFlag, children, transition } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? shared.isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: children,\n    target: vnode.target,\n    targetStart: vnode.targetStart,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  if (transition && cloneTransition) {\n    setTransitionHooks(\n      cloned,\n      transition.clone(cloned)\n    );\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (shared.isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (shared.isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !isInternalObject(children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (shared.isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = shared.normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\n      } else if (shared.isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(shared.isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    job: null,\n    scope: new reactivity.EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    ids: parent ? parent.ids : [\"\", 0, 0],\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: shared.EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: shared.EMPTY_OBJ,\n    data: shared.EMPTY_OBJ,\n    props: shared.EMPTY_OBJ,\n    attrs: shared.EMPTY_OBJ,\n    slots: shared.EMPTY_OBJ,\n    refs: shared.EMPTY_OBJ,\n    setupState: shared.EMPTY_OBJ,\n    setupContext: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  {\n    instance.ctx = { _: instance };\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet setInSSRSetupState;\n{\n  const g = shared.getGlobalThis();\n  const registerGlobalSetter = (key, setter) => {\n    let setters;\n    if (!(setters = g[key])) setters = g[key] = [];\n    setters.push(setter);\n    return (v) => {\n      if (setters.length > 1) setters.forEach((set) => set(v));\n      else setters[0](v);\n    };\n  };\n  internalSetCurrentInstance = registerGlobalSetter(\n    `__VUE_INSTANCE_SETTERS__`,\n    (v) => currentInstance = v\n  );\n  setInSSRSetupState = registerGlobalSetter(\n    `__VUE_SSR_SETTERS__`,\n    (v) => isInSSRComponentSetup = v\n  );\n}\nconst setCurrentInstance = (instance) => {\n  const prev = currentInstance;\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n  return () => {\n    instance.scope.off();\n    internalSetCurrentInstance(prev);\n  };\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false, optimized = false) {\n  isSSR && setInSSRSetupState(isSSR);\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children, optimized);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isSSR && setInSSRSetupState(false);\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  const Component = instance.type;\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    const reset = setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [\n        instance.props,\n        setupContext\n      ]\n    );\n    reactivity.resetTracking();\n    reset();\n    if (shared.isPromise(setupResult)) {\n      if (!isAsyncWrapper(instance)) markAsyncBoundary(instance);\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (shared.isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (shared.isObject(setupResult)) {\n    instance.setupState = reactivity.proxyRefs(setupResult);\n  } else ;\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = shared.extend(\n          shared.extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n      }\n    }\n    instance.render = Component.render || shared.NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  {\n    const reset = setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    try {\n      applyOptions(instance);\n    } finally {\n      reactivity.resetTracking();\n      reset();\n    }\n  }\n}\nconst attrsProxyHandlers = {\n  get(target, key) {\n    reactivity.track(target, \"get\", \"\");\n    return target[key];\n  }\n};\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    instance.exposed = exposed || {};\n  };\n  {\n    return {\n      attrs: new Proxy(instance.attrs, attrsProxyHandlers),\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\nfunction getComponentPublicInstance(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  } else {\n    return instance.proxy;\n  }\n}\nfunction getComponentName(Component, includeInferred = true) {\n  return shared.isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction isClassComponent(value) {\n  return shared.isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  const c = reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\n  return c;\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nfunction initCustomFormatter() {\n  {\n    return;\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  ret.cacheIndex = index;\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (shared.hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.5.3\";\nconst warn$1 = shared.NOOP;\nconst ErrorTypeStrings = ErrorTypeStrings$1 ;\nconst devtools = void 0;\nconst setDevtoolsHook = shared.NOOP;\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode,\n  getComponentPublicInstance,\n  ensureValidVNode,\n  pushWarningContext,\n  popWarningContext\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\nconst DeprecationTypes = null;\n\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.TrackOpTypes = reactivity.TrackOpTypes;\nexports.TriggerOpTypes = reactivity.TriggerOpTypes;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.getCurrentWatcher = reactivity.getCurrentWatcher;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.onWatcherCleanup = reactivity.onWatcherCleanup;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.toValue = reactivity.toValue;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.BaseTransitionPropsValidators = BaseTransitionPropsValidators;\nexports.Comment = Comment;\nexports.DeprecationTypes = DeprecationTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.ErrorTypeStrings = ErrorTypeStrings;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.assertNumber = assertNumber;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineModel = defineModel;\nexports.defineOptions = defineOptions;\nexports.defineProps = defineProps;\nexports.defineSlots = defineSlots;\nexports.devtools = devtools;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.hasInjectionContext = hasInjectionContext;\nexports.hydrateOnIdle = hydrateOnIdle;\nexports.hydrateOnInteraction = hydrateOnInteraction;\nexports.hydrateOnMediaQuery = hydrateOnMediaQuery;\nexports.hydrateOnVisible = hydrateOnVisible;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeModels = mergeModels;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useId = useId;\nexports.useModel = useModel;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTemplateRef = useTemplateRef;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn$1;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;\n","/**\n* @vue/runtime-core v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar reactivity = require('@vue/reactivity');\nvar shared = require('@vue/shared');\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\nfunction popWarningContext() {\n  stack.pop();\n}\nlet isWarning = false;\nfunction warn$1(msg, ...args) {\n  if (isWarning) return;\n  isWarning = true;\n  reactivity.pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        // eslint-disable-next-line no-restricted-syntax\n        msg + args.map((a) => {\n          var _a, _b;\n          return (_b = (_a = a.toString) == null ? void 0 : _a.call(a)) != null ? _b : JSON.stringify(a);\n        }).join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  reactivity.resetTracking();\n  isWarning = false;\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (shared.isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (reactivity.isRef(value)) {\n    value = formatProp(key, reactivity.toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (shared.isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = reactivity.toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction assertNumber(val, type) {\n  if (val === void 0) {\n    return;\n  } else if (typeof val !== \"number\") {\n    warn$1(`${type} is not a valid number - got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn$1(`${type} is NaN - the duration expression might be incorrect.`);\n  }\n}\n\nconst ErrorCodes = {\n  \"SETUP_FUNCTION\": 0,\n  \"0\": \"SETUP_FUNCTION\",\n  \"RENDER_FUNCTION\": 1,\n  \"1\": \"RENDER_FUNCTION\",\n  \"NATIVE_EVENT_HANDLER\": 5,\n  \"5\": \"NATIVE_EVENT_HANDLER\",\n  \"COMPONENT_EVENT_HANDLER\": 6,\n  \"6\": \"COMPONENT_EVENT_HANDLER\",\n  \"VNODE_HOOK\": 7,\n  \"7\": \"VNODE_HOOK\",\n  \"DIRECTIVE_HOOK\": 8,\n  \"8\": \"DIRECTIVE_HOOK\",\n  \"TRANSITION_HOOK\": 9,\n  \"9\": \"TRANSITION_HOOK\",\n  \"APP_ERROR_HANDLER\": 10,\n  \"10\": \"APP_ERROR_HANDLER\",\n  \"APP_WARN_HANDLER\": 11,\n  \"11\": \"APP_WARN_HANDLER\",\n  \"FUNCTION_REF\": 12,\n  \"12\": \"FUNCTION_REF\",\n  \"ASYNC_COMPONENT_LOADER\": 13,\n  \"13\": \"ASYNC_COMPONENT_LOADER\",\n  \"SCHEDULER\": 14,\n  \"14\": \"SCHEDULER\",\n  \"COMPONENT_UPDATE\": 15,\n  \"15\": \"COMPONENT_UPDATE\",\n  \"APP_UNMOUNT_CLEANUP\": 16,\n  \"16\": \"APP_UNMOUNT_CLEANUP\"\n};\nconst ErrorTypeStrings$1 = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush\",\n  [15]: \"component update\",\n  [16]: \"app unmount cleanup function\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  try {\n    return args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (shared.isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && shared.isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  if (shared.isArray(fn)) {\n    const values = [];\n    for (let i = 0; i < fn.length; i++) {\n      values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n    }\n    return values;\n  } else {\n    warn$1(\n      `Invalid value type passed to callWithAsyncErrorHandling(): ${typeof fn}`\n    );\n  }\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  const { errorHandler, throwUnhandledErrorInProduction } = instance && instance.appContext.config || shared.EMPTY_OBJ;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = ErrorTypeStrings$1[type] ;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    if (errorHandler) {\n      reactivity.pauseTracking();\n      callWithErrorHandling(errorHandler, null, 10, [\n        err,\n        exposedInstance,\n        errorInfo\n      ]);\n      reactivity.resetTracking();\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev, throwUnhandledErrorInProduction);\n}\nfunction logError(err, type, contextVNode, throwInDev = true, throwInProd = false) {\n  {\n    const info = ErrorTypeStrings$1[type];\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n    warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n    if (contextVNode) {\n      popWarningContext();\n    }\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = isFlushing ? flushIndex + 1 : 0;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJob = queue[middle];\n    const middleJobId = getId(middleJob);\n    if (middleJobId < id || middleJobId === id && middleJob.flags & 2) {\n      start = middle + 1;\n    } else {\n      end = middle;\n    }\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!(job.flags & 1)) {\n    const jobId = getId(job);\n    const lastJob = queue[queue.length - 1];\n    if (!lastJob || // fast path when the job id is larger than the tail\n    !(job.flags & 2) && jobId >= getId(lastJob)) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(jobId), 0, job);\n    }\n    job.flags |= 1;\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!shared.isArray(cb)) {\n    if (activePostFlushCbs && cb.id === -1) {\n      activePostFlushCbs.splice(postFlushIndex + 1, 0, cb);\n    } else if (!(cb.flags & 1)) {\n      pendingPostFlushCbs.push(cb);\n      cb.flags |= 1;\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(instance, seen, i = isFlushing ? flushIndex + 1 : 0) {\n  {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.flags & 2) {\n      if (instance && cb.id !== instance.uid) {\n        continue;\n      }\n      if (checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      if (cb.flags & 4) {\n        cb.flags &= ~1;\n      }\n      cb();\n      cb.flags &= ~1;\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)].sort(\n      (a, b) => getId(a) - getId(b)\n    );\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    {\n      seen = seen || /* @__PURE__ */ new Map();\n    }\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      const cb = activePostFlushCbs[postFlushIndex];\n      if (checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      if (cb.flags & 4) {\n        cb.flags &= ~1;\n      }\n      if (!(cb.flags & 8)) cb();\n      cb.flags &= ~1;\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? job.flags & 2 ? -1 : Infinity : job.id;\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  const check = (job) => checkRecursiveUpdates(seen, job) ;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && !(job.flags & 8)) {\n        if (check(job)) {\n          continue;\n        }\n        if (job.flags & 4) {\n          job.flags &= ~1;\n        }\n        callWithErrorHandling(\n          job,\n          job.i,\n          job.i ? 15 : 14\n        );\n        job.flags &= ~1;\n      }\n    }\n  } finally {\n    for (; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job) {\n        job.flags &= ~1;\n      }\n    }\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.i;\n      const componentName = instance && getComponentName(instance.type);\n      handleError(\n        `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,\n        null,\n        10\n      );\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = /* @__PURE__ */ new Map();\n{\n  shared.getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = /* @__PURE__ */ new Map();\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n  record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: /* @__PURE__ */ new Set()\n  });\n  return true;\n}\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n  if (!record) {\n    return;\n  }\n  record.initialDef.render = newRender;\n  [...record.instances].forEach((instance) => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n    instance.renderCache = [];\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record) return;\n  newComp = normalizeClassComponent(newComp);\n  updateComponentDef(record.initialDef, newComp);\n  const instances = [...record.instances];\n  for (let i = 0; i < instances.length; i++) {\n    const instance = instances[i];\n    const oldComp = normalizeClassComponent(instance.type);\n    let dirtyInstances = hmrDirtyComponents.get(oldComp);\n    if (!dirtyInstances) {\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      }\n      hmrDirtyComponents.set(oldComp, dirtyInstances = /* @__PURE__ */ new Set());\n    }\n    dirtyInstances.add(instance);\n    instance.appContext.propsCache.delete(instance.type);\n    instance.appContext.emitsCache.delete(instance.type);\n    instance.appContext.optionsCache.delete(instance.type);\n    if (instance.ceReload) {\n      dirtyInstances.add(instance);\n      instance.ceReload(newComp.styles);\n      dirtyInstances.delete(instance);\n    } else if (instance.parent) {\n      queueJob(() => {\n        instance.parent.update();\n        dirtyInstances.delete(instance);\n      });\n    } else if (instance.appContext.reload) {\n      instance.appContext.reload();\n    } else if (typeof window !== \"undefined\") {\n      window.location.reload();\n    } else {\n      console.warn(\n        \"[HMR] Root or manually mounted instance modified. Full reload required.\"\n      );\n    }\n    if (instance.root.ce && instance !== instance.root) {\n      instance.root.ce._removeChildStyle(oldComp);\n    }\n  }\n  queuePostFlushCb(() => {\n    hmrDirtyComponents.clear();\n  });\n}\nfunction updateComponentDef(oldComp, newComp) {\n  shared.extend(oldComp, newComp);\n  for (const key in oldComp) {\n    if (key !== \"__file\" && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`\n      );\n    }\n  };\n}\n\nlet devtools$1;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n  if (devtools$1) {\n    devtools$1.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args });\n  }\n}\nfunction setDevtoolsHook$1(hook, target) {\n  var _a, _b;\n  devtools$1 = hook;\n  if (devtools$1) {\n    devtools$1.enabled = true;\n    buffer.forEach(({ event, args }) => devtools$1.emit(event, ...args));\n    buffer = [];\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== \"undefined\" && // some envs mock window but not fully\n    window.HTMLElement && // also exclude jsdom\n    // eslint-disable-next-line no-restricted-syntax\n    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes(\"jsdom\"))\n  ) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push((newHook) => {\n      setDevtoolsHook$1(newHook, target);\n    });\n    setTimeout(() => {\n      if (!devtools$1) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3e3);\n  } else {\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\nfunction devtoolsInitApp(app, version) {\n  emit$1(\"app:init\" /* APP_INIT */, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\nfunction devtoolsUnmountApp(app) {\n  emit$1(\"app:unmount\" /* APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\nconst devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:removed\" /* COMPONENT_REMOVED */\n);\nconst devtoolsComponentRemoved = (component) => {\n  if (devtools$1 && typeof devtools$1.cleanupBuffer === \"function\" && // remove the component if it wasn't buffered\n  !devtools$1.cleanupBuffer(component)) {\n    _devtoolsComponentRemoved(component);\n  }\n};\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction createDevtoolsComponentHook(hook) {\n  return (component) => {\n    emit$1(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : void 0,\n      component\n    );\n  };\n}\nconst devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\nconst devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit$1(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n  emit$1(\n    \"component:emit\" /* COMPONENT_EMIT */,\n    component.appContext.app,\n    component,\n    event,\n    params\n  );\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx) return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nfunction validateDirectiveName(name) {\n  if (shared.isBuiltInDirective(name)) {\n    warn$1(\"Do not use built-in directive ids as custom directive id: \" + name);\n  }\n}\nfunction withDirectives(vnode, directives) {\n  if (currentRenderingInstance === null) {\n    warn$1(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n  const instance = getComponentPublicInstance(currentRenderingInstance);\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (shared.isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        reactivity.traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      reactivity.pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      reactivity.resetTracking();\n    }\n  }\n}\n\nconst TeleportEndKey = Symbol(\"_vte\");\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTeleportDeferred = (props) => props && (props.defer || props.defer === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst isTargetMathML = (target) => typeof MathMLElement === \"function\" && target instanceof MathMLElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (shared.isString(targetSelector)) {\n    if (!select) {\n      warn$1(\n        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`\n      );\n      return null;\n    } else {\n      const target = select(targetSelector);\n      if (!target && !isTeleportDisabled(props)) {\n        warn$1(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`\n        );\n      }\n      return target;\n    }\n  } else {\n    if (!targetSelector && !isTeleportDisabled(props)) {\n      warn$1(`Invalid Teleport target: ${targetSelector}`);\n    }\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  name: \"Teleport\",\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (n1 == null) {\n      const placeholder = n2.el = createComment(\"teleport start\") ;\n      const mainAnchor = n2.anchor = createComment(\"teleport end\") ;\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      const mountToTarget = () => {\n        const target = n2.target = resolveTarget(n2.props, querySelector);\n        const targetAnchor = prepareAnchor(target, n2, createText, insert);\n        if (target) {\n          if (namespace !== \"svg\" && isTargetSVG(target)) {\n            namespace = \"svg\";\n          } else if (namespace !== \"mathml\" && isTargetMathML(target)) {\n            namespace = \"mathml\";\n          }\n          if (!disabled) {\n            mount(target, targetAnchor);\n            updateCssVars(n2);\n          }\n        } else if (!disabled) {\n          warn$1(\n            \"Invalid Teleport target on mount:\",\n            target,\n            `(${typeof target})`\n          );\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n        updateCssVars(n2);\n      }\n      if (isTeleportDeferred(n2.props)) {\n        queuePostRenderEffect(mountToTarget, parentSuspense);\n      } else {\n        mountToTarget();\n      }\n    } else {\n      n2.el = n1.el;\n      n2.targetStart = n1.targetStart;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      if (namespace === \"svg\" || isTargetSVG(target)) {\n        namespace = \"svg\";\n      } else if (namespace === \"mathml\" || isTargetMathML(target)) {\n        namespace = \"mathml\";\n      }\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        } else {\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to;\n          }\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          } else {\n            warn$1(\n              \"Invalid Teleport target on update:\",\n              target,\n              `(${typeof target})`\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n      updateCssVars(n2);\n    }\n  },\n  remove(vnode, parentComponent, parentSuspense, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const {\n      shapeFlag,\n      children,\n      anchor,\n      targetStart,\n      targetAnchor,\n      target,\n      props\n    } = vnode;\n    if (target) {\n      hostRemove(targetStart);\n      hostRemove(targetAnchor);\n    }\n    doRemove && hostRemove(anchor);\n    if (shapeFlag & 16) {\n      const shouldRemove = doRemove || !isTeleportDisabled(props);\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        unmount(\n          child,\n          parentComponent,\n          parentSuspense,\n          shouldRemove,\n          !!child.dynamicChildren\n        );\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector, insert, createText }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetStart = targetNode;\n        vnode.targetAnchor = targetNode && nextSibling(targetNode);\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          if (targetAnchor && targetAnchor.nodeType === 8) {\n            if (targetAnchor.data === \"teleport start anchor\") {\n              vnode.targetStart = targetAnchor;\n            } else if (targetAnchor.data === \"teleport anchor\") {\n              vnode.targetAnchor = targetAnchor;\n              target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n              break;\n            }\n          }\n          targetAnchor = nextSibling(targetAnchor);\n        }\n        if (!vnode.targetAnchor) {\n          prepareAnchor(target, vnode, createText, insert);\n        }\n        hydrateChildren(\n          targetNode && nextSibling(targetNode),\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.targetStart;\n    while (node && node !== vnode.targetAnchor) {\n      if (node.nodeType === 1) node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\nfunction prepareAnchor(target, vnode, createText, insert) {\n  const targetStart = vnode.targetStart = createText(\"\");\n  const targetAnchor = vnode.targetAnchor = createText(\"\");\n  targetStart[TeleportEndKey] = targetAnchor;\n  if (target) {\n    insert(targetStart, target);\n    insert(targetAnchor, target);\n  }\n  return targetAnchor;\n}\n\nconst leaveCbKey = Symbol(\"_leaveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst recursiveGetSubtree = (instance) => {\n  const subTree = instance.subTree;\n  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      const child = findNonCommentChild(children);\n      const rawProps = reactivity.toRaw(props);\n      const { mode } = rawProps;\n      if (mode && mode !== \"in-out\" && mode !== \"out-in\" && mode !== \"default\") {\n        warn$1(`invalid <transition> mode: ${mode}`);\n      }\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getInnerChild$1(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      let enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance,\n        // #11061, ensure enterHooks is fresh after clone\n        (hooks) => enterHooks = hooks\n      );\n      if (innerChild.type !== Comment) {\n        setTransitionHooks(innerChild, enterHooks);\n      }\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getInnerChild$1(oldChild);\n      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(innerChild, oldInnerChild) && recursiveGetSubtree(instance).type !== Comment) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\" && innerChild.type !== Comment) {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (!(instance.job.flags & 8)) {\n              instance.update();\n            }\n            delete leavingHooks.afterLeave;\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el[leaveCbKey] = () => {\n              earlyRemove();\n              el[leaveCbKey] = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nfunction findNonCommentChild(children) {\n  let child = children[0];\n  if (children.length > 1) {\n    let hasFound = false;\n    for (const c of children) {\n      if (c.type !== Comment) {\n        if (hasFound) {\n          warn$1(\n            \"<transition> can only be used on a single element or component. Use <transition-group> for lists.\"\n          );\n          break;\n        }\n        child = c;\n        hasFound = true;\n      }\n    }\n  }\n  return child;\n}\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance, postClone) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (shared.isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1)) done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {\n        leavingVNode.el[leaveCbKey]();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el[enterCbKey] = (cancelled) => {\n        if (called) return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el[enterCbKey] = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el[enterCbKey]) {\n        el[enterCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el[leaveCbKey] = (cancelled) => {\n        if (called) return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el[leaveCbKey] = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      const hooks2 = resolveTransitionHooks(\n        vnode2,\n        props,\n        state,\n        instance,\n        postClone\n      );\n      if (postClone) postClone(hooks2);\n      return hooks2;\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getInnerChild$1(vnode) {\n  if (!isKeepAlive(vnode)) {\n    if (isTeleport(vnode.type) && vnode.children) {\n      return findNonCommentChild(vnode.children);\n    }\n    return vnode;\n  }\n  if (vnode.component) {\n    return vnode.component.subTree;\n  }\n  const { shapeFlag, children } = vnode;\n  if (children) {\n    if (shapeFlag & 16) {\n      return children[0];\n    }\n    if (shapeFlag & 32 && shared.isFunction(children.default)) {\n      return children.default();\n    }\n  }\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    vnode.transition = hooks;\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128) keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineComponent(options, extraOptions) {\n  return shared.isFunction(options) ? (\n    // #8236: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => shared.extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nfunction useId() {\n  const i = getCurrentInstance();\n  if (i) {\n    return (i.appContext.config.idPrefix || \"v\") + \"-\" + i.ids[0] + i.ids[1]++;\n  } else {\n    warn$1(\n      `useId() is called when there is no active component instance to be associated with.`\n    );\n  }\n}\nfunction markAsyncBoundary(instance) {\n  instance.ids = [instance.ids[0] + instance.ids[2]++ + \"-\", 0, 0];\n}\n\nconst knownTemplateRefs = /* @__PURE__ */ new WeakSet();\nfunction useTemplateRef(key) {\n  const i = getCurrentInstance();\n  const r = reactivity.shallowRef(null);\n  if (i) {\n    const refs = i.refs === shared.EMPTY_OBJ ? i.refs = {} : i.refs;\n    let desc;\n    if ((desc = Object.getOwnPropertyDescriptor(refs, key)) && !desc.configurable) {\n      warn$1(`useTemplateRef('${key}') already exists.`);\n    } else {\n      Object.defineProperty(refs, key, {\n        enumerable: true,\n        get: () => r.value,\n        set: (val) => r.value = val\n      });\n    }\n  } else {\n    warn$1(\n      `useTemplateRef() is called when there is no active component instance to be associated with.`\n    );\n  }\n  const ret = reactivity.readonly(r) ;\n  {\n    knownTemplateRefs.add(ret);\n  }\n  return ret;\n}\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (shared.isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  if (!owner) {\n    warn$1(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`\n    );\n    return;\n  }\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === shared.EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  const rawSetupState = reactivity.toRaw(setupState);\n  const canSetSetupRef = setupState === shared.EMPTY_OBJ ? () => false : (key) => {\n    if (knownTemplateRefs.has(rawSetupState[key])) {\n      return false;\n    }\n    return shared.hasOwn(rawSetupState, key);\n  };\n  if (oldRef != null && oldRef !== ref) {\n    if (shared.isString(oldRef)) {\n      refs[oldRef] = null;\n      if (canSetSetupRef(oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (reactivity.isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (shared.isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = shared.isString(ref);\n    const _isRef = reactivity.isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? canSetSetupRef(ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            shared.isArray(existing) && shared.remove(existing, refValue);\n          } else {\n            if (!shared.isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (canSetSetupRef(ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k) refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (canSetSetupRef(ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k) refs[rawRef.k] = value;\n        } else {\n          warn$1(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n        }\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else {\n      warn$1(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasLoggedMismatchError = false;\nconst logMismatchError = () => {\n  if (hasLoggedMismatchError) {\n    return;\n  }\n  console.error(\"Hydration completed but contains mismatches.\");\n  hasLoggedMismatchError = true;\n};\nconst isSVGContainer = (container) => container.namespaceURI.includes(\"svg\") && container.tagName !== \"foreignObject\";\nconst isMathMLContainer = (container) => container.namespaceURI.includes(\"MathML\");\nconst getContainerType = (container) => {\n  if (container.nodeType !== 1) return void 0;\n  if (isSVGContainer(container)) return \"svg\";\n  if (isMathMLContainer(container)) return \"mathml\";\n  return void 0;\n};\nconst isComment = (node) => node.nodeType === 8;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      warn$1(\n        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`\n      );\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    {\n      shared.def(node, \"__vnode\", vnode, true);\n      shared.def(node, \"__vueParentComponent\", parentComponent, true);\n    }\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            warn$1(\n              `Hydration text mismatch in`,\n              node.parentNode,\n              `\n  - rendered on server: ${JSON.stringify(\n                node.data\n              )}\n  - expected on client: ${JSON.stringify(vnode.children)}`\n            );\n            logMismatchError();\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (isTemplateNode(node)) {\n          nextNode = nextSibling(node);\n          replaceNode(\n            vnode.el = node.content.firstChild,\n            node,\n            parentComponent\n          );\n        } else if (domType !== 8 || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 || domType === 3) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if ((domType !== 1 || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          if (isFragmentStart) {\n            nextNode = locateClosingAnchor(node);\n          } else if (isComment(node) && node.data === \"teleport start\") {\n            nextNode = locateClosingAnchor(node, node.data, \"teleport end\");\n          } else {\n            nextNode = nextSibling(node);\n          }\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            getContainerType(container),\n            optimized\n          );\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            getContainerType(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else {\n          warn$1(\"Invalid HostVNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;\n    const forcePatch = type === \"input\" || type === \"option\";\n    {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      let needCallTransitionHooks = false;\n      if (isTemplateNode(el)) {\n        needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;\n        const content = el.content.firstChild;\n        if (needCallTransitionHooks) {\n          transition.beforeEnter(content);\n        }\n        replaceNode(content, el, parentComponent);\n        vnode.el = el = content;\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        let hasWarned = false;\n        while (next) {\n          if (!isMismatchAllowed(el, 1 /* CHILDREN */)) {\n            if (!hasWarned) {\n              warn$1(\n                `Hydration children mismatch on`,\n                el,\n                `\nServer rendered element contains more child nodes than client vdom.`\n              );\n              hasWarned = true;\n            }\n            logMismatchError();\n          }\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          if (!isMismatchAllowed(el, 0 /* TEXT */)) {\n            warn$1(\n              `Hydration text content mismatch on`,\n              el,\n              `\n  - rendered on server: ${el.textContent}\n  - expected on client: ${vnode.children}`\n            );\n            logMismatchError();\n          }\n          el.textContent = vnode.children;\n        }\n      }\n      if (props) {\n        {\n          const isCustomElement = el.tagName.includes(\"-\");\n          for (const key in props) {\n            if (// #11189 skip if this node has directives that have created hooks\n            // as it could have mutated the DOM in any possible way\n            !(dirs && dirs.some((d) => d.dir.created)) && propHasMismatch(el, key, props[key], vnode, parentComponent)) {\n              logMismatchError();\n            }\n            if (forcePatch && (key.endsWith(\"value\") || key === \"indeterminate\") || shared.isOn(key) && !shared.isReservedProp(key) || // force hydrate v-bind with .prop modifiers\n            key[0] === \".\" || isCustomElement) {\n              patchProp(el, key, null, props[key], void 0, parentComponent);\n            }\n          }\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          needCallTransitionHooks && transition.enter(el);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      const isText = vnode.type === Text;\n      if (node) {\n        if (isText && !optimized) {\n          if (i + 1 < l && normalizeVNode(children[i + 1]).type === Text) {\n            insert(\n              createText(\n                node.data.slice(vnode.children.length)\n              ),\n              container,\n              nextSibling(node)\n            );\n            node.data = vnode.children;\n          }\n        }\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (isText && !vnode.children) {\n        insert(vnode.el = createText(\"\"), container);\n      } else {\n        if (!isMismatchAllowed(container, 1 /* CHILDREN */)) {\n          if (!hasWarned) {\n            warn$1(\n              `Hydration children mismatch on`,\n              container,\n              `\nServer rendered element contains fewer child nodes than client vdom.`\n            );\n            hasWarned = true;\n          }\n          logMismatchError();\n        }\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          getContainerType(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      logMismatchError();\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    if (!isMismatchAllowed(node.parentElement, 1 /* CHILDREN */)) {\n      warn$1(\n        `Hydration node mismatch:\n- rendered on server:`,\n        node,\n        node.nodeType === 3 ? `(text)` : isComment(node) && node.data === \"[\" ? `(start of fragment)` : ``,\n        `\n- expected on client:`,\n        vnode.type\n      );\n      logMismatchError();\n    }\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      getContainerType(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAnchor = (node, open = \"[\", close = \"]\") => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === open) match++;\n        if (node.data === close) {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  const replaceNode = (newNode, oldNode, parentComponent) => {\n    const parentNode2 = oldNode.parentNode;\n    if (parentNode2) {\n      parentNode2.replaceChild(newNode, oldNode);\n    }\n    let parent = parentComponent;\n    while (parent) {\n      if (parent.vnode.el === oldNode) {\n        parent.vnode.el = parent.subTree.el = newNode;\n      }\n      parent = parent.parent;\n    }\n  };\n  const isTemplateNode = (node) => {\n    return node.nodeType === 1 && node.tagName.toLowerCase() === \"template\";\n  };\n  return [hydrate, hydrateNode];\n}\nfunction propHasMismatch(el, key, clientValue, vnode, instance) {\n  let mismatchType;\n  let mismatchKey;\n  let actual;\n  let expected;\n  if (key === \"class\") {\n    actual = el.getAttribute(\"class\");\n    expected = shared.normalizeClass(clientValue);\n    if (!isSetEqual(toClassSet(actual || \"\"), toClassSet(expected))) {\n      mismatchType = 2 /* CLASS */;\n      mismatchKey = `class`;\n    }\n  } else if (key === \"style\") {\n    actual = el.getAttribute(\"style\") || \"\";\n    expected = shared.isString(clientValue) ? clientValue : shared.stringifyStyle(shared.normalizeStyle(clientValue));\n    const actualMap = toStyleMap(actual);\n    const expectedMap = toStyleMap(expected);\n    if (vnode.dirs) {\n      for (const { dir, value } of vnode.dirs) {\n        if (dir.name === \"show\" && !value) {\n          expectedMap.set(\"display\", \"none\");\n        }\n      }\n    }\n    if (instance) {\n      resolveCssVars(instance, vnode, expectedMap);\n    }\n    if (!isMapEqual(actualMap, expectedMap)) {\n      mismatchType = 3 /* STYLE */;\n      mismatchKey = \"style\";\n    }\n  } else if (el instanceof SVGElement && shared.isKnownSvgAttr(key) || el instanceof HTMLElement && (shared.isBooleanAttr(key) || shared.isKnownHtmlAttr(key))) {\n    if (shared.isBooleanAttr(key)) {\n      actual = el.hasAttribute(key);\n      expected = shared.includeBooleanAttr(clientValue);\n    } else if (clientValue == null) {\n      actual = el.hasAttribute(key);\n      expected = false;\n    } else {\n      if (el.hasAttribute(key)) {\n        actual = el.getAttribute(key);\n      } else if (key === \"value\" && el.tagName === \"TEXTAREA\") {\n        actual = el.value;\n      } else {\n        actual = false;\n      }\n      expected = shared.isRenderableAttrValue(clientValue) ? String(clientValue) : false;\n    }\n    if (actual !== expected) {\n      mismatchType = 4 /* ATTRIBUTE */;\n      mismatchKey = key;\n    }\n  }\n  if (mismatchType != null && !isMismatchAllowed(el, mismatchType)) {\n    const format = (v) => v === false ? `(not rendered)` : `${mismatchKey}=\"${v}\"`;\n    const preSegment = `Hydration ${MismatchTypeString[mismatchType]} mismatch on`;\n    const postSegment = `\n  - rendered on server: ${format(actual)}\n  - expected on client: ${format(expected)}\n  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.\n  You should fix the source of the mismatch.`;\n    {\n      warn$1(preSegment, el, postSegment);\n    }\n    return true;\n  }\n  return false;\n}\nfunction toClassSet(str) {\n  return new Set(str.trim().split(/\\s+/));\n}\nfunction isSetEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const s of a) {\n    if (!b.has(s)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toStyleMap(str) {\n  const styleMap = /* @__PURE__ */ new Map();\n  for (const item of str.split(\";\")) {\n    let [key, value] = item.split(\":\");\n    key = key.trim();\n    value = value && value.trim();\n    if (key && value) {\n      styleMap.set(key, value);\n    }\n  }\n  return styleMap;\n}\nfunction isMapEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const [key, value] of a) {\n    if (value !== b.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction resolveCssVars(instance, vnode, expectedMap) {\n  const root = instance.subTree;\n  if (instance.getCssVars && (vnode === root || root && root.type === Fragment && root.children.includes(vnode))) {\n    const cssVars = instance.getCssVars();\n    for (const key in cssVars) {\n      expectedMap.set(\n        `--${shared.getEscapedCssVarName(key, false)}`,\n        String(cssVars[key])\n      );\n    }\n  }\n  if (vnode === root && instance.parent) {\n    resolveCssVars(instance.parent, instance.vnode, expectedMap);\n  }\n}\nconst allowMismatchAttr = \"data-allow-mismatch\";\nconst MismatchTypeString = {\n  [0 /* TEXT */]: \"text\",\n  [1 /* CHILDREN */]: \"children\",\n  [2 /* CLASS */]: \"class\",\n  [3 /* STYLE */]: \"style\",\n  [4 /* ATTRIBUTE */]: \"attribute\"\n};\nfunction isMismatchAllowed(el, allowedType) {\n  if (allowedType === 0 /* TEXT */ || allowedType === 1 /* CHILDREN */) {\n    while (el && !el.hasAttribute(allowMismatchAttr)) {\n      el = el.parentElement;\n    }\n  }\n  const allowedAttr = el && el.getAttribute(allowMismatchAttr);\n  if (allowedAttr == null) {\n    return false;\n  } else if (allowedAttr === \"\") {\n    return true;\n  } else {\n    const list = allowedAttr.split(\",\");\n    if (allowedType === 0 /* TEXT */ && list.includes(\"children\")) {\n      return true;\n    }\n    return allowedAttr.split(\",\").includes(MismatchTypeString[allowedType]);\n  }\n}\n\nconst hydrateOnIdle = (timeout = 1e4) => (hydrate) => {\n  const id = requestIdleCallback(hydrate, { timeout });\n  return () => cancelIdleCallback(id);\n};\nconst hydrateOnVisible = (opts) => (hydrate, forEach) => {\n  const ob = new IntersectionObserver((entries) => {\n    for (const e of entries) {\n      if (!e.isIntersecting) continue;\n      ob.disconnect();\n      hydrate();\n      break;\n    }\n  }, opts);\n  forEach((el) => ob.observe(el));\n  return () => ob.disconnect();\n};\nconst hydrateOnMediaQuery = (query) => (hydrate) => {\n  if (query) {\n    const mql = matchMedia(query);\n    if (mql.matches) {\n      hydrate();\n    } else {\n      mql.addEventListener(\"change\", hydrate, { once: true });\n      return () => mql.removeEventListener(\"change\", hydrate);\n    }\n  }\n};\nconst hydrateOnInteraction = (interactions = []) => (hydrate, forEach) => {\n  if (shared.isString(interactions)) interactions = [interactions];\n  let hasHydrated = false;\n  const doHydrate = (e) => {\n    if (!hasHydrated) {\n      hasHydrated = true;\n      teardown();\n      hydrate();\n      e.target.dispatchEvent(new e.constructor(e.type, e));\n    }\n  };\n  const teardown = () => {\n    forEach((el) => {\n      for (const i of interactions) {\n        el.removeEventListener(i, doHydrate);\n      }\n    });\n  };\n  forEach((el) => {\n    for (const i of interactions) {\n      el.addEventListener(i, doHydrate, { once: true });\n    }\n  });\n  return teardown;\n};\nfunction forEachElement(node, cb) {\n  if (isComment(node) && node.data === \"[\") {\n    let depth = 1;\n    let next = node.nextSibling;\n    while (next) {\n      if (next.nodeType === 1) {\n        cb(next);\n      } else if (isComment(next)) {\n        if (next.data === \"]\") {\n          if (--depth === 0) break;\n        } else if (next.data === \"[\") {\n          depth++;\n        }\n      }\n      next = next.nextSibling;\n    }\n  } else {\n    cb(node);\n  }\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineAsyncComponent(source) {\n  if (shared.isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    hydrate: hydrateStrategy,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (!comp) {\n        warn$1(\n          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`\n        );\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      if (comp && !shared.isObject(comp) && !shared.isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    __asyncHydrate(el, instance, hydrate) {\n      const doHydrate = hydrateStrategy ? () => {\n        const teardown = hydrateStrategy(\n          hydrate,\n          (cb) => forEachElement(el, cb)\n        );\n        if (teardown) {\n          (instance.bum || (instance.bum = [])).push(teardown);\n        }\n      } : hydrate;\n      if (resolvedComp) {\n        doHydrate();\n      } else {\n        load().then(() => !instance.isUnmounted && doHydrate());\n      }\n    },\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      markAsyncBoundary(instance);\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = reactivity.ref(false);\n      const error = reactivity.ref();\n      const delayed = reactivity.ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, namespace, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        namespace,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          shared.invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n      {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      invalidateMount(instance2.m);\n      invalidateMount(instance2.a);\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          shared.invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n      {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && !filter(name)) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (cached && (!current || !isSameVNodeType(cached, current))) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        if (isSuspense(instance.subTree.type)) {\n          queuePostRenderEffect(() => {\n            cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n          }, instance.subTree.suspense);\n        } else {\n          cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n        }\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return current = null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        {\n          warn$1(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      if (vnode.type === Comment) {\n        current = null;\n        return vnode;\n      }\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        vnode.shapeFlag &= ~256;\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (shared.isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (shared.isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (shared.isRegExp(pattern)) {\n    pattern.lastIndex = 0;\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    shared.remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      reactivity.pauseTracking();\n      const reset = setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      reset();\n      reactivity.resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  } else {\n    const apiName = shared.toHandlerKey(ErrorTypeStrings$1[type].replace(/ hook$/, \"\"));\n    warn$1(\n      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.` )\n    );\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => {\n  if (!isInSSRComponentSetup || lifecycle === \"sp\") {\n    injectHook(lifecycle, (...args) => hook(...args), target);\n  }\n};\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\n  \"bu\"\n);\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\n  \"bum\"\n);\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\n  \"sp\"\n);\nconst onRenderTriggered = createHook(\"rtg\");\nconst onRenderTracked = createHook(\"rtc\");\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (shared.isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n      );\n      if (selfName && (selfName === name || selfName === shared.camelize(name) || selfName === shared.capitalize(shared.camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    if (warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;\n      warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n    return res;\n  } else {\n    warn$1(\n      `resolve${shared.capitalize(type.slice(0, -1))} can only be used in render() or setup().`\n    );\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[shared.camelize(name)] || registry[shared.capitalize(shared.camelize(name))]);\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  const sourceIsArray = shared.isArray(source);\n  if (sourceIsArray || shared.isString(source)) {\n    const sourceIsReactiveArray = sourceIsArray && reactivity.isReactive(source);\n    if (sourceIsReactiveArray) {\n      source = reactivity.shallowReadArray(source);\n    }\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(\n        sourceIsReactiveArray ? reactivity.toReactive(source[i]) : source[i],\n        i,\n        void 0,\n        cached && cached[i]\n      );\n    }\n  } else if (typeof source === \"number\") {\n    if (!Number.isInteger(source)) {\n      warn$1(`The v-for range expect an integer value but got ${source}.`);\n    }\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (shared.isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (shared.isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res) res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.ce || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.ce) {\n    if (name !== \"default\") props.name = name;\n    return openBlock(), createBlock(\n      Fragment,\n      null,\n      [createVNode(\"slot\", props, fallback && fallback())],\n      64\n    );\n  }\n  let slot = slots[name];\n  if (slot && slot.length > 1) {\n    warn$1(\n      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`\n    );\n    slot = () => [];\n  }\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: (props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`) + // #7256 force differentiate fallback content from actual content\n      (!validSlotContent && fallback ? \"_fb\" : \"\")\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child)) return true;\n    if (child.type === Comment) return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  if (!shared.isObject(obj)) {\n    warn$1(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : shared.toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i) return null;\n  if (isStatefulComponent(i)) return getComponentPublicInstance(i);\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ shared.extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => reactivity.shallowReadonly(i.props) ,\n    $attrs: (i) => reactivity.shallowReadonly(i.attrs) ,\n    $slots: (i) => reactivity.shallowReadonly(i.slots) ,\n    $refs: (i) => reactivity.shallowReadonly(i.refs) ,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $host: (i) => i.ce,\n    $emit: (i) => i.emit,\n    $options: (i) => resolveMergedOptions(i) ,\n    $forceUpdate: (i) => i.f || (i.f = () => {\n      queueJob(i.update);\n    }),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => instanceWatch.bind(i) \n  })\n);\nconst isReservedPrefix = (key) => key === \"_\" || key === \"$\";\nconst hasSetupBinding = (state, key) => state !== shared.EMPTY_OBJ && !state.__isScriptSetup && shared.hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    if (key === \"__v_skip\") {\n      return true;\n    }\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    if (key === \"__isVue\") {\n      return true;\n    }\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && shared.hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        reactivity.track(instance.attrs, \"get\", \"\");\n        markAttrsAccessed();\n      } else if (key === \"$slots\") {\n        reactivity.track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, shared.hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else if (currentRenderingInstance && (!shared.isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf(\"__v\") !== 0)) {\n      if (data !== shared.EMPTY_OBJ && isReservedPrefix(key[0]) && shared.hasOwn(data, key)) {\n        warn$1(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved character (\"$\" or \"_\") and is not proxied on the render context.`\n        );\n      } else if (instance === currentRenderingInstance) {\n        warn$1(\n          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`\n        );\n      }\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (setupState.__isScriptSetup && shared.hasOwn(setupState, key)) {\n      warn$1(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n      return false;\n    } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (shared.hasOwn(instance.props, key)) {\n      warn$1(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      warn$1(\n        `Attempting to mutate public property \"${key}\". Properties starting with $ are reserved and readonly.`\n      );\n      return false;\n    } else {\n      if (key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== shared.EMPTY_OBJ && shared.hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key) || shared.hasOwn(ctx, key) || shared.hasOwn(publicPropertiesMap, key) || shared.hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (shared.hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\n{\n  PublicInstanceProxyHandlers.ownKeys = (target) => {\n    warn$1(\n      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`\n    );\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ shared.extend({}, PublicInstanceProxyHandlers, {\n  get(target, key) {\n    if (key === Symbol.unscopables) {\n      return;\n    }\n    return PublicInstanceProxyHandlers.get(target, key, target);\n  },\n  has(_, key) {\n    const has = key[0] !== \"_\" && !shared.isGloballyAllowed(key);\n    if (!has && PublicInstanceProxyHandlers.has(_, key)) {\n      warn$1(\n        `Property ${JSON.stringify(\n          key\n        )} should not start with _ which is a reserved prefix for Vue internals.`\n      );\n    }\n    return has;\n  }\n});\nfunction createDevRenderContext(instance) {\n  const target = {};\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  });\n  Object.keys(publicPropertiesMap).forEach((key) => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: shared.NOOP\n    });\n  });\n  return target;\n}\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach((key) => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: shared.NOOP\n      });\n    });\n  }\n}\nfunction exposeSetupStateOnRenderContext(instance) {\n  const { ctx, setupState } = instance;\n  Object.keys(reactivity.toRaw(setupState)).forEach((key) => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn$1(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" which are reserved prefixes for Vue internals.`\n        );\n        return;\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: shared.NOOP\n      });\n    }\n  });\n}\n\nconst warnRuntimeUsage = (method) => warn$1(\n  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`\n);\nfunction defineProps() {\n  {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n}\nfunction defineEmits() {\n  {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\nfunction defineExpose(exposed) {\n  {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\nfunction defineOptions(options) {\n  {\n    warnRuntimeUsage(`defineOptions`);\n  }\n}\nfunction defineSlots() {\n  {\n    warnRuntimeUsage(`defineSlots`);\n  }\n  return null;\n}\nfunction defineModel() {\n  {\n    warnRuntimeUsage(\"defineModel\");\n  }\n}\nfunction withDefaults(props, defaults) {\n  {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  if (!i) {\n    warn$1(`useContext() called without active instance.`);\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return shared.isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\")) continue;\n    let opt = props[key];\n    if (opt) {\n      if (shared.isArray(opt) || shared.isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else {\n      warn$1(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b) return a || b;\n  if (shared.isArray(a) && shared.isArray(b)) return a.concat(b);\n  return shared.extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  if (!ctx) {\n    warn$1(\n      `withAsyncContext called without active current instance. This is likely a bug.`\n    );\n  }\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (shared.isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nfunction createDuplicateChecker() {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn$1(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = createDuplicateChecker() ;\n  {\n    const [propsOptions] = instance.propsOptions;\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\" /* PROPS */, key);\n      }\n    }\n  }\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (shared.isFunction(methodHandler)) {\n        {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        }\n        {\n          checkDuplicateProperties(\"Methods\" /* METHODS */, key);\n        }\n      } else {\n        warn$1(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. Did you reference the function correctly?`\n        );\n      }\n    }\n  }\n  if (dataOptions) {\n    if (!shared.isFunction(dataOptions)) {\n      warn$1(\n        `The data option must be a function. Plain object usage is no longer supported.`\n      );\n    }\n    const data = dataOptions.call(publicThis, publicThis);\n    if (shared.isPromise(data)) {\n      warn$1(\n        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`\n      );\n    }\n    if (!shared.isObject(data)) {\n      warn$1(`data() should return an object.`);\n    } else {\n      instance.data = reactivity.reactive(data);\n      {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\" /* DATA */, key);\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: shared.NOOP\n            });\n          }\n        }\n      }\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = shared.isFunction(opt) ? opt.bind(publicThis, publicThis) : shared.isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : shared.NOOP;\n      if (get === shared.NOOP) {\n        warn$1(`Computed property \"${key}\" has no getter.`);\n      }\n      const set = !shared.isFunction(opt) && shared.isFunction(opt.set) ? opt.set.bind(publicThis) : () => {\n        warn$1(\n          `Write operation failed: computed property \"${key}\" is readonly.`\n        );\n      } ;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n      {\n        checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = shared.isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (shared.isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (shared.isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === shared.NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components) instance.components = components;\n  if (directives) instance.directives = directives;\n  if (serverPrefetch) {\n    markAsyncBoundary(instance);\n  }\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP) {\n  if (shared.isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (shared.isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (reactivity.isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n    {\n      checkDuplicateProperties(\"Inject\" /* INJECT */, key);\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    shared.isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  let getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (shared.isString(raw)) {\n    const handler = ctx[raw];\n    if (shared.isFunction(handler)) {\n      {\n        watch(getter, handler);\n      }\n    } else {\n      warn$1(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (shared.isFunction(raw)) {\n    {\n      watch(getter, raw.bind(publicThis));\n    }\n  } else if (shared.isObject(raw)) {\n    if (shared.isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = shared.isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (shared.isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else {\n        warn$1(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else {\n    warn$1(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (shared.isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") {\n      warn$1(\n        `\"expose\" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`\n      );\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (shared.extend)(\n      shared.isFunction(to) ? to.call(this, this) : to,\n      shared.isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (shared.isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? shared.extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (shared.isArray(to) && shared.isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return shared.extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to) return from;\n  if (!from) return to;\n  const merged = shared.extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: shared.NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!shared.isFunction(rootComponent)) {\n      rootComponent = shared.extend({}, rootComponent);\n    }\n    if (rootProps != null && !shared.isObject(rootProps)) {\n      warn$1(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n    const context = createAppContext();\n    const installedPlugins = /* @__PURE__ */ new WeakSet();\n    const pluginCleanupFns = [];\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n        {\n          warn$1(\n            `app.config cannot be replaced. Modify individual options instead.`\n          );\n        }\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          warn$1(`Plugin has already been applied to target app.`);\n        } else if (plugin && shared.isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (shared.isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else {\n          warn$1(\n            `A plugin must either be a function or an object with an \"install\" function.`\n          );\n        }\n        return app;\n      },\n      mixin(mixin) {\n        {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else {\n            warn$1(\n              \"Mixin has already been applied to target app\" + (mixin.name ? `: ${mixin.name}` : \"\")\n            );\n          }\n        }\n        return app;\n      },\n      component(name, component) {\n        {\n          validateComponentName(name, context.config);\n        }\n        if (!component) {\n          return context.components[name];\n        }\n        if (context.components[name]) {\n          warn$1(`Component \"${name}\" has already been registered in target app.`);\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        {\n          validateDirectiveName(name);\n        }\n        if (!directive) {\n          return context.directives[name];\n        }\n        if (context.directives[name]) {\n          warn$1(`Directive \"${name}\" has already been registered in target app.`);\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, namespace) {\n        if (!isMounted) {\n          if (rootContainer.__vue_app__) {\n            warn$1(\n              `There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            );\n          }\n          const vnode = app._ceVNode || createVNode(rootComponent, rootProps);\n          vnode.appContext = context;\n          if (namespace === true) {\n            namespace = \"svg\";\n          } else if (namespace === false) {\n            namespace = void 0;\n          }\n          {\n            context.reload = () => {\n              render(\n                cloneVNode(vnode),\n                rootContainer,\n                namespace\n              );\n            };\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, namespace);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getComponentPublicInstance(vnode.component);\n        } else {\n          warn$1(\n            `App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          );\n        }\n      },\n      onUnmount(cleanupFn) {\n        if (typeof cleanupFn !== \"function\") {\n          warn$1(\n            `Expected function as first argument to app.onUnmount(), but got ${typeof cleanupFn}`\n          );\n        }\n        pluginCleanupFns.push(cleanupFn);\n      },\n      unmount() {\n        if (isMounted) {\n          callWithAsyncErrorHandling(\n            pluginCleanupFns,\n            app._instance,\n            16\n          );\n          render(null, app._container);\n          {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else {\n          warn$1(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n      provide(key, value) {\n        if (key in context.provides) {\n          warn$1(\n            `App already provides property with key \"${String(key)}\". It will be overwritten with the new value.`\n          );\n        }\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        const lastApp = currentApp;\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = lastApp;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    {\n      warn$1(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = currentApp ? currentApp._context.provides : instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : void 0;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && shared.isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else {\n      warn$1(`injection \"${String(key)}\" not found.`);\n    }\n  } else {\n    warn$1(`inject() can only be used inside setup() or functional components.`);\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nconst internalObjectProto = {};\nconst createInternalObject = () => Object.create(internalObjectProto);\nconst isInternalObject = (obj) => Object.getPrototypeOf(obj) === internalObjectProto;\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = createInternalObject();\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  {\n    validateProps(rawProps || {}, props, instance);\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : reactivity.shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n  while (instance) {\n    if (instance.type.__hmrId) return true;\n    instance = instance.parent;\n  }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = reactivity.toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !isInHmrContext(instance) && (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (shared.hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = shared.camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !shared.hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !shared.hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    reactivity.trigger(instance.attrs, \"set\", \"\");\n  }\n  {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (shared.isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && shared.hasOwn(options, camelKey = shared.camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = reactivity.toRaw(props);\n    const castValues = rawCastValues || shared.EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !shared.hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = shared.hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && shared.isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          const reset = setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          reset();\n        }\n      } else {\n        value = defaultValue;\n      }\n      if (instance.ce) {\n        instance.ce._setProp(key, value);\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === shared.hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nconst mixinPropsCache = /* @__PURE__ */ new WeakMap();\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = asMixin ? mixinPropsCache : appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (!shared.isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      shared.extend(normalized, props);\n      if (keys) needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (shared.isObject(comp)) {\n      cache.set(comp, shared.EMPTY_ARR);\n    }\n    return shared.EMPTY_ARR;\n  }\n  if (shared.isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!shared.isString(raw[i])) {\n        warn$1(`props must be strings when using array syntax.`, raw[i]);\n      }\n      const normalizedKey = shared.camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = shared.EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!shared.isObject(raw)) {\n      warn$1(`invalid props options`, raw);\n    }\n    for (const key in raw) {\n      const normalizedKey = shared.camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = shared.isArray(opt) || shared.isFunction(opt) ? { type: opt } : shared.extend({}, opt);\n        const propType = prop.type;\n        let shouldCast = false;\n        let shouldCastTrue = true;\n        if (shared.isArray(propType)) {\n          for (let index = 0; index < propType.length; ++index) {\n            const type = propType[index];\n            const typeName = shared.isFunction(type) && type.name;\n            if (typeName === \"Boolean\") {\n              shouldCast = true;\n              break;\n            } else if (typeName === \"String\") {\n              shouldCastTrue = false;\n            }\n          }\n        } else {\n          shouldCast = shared.isFunction(propType) && propType.name === \"Boolean\";\n        }\n        prop[0 /* shouldCast */] = shouldCast;\n        prop[1 /* shouldCastTrue */] = shouldCastTrue;\n        if (shouldCast || shared.hasOwn(prop, \"default\")) {\n          needCastKeys.push(normalizedKey);\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (shared.isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\" && !shared.isReservedProp(key)) {\n    return true;\n  } else {\n    warn$1(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n  return false;\n}\nfunction getType(ctor) {\n  if (ctor === null) {\n    return \"null\";\n  }\n  if (typeof ctor === \"function\") {\n    return ctor.name || \"\";\n  } else if (typeof ctor === \"object\") {\n    const name = ctor.constructor && ctor.constructor.name;\n    return name || \"\";\n  }\n  return \"\";\n}\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = reactivity.toRaw(props);\n  const options = instance.propsOptions[0];\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null) continue;\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      reactivity.shallowReadonly(resolvedValues) ,\n      !shared.hasOwn(rawProps, key) && !shared.hasOwn(rawProps, shared.hyphenate(key))\n    );\n  }\n}\nfunction validateProp(name, value, prop, props, isAbsent) {\n  const { type, required, validator, skipCheck } = prop;\n  if (required && isAbsent) {\n    warn$1('Missing required prop: \"' + name + '\"');\n    return;\n  }\n  if (value == null && !required) {\n    return;\n  }\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false;\n    const types = shared.isArray(type) ? type : [type];\n    const expectedTypes = [];\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || \"\");\n      isValid = valid;\n    }\n    if (!isValid) {\n      warn$1(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  }\n  if (validator && !validator(value, props)) {\n    warn$1('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\nconst isSimpleType = /* @__PURE__ */ shared.makeMap(\n  \"String,Number,Boolean,Function,Symbol,BigInt\"\n);\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n  if (expectedType === \"null\") {\n    valid = value === null;\n  } else if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    if (!valid && t === \"object\") {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === \"Object\") {\n    valid = shared.isObject(value);\n  } else if (expectedType === \"Array\") {\n    valid = shared.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid,\n    expectedType\n  };\n}\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  if (expectedTypes.length === 0) {\n    return `Prop type [] for prop \"${name}\" won't match anything. Did you mean to use type Array instead?`;\n  }\n  let message = `Invalid prop: type check failed for prop \"${name}\". Expected ${expectedTypes.map(shared.capitalize).join(\" | \")}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = shared.toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType);\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n  message += `, got ${receivedType} `;\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n  return message;\n}\nfunction styleValue(value, type) {\n  if (type === \"String\") {\n    return `\"${value}\"`;\n  } else if (type === \"Number\") {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\nfunction isExplicable(type) {\n  const explicitTypes = [\"string\", \"number\", \"boolean\"];\n  return explicitTypes.some((elem) => type.toLowerCase() === elem);\n}\nfunction isBoolean(...args) {\n  return args.some((elem) => elem.toLowerCase() === \"boolean\");\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => shared.isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (currentInstance && (!ctx || ctx.root === currentInstance.root)) {\n      warn$1(\n        `Slot \"${key}\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`\n      );\n    }\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue;\n    const value = rawSlots[key];\n    if (shared.isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      {\n        warn$1(\n          `Non-function value encountered for slot \"${key}\". Prefer function slots for better performance.`\n        );\n      }\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!isKeepAlive(instance.vnode) && true) {\n    warn$1(\n      `Non-function value encountered for default slot. Prefer function slots for better performance.`\n    );\n  }\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst assignSlots = (slots, children, optimized) => {\n  for (const key in children) {\n    if (optimized || key !== \"_\") {\n      slots[key] = children[key];\n    }\n  }\n};\nconst initSlots = (instance, children, optimized) => {\n  const slots = instance.slots = createInternalObject();\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      assignSlots(slots, children, optimized);\n      if (optimized) {\n        shared.def(slots, \"_\", type, true);\n      }\n    } else {\n      normalizeObjectSlots(children, slots);\n    }\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n  }\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = shared.EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (isHmrUpdating) {\n        assignSlots(slots, children, optimized);\n        reactivity.trigger(instance, \"set\", \"$slots\");\n      } else if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        assignSlots(slots, children, optimized);\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n  {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    );\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n  {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction isSupported() {\n  if (supported !== void 0) {\n    return supported;\n  }\n  if (typeof window !== \"undefined\" && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n  return supported;\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  const target = shared.getGlobalThis();\n  target.__VUE__ = true;\n  {\n    setDevtoolsHook$1(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = shared.NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, namespace);\n        } else {\n          patchStaticNode(n1, n2, container, namespace);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else {\n          warn$1(\"Invalid VNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, namespace) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      namespace,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const patchStaticNode = (n1, n2, container, namespace) => {\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor);\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(\n        n2.children,\n        container,\n        anchor,\n        namespace\n      );\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    if (n2.type === \"svg\") {\n      namespace = \"svg\";\n    } else if (n2.type === \"math\") {\n      namespace = \"mathml\";\n    }\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      namespace,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(vnode, namespace),\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !shared.isReservedProp(key)) {\n          hostPatchProp(el, key, null, props[key], namespace, parentComponent);\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value, namespace);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    {\n      shared.def(el, \"__vnode\", vnode, true);\n      shared.def(el, \"__vueParentComponent\", parentComponent, true);\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = needTransition(parentSuspense, transition);\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (subTree.patchFlag > 0 && subTree.patchFlag & 2048) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n      if (vnode === subTree || isSuspense(subTree.type) && (subTree.ssContent === vnode || subTree.ssFallback === vnode)) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    {\n      el.__vnode = n2;\n    }\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || shared.EMPTY_OBJ;\n    const newProps = n2.props || shared.EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (isHmrUpdating) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (oldProps.innerHTML && newProps.innerHTML == null || oldProps.textContent && newProps.textContent == null) {\n      hostSetElementText(el, \"\");\n    }\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds\n      );\n      {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(el, oldProps, newProps, parentComponent, namespace);\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, namespace);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, namespace);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(el, key, prev, next, namespace, parentComponent);\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(el, oldProps, newProps, parentComponent, namespace);\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, oldProps, newProps, parentComponent, namespace) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== shared.EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!shared.isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              namespace,\n              parentComponent\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (shared.isReservedProp(key)) continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(el, key, prev, next, namespace, parentComponent);\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value, namespace);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (\n      // #5523 dev root fragment may inherit directives\n      isHmrUpdating || patchFlag & 2048\n    ) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        // #10007\n        // such fragment like `<></>` will be compiled into\n        // a fragment which doesn't have a children.\n        // In this case fallback to an empty array\n        n2.children || [],\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        {\n          traverseStaticChildren(n1, n2);\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          namespace,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n    {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    }\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance, false, optimized);\n      {\n        endMeasure(instance, `init`);\n      }\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n    } else {\n      setupRenderEffect(\n        instance,\n        initialVNode,\n        container,\n        anchor,\n        parentSuspense,\n        namespace,\n        optimized\n      );\n    }\n    {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        {\n          popWarningContext();\n        }\n        return;\n      } else {\n        instance.next = n2;\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent, root, type } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          shared.invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            {\n              endMeasure(instance, `render`);\n            }\n            {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n            {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n          if (isAsyncWrapperVNode && type.__asyncHydrate) {\n            type.__asyncHydrate(\n              el,\n              instance,\n              hydrateSubTree\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (root.ce) {\n            root.ce._injectChildStyle(type);\n          }\n          {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          {\n            endMeasure(instance, `render`);\n          }\n          {\n            startMeasure(instance, `patch`);\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            namespace\n          );\n          {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        {\n          devtoolsComponentAdded(instance);\n        }\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        {\n          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);\n          if (nonHydratedAsyncRoot) {\n            if (next) {\n              next.el = vnode.el;\n              updateComponentPreRender(instance, next, optimized);\n            }\n            nonHydratedAsyncRoot.asyncDep.then(() => {\n              if (!instance.isUnmounted) {\n                componentUpdateFn();\n              }\n            });\n            return;\n          }\n        }\n        let originNext = next;\n        let vnodeHook;\n        {\n          pushWarningContext(next || instance.vnode);\n        }\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          shared.invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        {\n          startMeasure(instance, `patch`);\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          namespace\n        );\n        {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n        {\n          devtoolsComponentUpdated(instance);\n        }\n        {\n          popWarningContext();\n        }\n      }\n    };\n    instance.scope.on();\n    const effect = instance.effect = new reactivity.ReactiveEffect(componentUpdateFn);\n    instance.scope.off();\n    const update = instance.update = effect.run.bind(effect);\n    const job = instance.job = effect.runIfDirty.bind(effect);\n    job.i = instance;\n    job.id = instance.uid;\n    effect.scheduler = () => queueJob(job);\n    toggleRecurse(instance, true);\n    {\n      effect.onTrack = instance.rtc ? (e) => shared.invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? (e) => shared.invokeArrayFns(instance.rtg, e) : void 0;\n    }\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    reactivity.pauseTracking();\n    flushPreFlushCbs(instance);\n    reactivity.resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    c1 = c1 || shared.EMPTY_ARR;\n    c2 = c2 || shared.EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          if (keyToNewIndexMap.has(nextChild.key)) {\n            warn$1(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            );\n          }\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : shared.EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition2) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs,\n      cacheIndex\n    } = vnode;\n    if (patchFlag === -2) {\n      optimized = false;\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (cacheIndex != null) {\n      parentComponent.renderCache[cacheIndex] = void 0;\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #5154\n      // when v-once is used inside a block, setBlockTracking(-1) marks the\n      // parent block with hasOnce: true\n      // so that it doesn't take the fast path during unmount - otherwise\n      // components nested in v-once are never unmounted.\n      !dynamicChildren.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      if (vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {\n        vnode.children.forEach((child) => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n    const { bum, scope, job, subTree, um, m, a } = instance;\n    invalidateMount(m);\n    invalidateMount(a);\n    if (bum) {\n      shared.invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (job) {\n      job.flags |= 8;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n    {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    const el = hostNextSibling(vnode.anchor || vnode.el);\n    const teleportEnd = el && el[TeleportEndKey];\n    return teleportEnd ? hostNextSibling(teleportEnd) : el;\n  };\n  let isFlushing = false;\n  const render = (vnode, container, namespace) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(\n        container._vnode || null,\n        vnode,\n        container,\n        null,\n        null,\n        null,\n        namespace\n      );\n    }\n    container._vnode = vnode;\n    if (!isFlushing) {\n      isFlushing = true;\n      flushPreFlushCbs();\n      flushPostFlushCbs();\n      isFlushing = false;\n    }\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction resolveChildrenNamespace({ type, props }, currentNamespace) {\n  return currentNamespace === \"svg\" && type === \"foreignObject\" || currentNamespace === \"mathml\" && type === \"annotation-xml\" && props && props.encoding && props.encoding.includes(\"html\") ? void 0 : currentNamespace;\n}\nfunction toggleRecurse({ effect, job }, allowed) {\n  if (allowed) {\n    effect.flags |= 32;\n    job.flags |= 4;\n  } else {\n    effect.flags &= ~32;\n    job.flags &= ~4;\n  }\n}\nfunction needTransition(parentSuspense, transition) {\n  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (shared.isArray(ch1) && shared.isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow && c2.patchFlag !== -2)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n      if (c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\nfunction locateNonHydratedAsyncRoot(instance) {\n  const subComponent = instance.subTree.component;\n  if (subComponent) {\n    if (subComponent.asyncDep && !subComponent.asyncResolved) {\n      return subComponent;\n    } else {\n      return locateNonHydratedAsyncRoot(subComponent);\n    }\n  }\n}\nfunction invalidateMount(hooks) {\n  if (hooks) {\n    for (let i = 0; i < hooks.length; i++)\n      hooks[i].flags |= 8;\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    if (!ctx) {\n      warn$1(\n        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`\n      );\n    }\n    return ctx;\n  }\n};\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    shared.extend({}, options, { flush: \"post\" }) \n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    shared.extend({}, options, { flush: \"sync\" }) \n  );\n}\nfunction watch(source, cb, options) {\n  if (!shared.isFunction(cb)) {\n    warn$1(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only supports \\`watch(source, cb, options?) signature.`\n    );\n  }\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, options = shared.EMPTY_OBJ) {\n  const { immediate, deep, flush, once } = options;\n  if (!cb) {\n    if (immediate !== void 0) {\n      warn$1(\n        `watch() \"immediate\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (deep !== void 0) {\n      warn$1(\n        `watch() \"deep\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (once !== void 0) {\n      warn$1(\n        `watch() \"once\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n  }\n  const baseWatchOptions = shared.extend({}, options);\n  baseWatchOptions.onWarn = warn$1;\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else if (!cb || immediate) {\n      baseWatchOptions.once = true;\n    } else {\n      return {\n        stop: shared.NOOP,\n        resume: shared.NOOP,\n        pause: shared.NOOP\n      };\n    }\n  }\n  const instance = currentInstance;\n  baseWatchOptions.call = (fn, type, args) => callWithAsyncErrorHandling(fn, instance, type, args);\n  let isPre = false;\n  if (flush === \"post\") {\n    baseWatchOptions.scheduler = (job) => {\n      queuePostRenderEffect(job, instance && instance.suspense);\n    };\n  } else if (flush !== \"sync\") {\n    isPre = true;\n    baseWatchOptions.scheduler = (job, isFirstRun) => {\n      if (isFirstRun) {\n        job();\n      } else {\n        queueJob(job);\n      }\n    };\n  }\n  baseWatchOptions.augmentJob = (job) => {\n    if (cb) {\n      job.flags |= 4;\n    }\n    if (isPre) {\n      job.flags |= 2;\n      if (instance) {\n        job.id = instance.uid;\n        job.i = instance;\n      }\n    }\n  };\n  const watchHandle = reactivity.watch(source, cb, baseWatchOptions);\n  if (ssrCleanup) ssrCleanup.push(watchHandle);\n  return watchHandle;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = shared.isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (shared.isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const reset = setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  reset();\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\n\nfunction useModel(props, name, options = shared.EMPTY_OBJ) {\n  const i = getCurrentInstance();\n  if (!i) {\n    warn$1(`useModel() called without active instance.`);\n    return reactivity.ref();\n  }\n  if (!i.propsOptions[0][name]) {\n    warn$1(`useModel() called with prop \"${name}\" which is not declared.`);\n    return reactivity.ref();\n  }\n  const camelizedName = shared.camelize(name);\n  const hyphenatedName = shared.hyphenate(name);\n  const modifiers = getModelModifiers(props, name);\n  const res = reactivity.customRef((track, trigger) => {\n    let localValue;\n    let prevSetValue = shared.EMPTY_OBJ;\n    let prevEmittedValue;\n    watchSyncEffect(() => {\n      const propValue = props[name];\n      if (shared.hasChanged(localValue, propValue)) {\n        localValue = propValue;\n        trigger();\n      }\n    });\n    return {\n      get() {\n        track();\n        return options.get ? options.get(localValue) : localValue;\n      },\n      set(value) {\n        const emittedValue = options.set ? options.set(value) : value;\n        if (!shared.hasChanged(emittedValue, localValue) && !(prevSetValue !== shared.EMPTY_OBJ && shared.hasChanged(value, prevSetValue))) {\n          return;\n        }\n        const rawProps = i.vnode.props;\n        if (!(rawProps && // check if parent has passed v-model\n        (name in rawProps || camelizedName in rawProps || hyphenatedName in rawProps) && (`onUpdate:${name}` in rawProps || `onUpdate:${camelizedName}` in rawProps || `onUpdate:${hyphenatedName}` in rawProps))) {\n          localValue = value;\n          trigger();\n        }\n        i.emit(`update:${name}`, emittedValue);\n        if (shared.hasChanged(value, emittedValue) && shared.hasChanged(value, prevSetValue) && !shared.hasChanged(emittedValue, prevEmittedValue)) {\n          trigger();\n        }\n        prevSetValue = value;\n        prevEmittedValue = emittedValue;\n      }\n    };\n  });\n  res[Symbol.iterator] = () => {\n    let i2 = 0;\n    return {\n      next() {\n        if (i2 < 2) {\n          return { value: i2++ ? modifiers || shared.EMPTY_OBJ : res, done: false };\n        } else {\n          return { done: true };\n        }\n      }\n    };\n  };\n  return res;\n}\nconst getModelModifiers = (props, modelName) => {\n  return modelName === \"modelValue\" || modelName === \"model-value\" ? props.modelModifiers : props[`${modelName}Modifiers`] || props[`${shared.camelize(modelName)}Modifiers`] || props[`${shared.hyphenate(modelName)}Modifiers`];\n};\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted) return;\n  const props = instance.vnode.props || shared.EMPTY_OBJ;\n  {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && true) {\n        if (!propsOptions || !(shared.toHandlerKey(shared.camelize(event)) in propsOptions)) {\n          warn$1(\n            `Component emitted event \"${event}\" but it is neither declared in the emits option nor as an \"${shared.toHandlerKey(shared.camelize(event))}\" prop.`\n          );\n        }\n      } else {\n        const validator = emitsOptions[event];\n        if (shared.isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n          if (!isValid) {\n            warn$1(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            );\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modifiers = isModelListener && getModelModifiers(props, event.slice(7));\n  if (modifiers) {\n    if (modifiers.trim) {\n      args = rawArgs.map((a) => shared.isString(a) ? a.trim() : a);\n    }\n    if (modifiers.number) {\n      args = rawArgs.map(shared.looseToNumber);\n    }\n  }\n  {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  {\n    const lowerCaseEvent = event.toLowerCase();\n    if (lowerCaseEvent !== event && props[shared.toHandlerKey(lowerCaseEvent)]) {\n      warn$1(\n        `Event \"${lowerCaseEvent}\" is emitted in component ${formatComponentName(\n          instance,\n          instance.type\n        )} but the handler is registered for \"${event}\". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use \"${shared.hyphenate(\n          event\n        )}\" instead of \"${event}\".`\n      );\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = shared.toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = shared.toHandlerKey(shared.camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = shared.toHandlerKey(shared.hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (!shared.isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        shared.extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (shared.isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (shared.isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    shared.extend(normalized, raw);\n  }\n  if (shared.isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !shared.isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) || shared.hasOwn(options, shared.hyphenate(key)) || shared.hasOwn(options, key);\n}\n\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    props,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  const prev = setCurrentRenderingInstance(instance);\n  let result;\n  let fallthroughAttrs;\n  {\n    accessedAttrs = false;\n  }\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      const thisProxy = setupState.__isScriptSetup ? new Proxy(proxyToUse, {\n        get(target, key, receiver) {\n          warn$1(\n            `Property '${String(\n              key\n            )}' was accessed via 'this'. Avoid using 'this' in templates.`\n          );\n          return Reflect.get(target, key, receiver);\n        }\n      }) : proxyToUse;\n      result = normalizeVNode(\n        render.call(\n          thisProxy,\n          proxyToUse,\n          renderCache,\n          true ? reactivity.shallowReadonly(props) : props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (attrs === props) {\n        markAttrsAccessed();\n      }\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          true ? reactivity.shallowReadonly(props) : props,\n          true ? {\n            get attrs() {\n              markAttrsAccessed();\n              return reactivity.shallowReadonly(attrs);\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          true ? reactivity.shallowReadonly(props) : props,\n          null\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  let setRoot = void 0;\n  if (result.patchFlag > 0 && result.patchFlag & 2048) {\n    [root, setRoot] = getChildRoot(result);\n  }\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(shared.isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs, false, true);\n      } else if (!accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n          if (shared.isOn(key)) {\n            if (!shared.isModelListener(key)) {\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n        if (extraAttrs.length) {\n          warn$1(\n            `Extraneous non-props attributes (${extraAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`\n          );\n        }\n        if (eventAttrs.length) {\n          warn$1(\n            `Extraneous non-emits event listeners (${eventAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the \"emits\" option.`\n          );\n        }\n      }\n    }\n  }\n  if (vnode.dirs) {\n    if (!isElementRoot(root)) {\n      warn$1(\n        `Runtime directive used on component with non-element root node. The directives will not function as intended.`\n      );\n    }\n    root = cloneVNode(root, null, false, true);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    if (!isElementRoot(root)) {\n      warn$1(\n        `Component inside <Transition> renders non-element root node that cannot be animated.`\n      );\n    }\n    setTransitionHooks(root, vnode.transition);\n  }\n  if (setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getChildRoot = (vnode) => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren, false);\n  if (!childRoot) {\n    return [vnode, void 0];\n  } else if (childRoot.patchFlag > 0 && childRoot.patchFlag & 2048) {\n    return getChildRoot(childRoot);\n  }\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n  const setRoot = (updatedRoot) => {\n    rawChildren[index] = updatedRoot;\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n  return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children, recurse = true) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n          if (recurse && singleRoot.patchFlag > 0 && singleRoot.patchFlag & 2048) {\n            return filterSingleRoot(singleRoot.children);\n          }\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || shared.isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst isElementRoot = (vnode) => {\n  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if ((prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  }\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent) {\n    const root = parent.subTree;\n    if (root.suspense && root.suspense.activeBranch === vnode) {\n      root.el = vnode.el;\n    }\n    if (root === vnode) {\n      (vnode = parent.vnode).el = el;\n      parent = parent.parent;\n    } else {\n      break;\n    }\n  }\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nlet suspenseId = 0;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      if (parentSuspense && parentSuspense.deps > 0 && !n1.suspense.isInFallback) {\n        n2.suspense = n1.suspense;\n        n2.suspense.vnode = n2;\n        n2.el = n1.el;\n        return;\n      }\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (shared.isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    namespace,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      namespace,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, namespace, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        if (!isHydrating) {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      }\n    } else {\n      suspense.pendingId = suspenseId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      if (newBranch.shapeFlag & 512) {\n        suspense.pendingId = newBranch.component.suspenseId;\n      } else {\n        suspense.pendingId = suspenseId++;\n      }\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  if (!hasWarned) {\n    hasWarned = true;\n    console[console.info ? \"info\" : \"log\"](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    );\n  }\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense && parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? shared.toNumber(vnode.props.timeout) : void 0;\n  {\n    assertNumber(timeout, `Suspense timeout`);\n  }\n  const initialAnchor = anchor;\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    namespace,\n    container,\n    hiddenContainer,\n    deps: 0,\n    pendingId: suspenseId++,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: !isHydrating,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          );\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          );\n        }\n      }\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      let delayEnter = false;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(\n                pendingBranch,\n                container2,\n                anchor === initialAnchor ? next(activeBranch) : anchor,\n                0\n              );\n              queuePostFlushCb(effects);\n            }\n          };\n        }\n        if (activeBranch) {\n          if (parentNode(activeBranch.el) === container2) {\n            anchor = next(activeBranch);\n          }\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor && !delayEnter) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, namespace: namespace2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          namespace2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect, optimized2) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        {\n          pushWarningContext(vnode2);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          namespace,\n          optimized2\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        {\n          popWarningContext();\n        }\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    // eslint-disable-next-line no-restricted-globals\n    document.createElement(\"div\"),\n    null,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (shared.isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (shared.isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    if (!singleChild && s.filter((child) => child !== NULL_DYNAMIC_COMPONENT).length > 0) {\n      warn$1(`<Suspense> slots expect a single root node.`);\n    }\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (shared.isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  let el = branch.el;\n  while (!el && branch.component) {\n    branch = branch.component.subTree;\n    el = branch.el;\n  }\n  vnode.el = el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  const suspensible = vnode.props && vnode.props.suspensible;\n  return suspensible != null && suspensible !== false;\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n  if (value < 0 && currentBlock) {\n    currentBlock.hasOnce = true;\n  }\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  if (n2.shapeFlag & 6 && n1.component) {\n    const dirtyInstances = hmrDirtyComponents.get(n2.type);\n    if (dirtyInstances && dirtyInstances.has(n1.component)) {\n      n1.shapeFlag &= ~256;\n      n2.shapeFlag &= ~512;\n      return false;\n    }\n  }\n  return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(\n    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args\n  );\n};\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetStart: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= shared.isString(children) ? 8 : 16;\n  }\n  if (vnode.key !== vnode.key) {\n    warn$1(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = createVNodeWithArgsTransform ;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!type) {\n      warn$1(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag = -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !shared.isString(klass)) {\n      props.class = shared.normalizeClass(klass);\n    }\n    if (shared.isObject(style)) {\n      if (reactivity.isProxy(style) && !shared.isArray(style)) {\n        style = shared.extend({}, style);\n      }\n      props.style = shared.normalizeStyle(style);\n    }\n  }\n  const shapeFlag = shared.isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : shared.isObject(type) ? 4 : shared.isFunction(type) ? 2 : 0;\n  if (shapeFlag & 4 && reactivity.isProxy(type)) {\n    type = reactivity.toRaw(type);\n    warn$1(\n      `Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with \\`markRaw\\` or using \\`shallowRef\\` instead of \\`ref\\`.`,\n      `\nComponent that was made reactive: `,\n      type\n    );\n  }\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props) return null;\n  return reactivity.isProxy(props) || isInternalObject(props) ? shared.extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {\n  const { props, ref, patchFlag, children, transition } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? shared.isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: patchFlag === -1 && shared.isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetStart: vnode.targetStart,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  if (transition && cloneTransition) {\n    setTransitionHooks(\n      cloned,\n      transition.clone(cloned)\n    );\n  }\n  return cloned;\n}\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n  if (shared.isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (shared.isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (shared.isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !isInternalObject(children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (shared.isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = shared.normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\n      } else if (shared.isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(shared.isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    job: null,\n    scope: new reactivity.EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    ids: parent ? parent.ids : [\"\", 0, 0],\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: shared.EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: shared.EMPTY_OBJ,\n    data: shared.EMPTY_OBJ,\n    props: shared.EMPTY_OBJ,\n    attrs: shared.EMPTY_OBJ,\n    slots: shared.EMPTY_OBJ,\n    refs: shared.EMPTY_OBJ,\n    setupState: shared.EMPTY_OBJ,\n    setupContext: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  {\n    instance.ctx = createDevRenderContext(instance);\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet setInSSRSetupState;\n{\n  const g = shared.getGlobalThis();\n  const registerGlobalSetter = (key, setter) => {\n    let setters;\n    if (!(setters = g[key])) setters = g[key] = [];\n    setters.push(setter);\n    return (v) => {\n      if (setters.length > 1) setters.forEach((set) => set(v));\n      else setters[0](v);\n    };\n  };\n  internalSetCurrentInstance = registerGlobalSetter(\n    `__VUE_INSTANCE_SETTERS__`,\n    (v) => currentInstance = v\n  );\n  setInSSRSetupState = registerGlobalSetter(\n    `__VUE_SSR_SETTERS__`,\n    (v) => isInSSRComponentSetup = v\n  );\n}\nconst setCurrentInstance = (instance) => {\n  const prev = currentInstance;\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n  return () => {\n    instance.scope.off();\n    internalSetCurrentInstance(prev);\n  };\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nconst isBuiltInTag = /* @__PURE__ */ shared.makeMap(\"slot,component\");\nfunction validateComponentName(name, { isNativeTag }) {\n  if (isBuiltInTag(name) || isNativeTag(name)) {\n    warn$1(\n      \"Do not use built-in or reserved HTML elements as component id: \" + name\n    );\n  }\n}\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false, optimized = false) {\n  isSSR && setInSSRSetupState(isSSR);\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children, optimized);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isSSR && setInSSRSetupState(false);\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n  const Component = instance.type;\n  {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn$1(\n        `\"compilerOptions\" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`\n      );\n    }\n  }\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\n  {\n    exposePropsOnRenderContext(instance);\n  }\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    const reset = setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [\n        reactivity.shallowReadonly(instance.props) ,\n        setupContext\n      ]\n    );\n    reactivity.resetTracking();\n    reset();\n    if (shared.isPromise(setupResult)) {\n      if (!isAsyncWrapper(instance)) markAsyncBoundary(instance);\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n        if (!instance.suspense) {\n          const name = (_a = Component.name) != null ? _a : \"Anonymous\";\n          warn$1(\n            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`\n          );\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (shared.isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (shared.isObject(setupResult)) {\n    if (isVNode(setupResult)) {\n      warn$1(\n        `setup() should not return VNodes directly - return a render function instead.`\n      );\n    }\n    {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = reactivity.proxyRefs(setupResult);\n    {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (setupResult !== void 0) {\n    warn$1(\n      `setup() should return an object. Received: ${setupResult === null ? \"null\" : typeof setupResult}`\n    );\n  }\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        {\n          startMeasure(instance, `compile`);\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = shared.extend(\n          shared.extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n        {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n    instance.render = Component.render || shared.NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  {\n    const reset = setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    try {\n      applyOptions(instance);\n    } finally {\n      reactivity.resetTracking();\n      reset();\n    }\n  }\n  if (!Component.render && instance.render === shared.NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      warn$1(\n        `Component provided template option but runtime compilation is not supported in this build of Vue.` + (``)\n      );\n    } else {\n      warn$1(`Component is missing template or render function: `, Component);\n    }\n  }\n}\nconst attrsProxyHandlers = {\n  get(target, key) {\n    markAttrsAccessed();\n    reactivity.track(target, \"get\", \"\");\n    return target[key];\n  },\n  set() {\n    warn$1(`setupContext.attrs is readonly.`);\n    return false;\n  },\n  deleteProperty() {\n    warn$1(`setupContext.attrs is readonly.`);\n    return false;\n  }\n} ;\nfunction getSlotsProxy(instance) {\n  return new Proxy(instance.slots, {\n    get(target, key) {\n      reactivity.track(instance, \"get\", \"$slots\");\n      return target[key];\n    }\n  });\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    {\n      if (instance.exposed) {\n        warn$1(`expose() should be called only once per setup().`);\n      }\n      if (exposed != null) {\n        let exposedType = typeof exposed;\n        if (exposedType === \"object\") {\n          if (shared.isArray(exposed)) {\n            exposedType = \"array\";\n          } else if (reactivity.isRef(exposed)) {\n            exposedType = \"ref\";\n          }\n        }\n        if (exposedType !== \"object\") {\n          warn$1(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          );\n        }\n      }\n    }\n    instance.exposed = exposed || {};\n  };\n  {\n    let attrsProxy;\n    let slotsProxy;\n    return Object.freeze({\n      get attrs() {\n        return attrsProxy || (attrsProxy = new Proxy(instance.attrs, attrsProxyHandlers));\n      },\n      get slots() {\n        return slotsProxy || (slotsProxy = getSlotsProxy(instance));\n      },\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n      expose\n    });\n  }\n}\nfunction getComponentPublicInstance(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  } else {\n    return instance.proxy;\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return shared.isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return shared.isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  const c = reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\n  {\n    const i = getCurrentInstance();\n    if (i && i.appContext.config.warnRecursiveComputed) {\n      c._warnRecursive = true;\n    }\n  }\n  return c;\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nfunction initCustomFormatter() {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  const vueStyle = { style: \"color:#3ba776\" };\n  const numberStyle = { style: \"color:#1677ff\" };\n  const stringStyle = { style: \"color:#f5222d\" };\n  const keywordStyle = { style: \"color:#eb2f96\" };\n  const formatter = {\n    __vue_custom_formatter: true,\n    header(obj) {\n      if (!shared.isObject(obj)) {\n        return null;\n      }\n      if (obj.__isVue) {\n        return [\"div\", vueStyle, `VueInstance`];\n      } else if (reactivity.isRef(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, genRefFlag(obj)],\n          \"<\",\n          // avoid debugger accessing value affecting behavior\n          formatValue(\"_value\" in obj ? obj._value : obj),\n          `>`\n        ];\n      } else if (reactivity.isReactive(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, reactivity.isShallow(obj) ? \"ShallowReactive\" : \"Reactive\"],\n          \"<\",\n          formatValue(obj),\n          `>${reactivity.isReadonly(obj) ? ` (readonly)` : ``}`\n        ];\n      } else if (reactivity.isReadonly(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, reactivity.isShallow(obj) ? \"ShallowReadonly\" : \"Readonly\"],\n          \"<\",\n          formatValue(obj),\n          \">\"\n        ];\n      }\n      return null;\n    },\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return [\n          \"div\",\n          {},\n          ...formatInstance(obj.$)\n        ];\n      }\n    }\n  };\n  function formatInstance(instance) {\n    const blocks = [];\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock(\"props\", reactivity.toRaw(instance.props)));\n    }\n    if (instance.setupState !== shared.EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"setup\", instance.setupState));\n    }\n    if (instance.data !== shared.EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"data\", reactivity.toRaw(instance.data)));\n    }\n    const computed = extractKeys(instance, \"computed\");\n    if (computed) {\n      blocks.push(createInstanceBlock(\"computed\", computed));\n    }\n    const injected = extractKeys(instance, \"inject\");\n    if (injected) {\n      blocks.push(createInstanceBlock(\"injected\", injected));\n    }\n    blocks.push([\n      \"div\",\n      {},\n      [\n        \"span\",\n        {\n          style: keywordStyle.style + \";opacity:0.66\"\n        },\n        \"$ (internal): \"\n      ],\n      [\"object\", { object: instance }]\n    ]);\n    return blocks;\n  }\n  function createInstanceBlock(type, target) {\n    target = shared.extend({}, target);\n    if (!Object.keys(target).length) {\n      return [\"span\", {}];\n    }\n    return [\n      \"div\",\n      { style: \"line-height:1.25em;margin-bottom:0.6em\" },\n      [\n        \"div\",\n        {\n          style: \"color:#476582\"\n        },\n        type\n      ],\n      [\n        \"div\",\n        {\n          style: \"padding-left:1.25em\"\n        },\n        ...Object.keys(target).map((key) => {\n          return [\n            \"div\",\n            {},\n            [\"span\", keywordStyle, key + \": \"],\n            formatValue(target[key], false)\n          ];\n        })\n      ]\n    ];\n  }\n  function formatValue(v, asRaw = true) {\n    if (typeof v === \"number\") {\n      return [\"span\", numberStyle, v];\n    } else if (typeof v === \"string\") {\n      return [\"span\", stringStyle, JSON.stringify(v)];\n    } else if (typeof v === \"boolean\") {\n      return [\"span\", keywordStyle, v];\n    } else if (shared.isObject(v)) {\n      return [\"object\", { object: asRaw ? reactivity.toRaw(v) : v }];\n    } else {\n      return [\"span\", stringStyle, String(v)];\n    }\n  }\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n    if (shared.isFunction(Comp)) {\n      return;\n    }\n    const extracted = {};\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n    return extracted;\n  }\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n    if (shared.isArray(opts) && opts.includes(key) || shared.isObject(opts) && key in opts) {\n      return true;\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n    if (Comp.mixins && Comp.mixins.some((m) => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n  function genRefFlag(v) {\n    if (reactivity.isShallow(v)) {\n      return `ShallowRef`;\n    }\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n    return `Ref`;\n  }\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  ret.cacheIndex = index;\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (shared.hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.5.3\";\nconst warn = warn$1 ;\nconst ErrorTypeStrings = ErrorTypeStrings$1 ;\nconst devtools = devtools$1 ;\nconst setDevtoolsHook = setDevtoolsHook$1 ;\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode,\n  getComponentPublicInstance,\n  ensureValidVNode,\n  pushWarningContext,\n  popWarningContext\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\nconst DeprecationTypes = null;\n\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.TrackOpTypes = reactivity.TrackOpTypes;\nexports.TriggerOpTypes = reactivity.TriggerOpTypes;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.getCurrentWatcher = reactivity.getCurrentWatcher;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.onWatcherCleanup = reactivity.onWatcherCleanup;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.toValue = reactivity.toValue;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.BaseTransitionPropsValidators = BaseTransitionPropsValidators;\nexports.Comment = Comment;\nexports.DeprecationTypes = DeprecationTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.ErrorTypeStrings = ErrorTypeStrings;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.assertNumber = assertNumber;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineModel = defineModel;\nexports.defineOptions = defineOptions;\nexports.defineProps = defineProps;\nexports.defineSlots = defineSlots;\nexports.devtools = devtools;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.hasInjectionContext = hasInjectionContext;\nexports.hydrateOnIdle = hydrateOnIdle;\nexports.hydrateOnInteraction = hydrateOnInteraction;\nexports.hydrateOnMediaQuery = hydrateOnMediaQuery;\nexports.hydrateOnVisible = hydrateOnVisible;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeModels = mergeModels;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useId = useId;\nexports.useModel = useModel;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTemplateRef = useTemplateRef;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-core.cjs.js')\n}\n","/**\n* @vue/runtime-dom v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar runtimeCore = require('@vue/runtime-core');\nvar shared = require('@vue/shared');\n\nlet policy = void 0;\nconst tt = typeof window !== \"undefined\" && window.trustedTypes;\nif (tt) {\n  try {\n    policy = /* @__PURE__ */ tt.createPolicy(\"vue\", {\n      createHTML: (val) => val\n    });\n  } catch (e) {\n  }\n}\nconst unsafeToTrustedHTML = policy ? (val) => policy.createHTML(val) : (val) => val;\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst mathmlNS = \"http://www.w3.org/1998/Math/MathML\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, namespace, is, props) => {\n    const el = namespace === \"svg\" ? doc.createElementNS(svgNS, tag) : namespace === \"mathml\" ? doc.createElementNS(mathmlNS, tag) : is ? doc.createElement(tag, { is }) : doc.createElement(tag);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, namespace, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling)) break;\n      }\n    } else {\n      templateContainer.innerHTML = unsafeToTrustedHTML(\n        namespace === \"svg\" ? `<svg>${content}</svg>` : namespace === \"mathml\" ? `<math>${content}</math>` : content\n      );\n      const template = templateContainer.content;\n      if (namespace === \"svg\" || namespace === \"mathml\") {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst vtcKey = Symbol(\"_vtc\");\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = /* @__PURE__ */ shared.extend(\n  {},\n  runtimeCore.BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst decorate$1 = (t) => {\n  t.displayName = \"Transition\";\n  t.props = TransitionPropsValidators;\n  return t;\n};\nconst Transition = /* @__PURE__ */ decorate$1(\n  (props, { slots }) => runtimeCore.h(runtimeCore.BaseTransition, resolveTransitionProps(props), slots)\n);\nconst callHook = (hook, args = []) => {\n  if (shared.isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? shared.isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return shared.extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      addTransitionClass(el, leaveActiveClass);\n      forceReflow();\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (shared.isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = shared.toNumber(val);\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el[vtcKey] = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  if (s === \"auto\") return 0;\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el[vtcKey];\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nconst vShowOriginalDisplay = Symbol(\"_vod\");\nconst vShowHidden = Symbol(\"_vsh\");\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOriginalDisplay] = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue) return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\nfunction setDisplay(el, value) {\n  el.style.display = value ? el[vShowOriginalDisplay] : \"none\";\n  el[vShowHidden] = !value;\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nconst CSS_VAR_TEXT = Symbol(\"\");\nfunction useCssVars(getter) {\n  return;\n}\n\nconst displayRE = /(^|;)\\s*display\\s*:/;\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = shared.isString(next);\n  let hasControlledDisplay = false;\n  if (next && !isCssString) {\n    if (prev) {\n      if (!shared.isString(prev)) {\n        for (const key in prev) {\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      } else {\n        for (const prevStyle of prev.split(\";\")) {\n          const key = prevStyle.slice(0, prevStyle.indexOf(\":\")).trim();\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      }\n    }\n    for (const key in next) {\n      if (key === \"display\") {\n        hasControlledDisplay = true;\n      }\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    if (isCssString) {\n      if (prev !== next) {\n        const cssVarText = style[CSS_VAR_TEXT];\n        if (cssVarText) {\n          next += \";\" + cssVarText;\n        }\n        style.cssText = next;\n        hasControlledDisplay = displayRE.test(next);\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n  }\n  if (vShowOriginalDisplay in el) {\n    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : \"\";\n    if (el[vShowHidden]) {\n      style.display = \"none\";\n    }\n  }\n}\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (shared.isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null) val = \"\";\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          shared.hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = runtimeCore.camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = shared.capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance, isBoolean = shared.isSpecialBooleanAttr(key)) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (value == null || isBoolean && !shared.includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(\n        key,\n        isBoolean ? \"\" : shared.isSymbol(value) ? String(value) : value\n      );\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, parentComponent) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (value != null) {\n      el[key] = key === \"innerHTML\" ? unsafeToTrustedHTML(value) : value;\n    }\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") || \"\" : el.value;\n    const newValue = value == null ? (\n      // #11647: value should be set as empty string for null and undefined,\n      // but <input type=\"checkbox\"> should be set as 'on'.\n      el.type === \"checkbox\" ? \"on\" : \"\"\n    ) : String(value);\n    if (oldValue !== newValue || !(\"_value\" in el)) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    el._value = value;\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = shared.includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nconst veiKey = Symbol(\"_vei\");\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el[veiKey] || (el[veiKey] = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(\n        nextValue,\n        instance\n      );\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : shared.hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    runtimeCore.callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (shared.isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map(\n      (fn) => (e2) => !e2._stopped && fn && fn(e2)\n    );\n  } else {\n    return value;\n  }\n}\n\nconst isNativeOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter\nkey.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;\nconst patchProp = (el, key, prevValue, nextValue, namespace, parentComponent) => {\n  const isSVG = namespace === \"svg\";\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (shared.isOn(key)) {\n    if (!shared.isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(el, key, nextValue);\n    if (!el.tagName.includes(\"-\") && (key === \"value\" || key === \"checked\" || key === \"selected\")) {\n      patchAttr(el, key, nextValue, isSVG, parentComponent, key !== \"value\");\n    }\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && isNativeOn(key) && shared.isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (key === \"width\" || key === \"height\") {\n    const tag = el.tagName;\n    if (tag === \"IMG\" || tag === \"VIDEO\" || tag === \"CANVAS\" || tag === \"SOURCE\") {\n      return false;\n    }\n  }\n  if (isNativeOn(key) && shared.isString(value)) {\n    return false;\n  }\n  if (key in el) {\n    return true;\n  }\n  if (el._isVueCE && (/[A-Z]/.test(key) || !shared.isString(value))) {\n    return true;\n  }\n  return false;\n}\n\nconst REMOVAL = {};\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineCustomElement(options, extraOptions, _createApp) {\n  const Comp = runtimeCore.defineComponent(options, extraOptions);\n  if (shared.isPlainObject(Comp)) shared.extend(Comp, extraOptions);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, _createApp);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\n/*! #__NO_SIDE_EFFECTS__ */\nconst defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (options, extraOptions) => {\n  return /* @__PURE__ */ defineCustomElement(options, extraOptions, createSSRApp);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, _createApp = createApp) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    this._createApp = _createApp;\n    this._isVueCE = true;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    /**\n     * @internal\n     */\n    this._app = null;\n    /**\n     * @internal\n     */\n    this._nonce = this._def.nonce;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    this._styleChildren = /* @__PURE__ */ new WeakSet();\n    this._ob = null;\n    if (this.shadowRoot && _createApp !== createApp) {\n      this._root = this.shadowRoot;\n    } else {\n      if (_def.shadowRoot !== false) {\n        this.attachShadow({ mode: \"open\" });\n        this._root = this.shadowRoot;\n      } else {\n        this._root = this;\n      }\n    }\n    if (!this._def.__asyncLoader) {\n      this._resolveProps(this._def);\n    }\n  }\n  connectedCallback() {\n    if (!this.shadowRoot) {\n      this._parseSlots();\n    }\n    this._connected = true;\n    let parent = this;\n    while (parent = parent && (parent.parentNode || parent.host)) {\n      if (parent instanceof VueElement) {\n        this._parent = parent;\n        break;\n      }\n    }\n    if (!this._instance) {\n      if (this._resolved) {\n        this._setParent();\n        this._update();\n      } else {\n        if (parent && parent._pendingResolve) {\n          this._pendingResolve = parent._pendingResolve.then(() => {\n            this._pendingResolve = void 0;\n            this._resolveDef();\n          });\n        } else {\n          this._resolveDef();\n        }\n      }\n    }\n  }\n  _setParent(parent = this._parent) {\n    if (parent) {\n      this._instance.parent = parent._instance;\n      this._instance.provides = parent._instance.provides;\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    runtimeCore.nextTick(() => {\n      if (!this._connected) {\n        if (this._ob) {\n          this._ob.disconnect();\n          this._ob = null;\n        }\n        this._app && this._app.unmount();\n        this._instance.ce = void 0;\n        this._app = this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    if (this._pendingResolve) {\n      return;\n    }\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    this._ob = new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    });\n    this._ob.observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      this._resolved = true;\n      this._pendingResolve = void 0;\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !shared.isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = shared.toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[shared.camelize(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      if (this.shadowRoot) {\n        this._applyStyles(styles);\n      }\n      this._mount(def);\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      this._pendingResolve = asyncDef().then(\n        (def) => resolve(this._def = def, true)\n      );\n    } else {\n      resolve(this._def);\n    }\n  }\n  _mount(def) {\n    this._app = this._createApp(def);\n    if (def.configureApp) {\n      def.configureApp(this._app);\n    }\n    this._app._ceVNode = this._createVNode();\n    this._app.mount(this._root);\n    const exposed = this._instance && this._instance.exposed;\n    if (!exposed) return;\n    for (const key in exposed) {\n      if (!shared.hasOwn(this, key)) {\n        Object.defineProperty(this, key, {\n          // unwrap ref to be consistent with public instance behavior\n          get: () => runtimeCore.unref(exposed[key])\n        });\n      }\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = shared.isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key]);\n      }\n    }\n    for (const key of declaredPropKeys.map(shared.camelize)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val, true, true);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    if (key.startsWith(\"data-v-\")) return;\n    const has = this.hasAttribute(key);\n    let value = has ? this.getAttribute(key) : REMOVAL;\n    const camelKey = shared.camelize(key);\n    if (has && this._numberProps && this._numberProps[camelKey]) {\n      value = shared.toNumber(value);\n    }\n    this._setProp(camelKey, value, false, true);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = false) {\n    if (val !== this._props[key]) {\n      if (val === REMOVAL) {\n        delete this._props[key];\n      } else {\n        this._props[key] = val;\n        if (key === \"key\" && this._app) {\n          this._app._ceVNode.key = val;\n        }\n      }\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(shared.hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(shared.hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(shared.hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this._root);\n  }\n  _createVNode() {\n    const baseProps = {};\n    if (!this.shadowRoot) {\n      baseProps.onVnodeMounted = baseProps.onVnodeUpdated = this._renderSlots.bind(this);\n    }\n    const vnode = runtimeCore.createVNode(this._def, shared.extend(baseProps, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.ce = this;\n        instance.isCE = true;\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(\n              event,\n              shared.isPlainObject(args[0]) ? shared.extend({ detail: args }, args[0]) : { detail: args }\n            )\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (shared.hyphenate(event) !== event) {\n            dispatch(shared.hyphenate(event), args);\n          }\n        };\n        this._setParent();\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles, owner) {\n    if (!styles) return;\n    if (owner) {\n      if (owner === this._def || this._styleChildren.has(owner)) {\n        return;\n      }\n      this._styleChildren.add(owner);\n    }\n    const nonce = this._nonce;\n    for (let i = styles.length - 1; i >= 0; i--) {\n      const s = document.createElement(\"style\");\n      if (nonce) s.setAttribute(\"nonce\", nonce);\n      s.textContent = styles[i];\n      this.shadowRoot.prepend(s);\n    }\n  }\n  /**\n   * Only called when shaddowRoot is false\n   */\n  _parseSlots() {\n    const slots = this._slots = {};\n    let n;\n    while (n = this.firstChild) {\n      const slotName = n.nodeType === 1 && n.getAttribute(\"slot\") || \"default\";\n      (slots[slotName] || (slots[slotName] = [])).push(n);\n      this.removeChild(n);\n    }\n  }\n  /**\n   * Only called when shaddowRoot is false\n   */\n  _renderSlots() {\n    const outlets = this.querySelectorAll(\"slot\");\n    const scopeId = this._instance.type.__scopeId;\n    for (let i = 0; i < outlets.length; i++) {\n      const o = outlets[i];\n      const slotName = o.getAttribute(\"name\") || \"default\";\n      const content = this._slots[slotName];\n      const parent = o.parentNode;\n      if (content) {\n        for (const n of content) {\n          if (scopeId && n.nodeType === 1) {\n            const id = scopeId + \"-s\";\n            const walker = document.createTreeWalker(n, 1);\n            n.setAttribute(id, \"\");\n            let child;\n            while (child = walker.nextNode()) {\n              child.setAttribute(id, \"\");\n            }\n          }\n          parent.insertBefore(n, o);\n        }\n      } else {\n        while (o.firstChild) parent.insertBefore(o.firstChild, o);\n      }\n      parent.removeChild(o);\n    }\n  }\n  /**\n   * @internal\n   */\n  _injectChildStyle(comp) {\n    this._applyStyles(comp.styles, comp);\n  }\n  /**\n   * @internal\n   */\n  _removeChildStyle(comp) {\n  }\n}\nfunction useHost(caller) {\n  const instance = runtimeCore.getCurrentInstance();\n  const el = instance && instance.ce;\n  if (el) {\n    return el;\n  }\n  return null;\n}\nfunction useShadowRoot() {\n  const el = useHost();\n  return el && el.shadowRoot;\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = runtimeCore.getCurrentInstance();\n    if (!instance) {\n      return shared.EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      return shared.EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      return shared.EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst moveCbKey = Symbol(\"_moveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nconst decorate = (t) => {\n  delete t.props.mode;\n  return t;\n};\nconst TransitionGroupImpl = /* @__PURE__ */ decorate({\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ shared.extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = runtimeCore.getCurrentInstance();\n    const state = runtimeCore.useTransitionState();\n    let prevChildren;\n    let children;\n    runtimeCore.onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el[moveCbKey] = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el[moveCbKey] = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = runtimeCore.toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || runtimeCore.Fragment;\n      prevChildren = [];\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          if (child.el && child.el instanceof Element) {\n            prevChildren.push(child);\n            runtimeCore.setTransitionHooks(\n              child,\n              runtimeCore.resolveTransitionHooks(\n                child,\n                cssTransitionProps,\n                state,\n                instance\n              )\n            );\n            positionMap.set(\n              child,\n              child.el.getBoundingClientRect()\n            );\n          }\n        }\n      }\n      children = slots.default ? runtimeCore.getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          runtimeCore.setTransitionHooks(\n            child,\n            runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        }\n      }\n      return runtimeCore.createVNode(tag, null, children);\n    };\n  }\n});\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el[moveCbKey]) {\n    el[moveCbKey]();\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return shared.isArray(fn) ? (value) => shared.invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst assignKey = Symbol(\"_assign\");\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing) return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = shared.looseToNumber(domValue);\n      }\n      el[assignKey](domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (el.composing) return;\n    const elValue = (number || el.type === \"number\") && !/^0\\d/.test(el.value) ? shared.looseToNumber(el.value) : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (elValue === newValue) {\n      return;\n    }\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy && value === oldValue) {\n        return;\n      }\n      if (trim && el.value.trim() === newValue) {\n        return;\n      }\n    }\n    el.value = newValue;\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el[assignKey];\n      if (shared.isArray(modelValue)) {\n        const index = shared.looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (shared.isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  let checked;\n  if (shared.isArray(value)) {\n    checked = shared.looseIndexOf(value, vnode.props.value) > -1;\n  } else if (shared.isSet(value)) {\n    checked = value.has(vnode.props.value);\n  } else {\n    checked = shared.looseEqual(value, getCheckboxValue(el, true));\n  }\n  if (el.checked !== checked) {\n    el.checked = checked;\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = shared.looseEqual(value, vnode.props.value);\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el[assignKey](getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = shared.looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = shared.isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? shared.looseToNumber(getValue(o)) : getValue(o)\n      );\n      el[assignKey](\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n      el._assigning = true;\n      runtimeCore.nextTick(() => {\n        el._assigning = false;\n      });\n    });\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value, modifiers: { number } }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  updated(el, { value, modifiers: { number } }) {\n    if (!el._assigning) {\n      setSelected(el, value);\n    }\n  }\n};\nfunction setSelected(el, value, number) {\n  const isMultiple = el.multiple;\n  const isArrayValue = shared.isArray(value);\n  if (isMultiple && !isArrayValue && !shared.isSet(value)) {\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (isArrayValue) {\n        const optionType = typeof optionValue;\n        if (optionType === \"string\" || optionType === \"number\") {\n          option.selected = value.some((v) => String(v) === String(optionValue));\n        } else {\n          option.selected = shared.looseIndexOf(value, optionValue) > -1;\n        }\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else if (shared.looseEqual(getValue(option), value)) {\n      if (el.selectedIndex !== i) el.selectedIndex = i;\n      return;\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && shared.looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (shared.isArray(value)) {\n      if (vnode.props && shared.looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (shared.isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  const cache = fn._withMods || (fn._withMods = {});\n  const cacheKey = modifiers.join(\".\");\n  return cache[cacheKey] || (cache[cacheKey] = (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers)) return;\n    }\n    return fn(event, ...args);\n  });\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  const cache = fn._withKeys || (fn._withKeys = {});\n  const cacheKey = modifiers.join(\".\");\n  return cache[cacheKey] || (cache[cacheKey] = (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = shared.hyphenate(event.key);\n    if (modifiers.some(\n      (k) => k === eventKey || keyNames[k] === eventKey\n    )) {\n      return fn(event);\n    }\n  });\n};\n\nconst rendererOptions = /* @__PURE__ */ shared.extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = runtimeCore.createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : runtimeCore.createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container) return;\n    const component = app._component;\n    if (!shared.isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    if (container.nodeType === 1) {\n      container.textContent = \"\";\n    }\n    const proxy = mount(container, false, resolveRootNamespace(container));\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, resolveRootNamespace(container));\n    }\n  };\n  return app;\n};\nfunction resolveRootNamespace(container) {\n  if (container instanceof SVGElement) {\n    return \"svg\";\n  }\n  if (typeof MathMLElement === \"function\" && container instanceof MathMLElement) {\n    return \"mathml\";\n  }\n}\nfunction normalizeContainer(container) {\n  if (shared.isString(container)) {\n    const res = document.querySelector(container);\n    return res;\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexports.Transition = Transition;\nexports.TransitionGroup = TransitionGroup;\nexports.VueElement = VueElement;\nexports.createApp = createApp;\nexports.createSSRApp = createSSRApp;\nexports.defineCustomElement = defineCustomElement;\nexports.defineSSRCustomElement = defineSSRCustomElement;\nexports.hydrate = hydrate;\nexports.initDirectivesForSSR = initDirectivesForSSR;\nexports.render = render;\nexports.useCssModule = useCssModule;\nexports.useCssVars = useCssVars;\nexports.useHost = useHost;\nexports.useShadowRoot = useShadowRoot;\nexports.vModelCheckbox = vModelCheckbox;\nexports.vModelDynamic = vModelDynamic;\nexports.vModelRadio = vModelRadio;\nexports.vModelSelect = vModelSelect;\nexports.vModelText = vModelText;\nexports.vShow = vShow;\nexports.withKeys = withKeys;\nexports.withModifiers = withModifiers;\nObject.keys(runtimeCore).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeCore[k];\n});\n","/**\n* @vue/runtime-dom v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar runtimeCore = require('@vue/runtime-core');\nvar shared = require('@vue/shared');\n\nlet policy = void 0;\nconst tt = typeof window !== \"undefined\" && window.trustedTypes;\nif (tt) {\n  try {\n    policy = /* @__PURE__ */ tt.createPolicy(\"vue\", {\n      createHTML: (val) => val\n    });\n  } catch (e) {\n    runtimeCore.warn(`Error creating trusted types policy: ${e}`);\n  }\n}\nconst unsafeToTrustedHTML = policy ? (val) => policy.createHTML(val) : (val) => val;\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst mathmlNS = \"http://www.w3.org/1998/Math/MathML\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, namespace, is, props) => {\n    const el = namespace === \"svg\" ? doc.createElementNS(svgNS, tag) : namespace === \"mathml\" ? doc.createElementNS(mathmlNS, tag) : is ? doc.createElement(tag, { is }) : doc.createElement(tag);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, namespace, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling)) break;\n      }\n    } else {\n      templateContainer.innerHTML = unsafeToTrustedHTML(\n        namespace === \"svg\" ? `<svg>${content}</svg>` : namespace === \"mathml\" ? `<math>${content}</math>` : content\n      );\n      const template = templateContainer.content;\n      if (namespace === \"svg\" || namespace === \"mathml\") {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst vtcKey = Symbol(\"_vtc\");\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = /* @__PURE__ */ shared.extend(\n  {},\n  runtimeCore.BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst decorate$1 = (t) => {\n  t.displayName = \"Transition\";\n  t.props = TransitionPropsValidators;\n  return t;\n};\nconst Transition = /* @__PURE__ */ decorate$1(\n  (props, { slots }) => runtimeCore.h(runtimeCore.BaseTransition, resolveTransitionProps(props), slots)\n);\nconst callHook = (hook, args = []) => {\n  if (shared.isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? shared.isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return shared.extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      addTransitionClass(el, leaveActiveClass);\n      forceReflow();\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (shared.isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = shared.toNumber(val);\n  {\n    runtimeCore.assertNumber(res, \"<transition> explicit duration\");\n  }\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el[vtcKey] = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  if (s === \"auto\") return 0;\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el[vtcKey];\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nconst vShowOriginalDisplay = Symbol(\"_vod\");\nconst vShowHidden = Symbol(\"_vsh\");\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOriginalDisplay] = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue) return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\n{\n  vShow.name = \"show\";\n}\nfunction setDisplay(el, value) {\n  el.style.display = value ? el[vShowOriginalDisplay] : \"none\";\n  el[vShowHidden] = !value;\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nconst CSS_VAR_TEXT = Symbol(\"CSS_VAR_TEXT\" );\nfunction useCssVars(getter) {\n  return;\n}\n\nconst displayRE = /(^|;)\\s*display\\s*:/;\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = shared.isString(next);\n  let hasControlledDisplay = false;\n  if (next && !isCssString) {\n    if (prev) {\n      if (!shared.isString(prev)) {\n        for (const key in prev) {\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      } else {\n        for (const prevStyle of prev.split(\";\")) {\n          const key = prevStyle.slice(0, prevStyle.indexOf(\":\")).trim();\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      }\n    }\n    for (const key in next) {\n      if (key === \"display\") {\n        hasControlledDisplay = true;\n      }\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    if (isCssString) {\n      if (prev !== next) {\n        const cssVarText = style[CSS_VAR_TEXT];\n        if (cssVarText) {\n          next += \";\" + cssVarText;\n        }\n        style.cssText = next;\n        hasControlledDisplay = displayRE.test(next);\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n  }\n  if (vShowOriginalDisplay in el) {\n    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : \"\";\n    if (el[vShowHidden]) {\n      style.display = \"none\";\n    }\n  }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (shared.isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null) val = \"\";\n    {\n      if (semicolonRE.test(val)) {\n        runtimeCore.warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        );\n      }\n    }\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          shared.hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = runtimeCore.camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = shared.capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance, isBoolean = shared.isSpecialBooleanAttr(key)) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (value == null || isBoolean && !shared.includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(\n        key,\n        isBoolean ? \"\" : shared.isSymbol(value) ? String(value) : value\n      );\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, parentComponent) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (value != null) {\n      el[key] = key === \"innerHTML\" ? unsafeToTrustedHTML(value) : value;\n    }\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") || \"\" : el.value;\n    const newValue = value == null ? (\n      // #11647: value should be set as empty string for null and undefined,\n      // but <input type=\"checkbox\"> should be set as 'on'.\n      el.type === \"checkbox\" ? \"on\" : \"\"\n    ) : String(value);\n    if (oldValue !== newValue || !(\"_value\" in el)) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    el._value = value;\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = shared.includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (!needRemove) {\n      runtimeCore.warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: value ${value} is invalid.`,\n        e\n      );\n    }\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nconst veiKey = Symbol(\"_vei\");\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el[veiKey] || (el[veiKey] = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = sanitizeEventValue(nextValue, rawName) ;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(\n        sanitizeEventValue(nextValue, rawName) ,\n        instance\n      );\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : shared.hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    runtimeCore.callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction sanitizeEventValue(value, propName) {\n  if (shared.isFunction(value) || shared.isArray(value)) {\n    return value;\n  }\n  runtimeCore.warn(\n    `Wrong type passed as event handler to ${propName} - did you forget @ or : in front of your prop?\nExpected function or array of functions, received type ${typeof value}.`\n  );\n  return shared.NOOP;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (shared.isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map(\n      (fn) => (e2) => !e2._stopped && fn && fn(e2)\n    );\n  } else {\n    return value;\n  }\n}\n\nconst isNativeOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter\nkey.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;\nconst patchProp = (el, key, prevValue, nextValue, namespace, parentComponent) => {\n  const isSVG = namespace === \"svg\";\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (shared.isOn(key)) {\n    if (!shared.isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(el, key, nextValue);\n    if (!el.tagName.includes(\"-\") && (key === \"value\" || key === \"checked\" || key === \"selected\")) {\n      patchAttr(el, key, nextValue, isSVG, parentComponent, key !== \"value\");\n    }\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && isNativeOn(key) && shared.isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (key === \"width\" || key === \"height\") {\n    const tag = el.tagName;\n    if (tag === \"IMG\" || tag === \"VIDEO\" || tag === \"CANVAS\" || tag === \"SOURCE\") {\n      return false;\n    }\n  }\n  if (isNativeOn(key) && shared.isString(value)) {\n    return false;\n  }\n  if (key in el) {\n    return true;\n  }\n  if (el._isVueCE && (/[A-Z]/.test(key) || !shared.isString(value))) {\n    return true;\n  }\n  return false;\n}\n\nconst REMOVAL = {};\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineCustomElement(options, extraOptions, _createApp) {\n  const Comp = runtimeCore.defineComponent(options, extraOptions);\n  if (shared.isPlainObject(Comp)) shared.extend(Comp, extraOptions);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, _createApp);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\n/*! #__NO_SIDE_EFFECTS__ */\nconst defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (options, extraOptions) => {\n  return /* @__PURE__ */ defineCustomElement(options, extraOptions, createSSRApp);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, _createApp = createApp) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    this._createApp = _createApp;\n    this._isVueCE = true;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    /**\n     * @internal\n     */\n    this._app = null;\n    /**\n     * @internal\n     */\n    this._nonce = this._def.nonce;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    this._styleChildren = /* @__PURE__ */ new WeakSet();\n    this._ob = null;\n    if (this.shadowRoot && _createApp !== createApp) {\n      this._root = this.shadowRoot;\n    } else {\n      if (this.shadowRoot) {\n        runtimeCore.warn(\n          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        );\n      }\n      if (_def.shadowRoot !== false) {\n        this.attachShadow({ mode: \"open\" });\n        this._root = this.shadowRoot;\n      } else {\n        this._root = this;\n      }\n    }\n    if (!this._def.__asyncLoader) {\n      this._resolveProps(this._def);\n    }\n  }\n  connectedCallback() {\n    if (!this.shadowRoot) {\n      this._parseSlots();\n    }\n    this._connected = true;\n    let parent = this;\n    while (parent = parent && (parent.parentNode || parent.host)) {\n      if (parent instanceof VueElement) {\n        this._parent = parent;\n        break;\n      }\n    }\n    if (!this._instance) {\n      if (this._resolved) {\n        this._setParent();\n        this._update();\n      } else {\n        if (parent && parent._pendingResolve) {\n          this._pendingResolve = parent._pendingResolve.then(() => {\n            this._pendingResolve = void 0;\n            this._resolveDef();\n          });\n        } else {\n          this._resolveDef();\n        }\n      }\n    }\n  }\n  _setParent(parent = this._parent) {\n    if (parent) {\n      this._instance.parent = parent._instance;\n      this._instance.provides = parent._instance.provides;\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    runtimeCore.nextTick(() => {\n      if (!this._connected) {\n        if (this._ob) {\n          this._ob.disconnect();\n          this._ob = null;\n        }\n        this._app && this._app.unmount();\n        this._instance.ce = void 0;\n        this._app = this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    if (this._pendingResolve) {\n      return;\n    }\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    this._ob = new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    });\n    this._ob.observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      this._resolved = true;\n      this._pendingResolve = void 0;\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !shared.isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = shared.toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[shared.camelize(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      if (this.shadowRoot) {\n        this._applyStyles(styles);\n      } else if (styles) {\n        runtimeCore.warn(\n          \"Custom element style injection is not supported when using shadowRoot: false\"\n        );\n      }\n      this._mount(def);\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      this._pendingResolve = asyncDef().then(\n        (def) => resolve(this._def = def, true)\n      );\n    } else {\n      resolve(this._def);\n    }\n  }\n  _mount(def) {\n    if (!def.name) {\n      def.name = \"VueElement\";\n    }\n    this._app = this._createApp(def);\n    if (def.configureApp) {\n      def.configureApp(this._app);\n    }\n    this._app._ceVNode = this._createVNode();\n    this._app.mount(this._root);\n    const exposed = this._instance && this._instance.exposed;\n    if (!exposed) return;\n    for (const key in exposed) {\n      if (!shared.hasOwn(this, key)) {\n        Object.defineProperty(this, key, {\n          // unwrap ref to be consistent with public instance behavior\n          get: () => runtimeCore.unref(exposed[key])\n        });\n      } else {\n        runtimeCore.warn(`Exposed property \"${key}\" already exists on custom element.`);\n      }\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = shared.isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key]);\n      }\n    }\n    for (const key of declaredPropKeys.map(shared.camelize)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val, true, true);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    if (key.startsWith(\"data-v-\")) return;\n    const has = this.hasAttribute(key);\n    let value = has ? this.getAttribute(key) : REMOVAL;\n    const camelKey = shared.camelize(key);\n    if (has && this._numberProps && this._numberProps[camelKey]) {\n      value = shared.toNumber(value);\n    }\n    this._setProp(camelKey, value, false, true);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = false) {\n    if (val !== this._props[key]) {\n      if (val === REMOVAL) {\n        delete this._props[key];\n      } else {\n        this._props[key] = val;\n        if (key === \"key\" && this._app) {\n          this._app._ceVNode.key = val;\n        }\n      }\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(shared.hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(shared.hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(shared.hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this._root);\n  }\n  _createVNode() {\n    const baseProps = {};\n    if (!this.shadowRoot) {\n      baseProps.onVnodeMounted = baseProps.onVnodeUpdated = this._renderSlots.bind(this);\n    }\n    const vnode = runtimeCore.createVNode(this._def, shared.extend(baseProps, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.ce = this;\n        instance.isCE = true;\n        {\n          instance.ceReload = (newStyles) => {\n            if (this._styles) {\n              this._styles.forEach((s) => this._root.removeChild(s));\n              this._styles.length = 0;\n            }\n            this._applyStyles(newStyles);\n            this._instance = null;\n            this._update();\n          };\n        }\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(\n              event,\n              shared.isPlainObject(args[0]) ? shared.extend({ detail: args }, args[0]) : { detail: args }\n            )\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (shared.hyphenate(event) !== event) {\n            dispatch(shared.hyphenate(event), args);\n          }\n        };\n        this._setParent();\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles, owner) {\n    if (!styles) return;\n    if (owner) {\n      if (owner === this._def || this._styleChildren.has(owner)) {\n        return;\n      }\n      this._styleChildren.add(owner);\n    }\n    const nonce = this._nonce;\n    for (let i = styles.length - 1; i >= 0; i--) {\n      const s = document.createElement(\"style\");\n      if (nonce) s.setAttribute(\"nonce\", nonce);\n      s.textContent = styles[i];\n      this.shadowRoot.prepend(s);\n      {\n        if (owner) {\n          if (owner.__hmrId) {\n            if (!this._childStyles) this._childStyles = /* @__PURE__ */ new Map();\n            let entry = this._childStyles.get(owner.__hmrId);\n            if (!entry) {\n              this._childStyles.set(owner.__hmrId, entry = []);\n            }\n            entry.push(s);\n          }\n        } else {\n          (this._styles || (this._styles = [])).push(s);\n        }\n      }\n    }\n  }\n  /**\n   * Only called when shaddowRoot is false\n   */\n  _parseSlots() {\n    const slots = this._slots = {};\n    let n;\n    while (n = this.firstChild) {\n      const slotName = n.nodeType === 1 && n.getAttribute(\"slot\") || \"default\";\n      (slots[slotName] || (slots[slotName] = [])).push(n);\n      this.removeChild(n);\n    }\n  }\n  /**\n   * Only called when shaddowRoot is false\n   */\n  _renderSlots() {\n    const outlets = this.querySelectorAll(\"slot\");\n    const scopeId = this._instance.type.__scopeId;\n    for (let i = 0; i < outlets.length; i++) {\n      const o = outlets[i];\n      const slotName = o.getAttribute(\"name\") || \"default\";\n      const content = this._slots[slotName];\n      const parent = o.parentNode;\n      if (content) {\n        for (const n of content) {\n          if (scopeId && n.nodeType === 1) {\n            const id = scopeId + \"-s\";\n            const walker = document.createTreeWalker(n, 1);\n            n.setAttribute(id, \"\");\n            let child;\n            while (child = walker.nextNode()) {\n              child.setAttribute(id, \"\");\n            }\n          }\n          parent.insertBefore(n, o);\n        }\n      } else {\n        while (o.firstChild) parent.insertBefore(o.firstChild, o);\n      }\n      parent.removeChild(o);\n    }\n  }\n  /**\n   * @internal\n   */\n  _injectChildStyle(comp) {\n    this._applyStyles(comp.styles, comp);\n  }\n  /**\n   * @internal\n   */\n  _removeChildStyle(comp) {\n    {\n      this._styleChildren.delete(comp);\n      if (this._childStyles && comp.__hmrId) {\n        const oldStyles = this._childStyles.get(comp.__hmrId);\n        if (oldStyles) {\n          oldStyles.forEach((s) => this._root.removeChild(s));\n          oldStyles.length = 0;\n        }\n      }\n    }\n  }\n}\nfunction useHost(caller) {\n  const instance = runtimeCore.getCurrentInstance();\n  const el = instance && instance.ce;\n  if (el) {\n    return el;\n  } else {\n    if (!instance) {\n      runtimeCore.warn(\n        `${caller || \"useHost\"} called without an active component instance.`\n      );\n    } else {\n      runtimeCore.warn(\n        `${caller || \"useHost\"} can only be used in components defined via defineCustomElement.`\n      );\n    }\n  }\n  return null;\n}\nfunction useShadowRoot() {\n  const el = useHost(\"useShadowRoot\") ;\n  return el && el.shadowRoot;\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = runtimeCore.getCurrentInstance();\n    if (!instance) {\n      runtimeCore.warn(`useCssModule must be called inside setup()`);\n      return shared.EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      runtimeCore.warn(`Current instance does not have CSS modules injected.`);\n      return shared.EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      runtimeCore.warn(`Current instance does not have CSS module named \"${name}\".`);\n      return shared.EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst moveCbKey = Symbol(\"_moveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nconst decorate = (t) => {\n  delete t.props.mode;\n  return t;\n};\nconst TransitionGroupImpl = /* @__PURE__ */ decorate({\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ shared.extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = runtimeCore.getCurrentInstance();\n    const state = runtimeCore.useTransitionState();\n    let prevChildren;\n    let children;\n    runtimeCore.onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el[moveCbKey] = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el[moveCbKey] = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = runtimeCore.toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || runtimeCore.Fragment;\n      prevChildren = [];\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          if (child.el && child.el instanceof Element) {\n            prevChildren.push(child);\n            runtimeCore.setTransitionHooks(\n              child,\n              runtimeCore.resolveTransitionHooks(\n                child,\n                cssTransitionProps,\n                state,\n                instance\n              )\n            );\n            positionMap.set(\n              child,\n              child.el.getBoundingClientRect()\n            );\n          }\n        }\n      }\n      children = slots.default ? runtimeCore.getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          runtimeCore.setTransitionHooks(\n            child,\n            runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        } else {\n          runtimeCore.warn(`<TransitionGroup> children must be keyed.`);\n        }\n      }\n      return runtimeCore.createVNode(tag, null, children);\n    };\n  }\n});\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el[moveCbKey]) {\n    el[moveCbKey]();\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return shared.isArray(fn) ? (value) => shared.invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst assignKey = Symbol(\"_assign\");\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing) return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = shared.looseToNumber(domValue);\n      }\n      el[assignKey](domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (el.composing) return;\n    const elValue = (number || el.type === \"number\") && !/^0\\d/.test(el.value) ? shared.looseToNumber(el.value) : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (elValue === newValue) {\n      return;\n    }\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy && value === oldValue) {\n        return;\n      }\n      if (trim && el.value.trim() === newValue) {\n        return;\n      }\n    }\n    el.value = newValue;\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el[assignKey];\n      if (shared.isArray(modelValue)) {\n        const index = shared.looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (shared.isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  let checked;\n  if (shared.isArray(value)) {\n    checked = shared.looseIndexOf(value, vnode.props.value) > -1;\n  } else if (shared.isSet(value)) {\n    checked = value.has(vnode.props.value);\n  } else {\n    checked = shared.looseEqual(value, getCheckboxValue(el, true));\n  }\n  if (el.checked !== checked) {\n    el.checked = checked;\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = shared.looseEqual(value, vnode.props.value);\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el[assignKey](getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = shared.looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = shared.isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? shared.looseToNumber(getValue(o)) : getValue(o)\n      );\n      el[assignKey](\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n      el._assigning = true;\n      runtimeCore.nextTick(() => {\n        el._assigning = false;\n      });\n    });\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value, modifiers: { number } }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  updated(el, { value, modifiers: { number } }) {\n    if (!el._assigning) {\n      setSelected(el, value);\n    }\n  }\n};\nfunction setSelected(el, value, number) {\n  const isMultiple = el.multiple;\n  const isArrayValue = shared.isArray(value);\n  if (isMultiple && !isArrayValue && !shared.isSet(value)) {\n    runtimeCore.warn(\n      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n    );\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (isArrayValue) {\n        const optionType = typeof optionValue;\n        if (optionType === \"string\" || optionType === \"number\") {\n          option.selected = value.some((v) => String(v) === String(optionValue));\n        } else {\n          option.selected = shared.looseIndexOf(value, optionValue) > -1;\n        }\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else if (shared.looseEqual(getValue(option), value)) {\n      if (el.selectedIndex !== i) el.selectedIndex = i;\n      return;\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && shared.looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (shared.isArray(value)) {\n      if (vnode.props && shared.looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (shared.isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  const cache = fn._withMods || (fn._withMods = {});\n  const cacheKey = modifiers.join(\".\");\n  return cache[cacheKey] || (cache[cacheKey] = (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers)) return;\n    }\n    return fn(event, ...args);\n  });\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  const cache = fn._withKeys || (fn._withKeys = {});\n  const cacheKey = modifiers.join(\".\");\n  return cache[cacheKey] || (cache[cacheKey] = (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = shared.hyphenate(event.key);\n    if (modifiers.some(\n      (k) => k === eventKey || keyNames[k] === eventKey\n    )) {\n      return fn(event);\n    }\n  });\n};\n\nconst rendererOptions = /* @__PURE__ */ shared.extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = runtimeCore.createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : runtimeCore.createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container) return;\n    const component = app._component;\n    if (!shared.isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    if (container.nodeType === 1) {\n      container.textContent = \"\";\n    }\n    const proxy = mount(container, false, resolveRootNamespace(container));\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, resolveRootNamespace(container));\n    }\n  };\n  return app;\n};\nfunction resolveRootNamespace(container) {\n  if (container instanceof SVGElement) {\n    return \"svg\";\n  }\n  if (typeof MathMLElement === \"function\" && container instanceof MathMLElement) {\n    return \"mathml\";\n  }\n}\nfunction injectNativeTagCheck(app) {\n  Object.defineProperty(app.config, \"isNativeTag\", {\n    value: (tag) => shared.isHTMLTag(tag) || shared.isSVGTag(tag) || shared.isMathMLTag(tag),\n    writable: false\n  });\n}\nfunction injectCompilerOptionsCheck(app) {\n  if (runtimeCore.isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, \"isCustomElement\", {\n      get() {\n        return isCustomElement;\n      },\n      set() {\n        runtimeCore.warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use \\`compilerOptions.isCustomElement\\` instead.`\n        );\n      }\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka \"full build\"). Since you are using the runtime-only build, \\`compilerOptions\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\n- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;\n    Object.defineProperty(app.config, \"compilerOptions\", {\n      get() {\n        runtimeCore.warn(msg);\n        return compilerOptions;\n      },\n      set() {\n        runtimeCore.warn(msg);\n      }\n    });\n  }\n}\nfunction normalizeContainer(container) {\n  if (shared.isString(container)) {\n    const res = document.querySelector(container);\n    if (!res) {\n      runtimeCore.warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      );\n    }\n    return res;\n  }\n  if (window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === \"closed\") {\n    runtimeCore.warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    );\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexports.Transition = Transition;\nexports.TransitionGroup = TransitionGroup;\nexports.VueElement = VueElement;\nexports.createApp = createApp;\nexports.createSSRApp = createSSRApp;\nexports.defineCustomElement = defineCustomElement;\nexports.defineSSRCustomElement = defineSSRCustomElement;\nexports.hydrate = hydrate;\nexports.initDirectivesForSSR = initDirectivesForSSR;\nexports.render = render;\nexports.useCssModule = useCssModule;\nexports.useCssVars = useCssVars;\nexports.useHost = useHost;\nexports.useShadowRoot = useShadowRoot;\nexports.vModelCheckbox = vModelCheckbox;\nexports.vModelDynamic = vModelDynamic;\nexports.vModelRadio = vModelRadio;\nexports.vModelSelect = vModelSelect;\nexports.vModelText = vModelText;\nexports.vShow = vShow;\nexports.withKeys = withKeys;\nexports.withModifiers = withModifiers;\nObject.keys(runtimeCore).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeCore[k];\n});\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-dom.cjs.js')\n}\n","/**\n* vue v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerDom = require('@vue/compiler-dom');\nvar runtimeDom = require('@vue/runtime-dom');\nvar shared = require('@vue/shared');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    for (var k in e) {\n      n[k] = e[k];\n    }\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar runtimeDom__namespace = /*#__PURE__*/_interopNamespaceDefault(runtimeDom);\n\nconst compileCache = /* @__PURE__ */ new WeakMap();\nfunction getCache(options) {\n  let c = compileCache.get(options != null ? options : shared.EMPTY_OBJ);\n  if (!c) {\n    c = /* @__PURE__ */ Object.create(null);\n    compileCache.set(options != null ? options : shared.EMPTY_OBJ, c);\n  }\n  return c;\n}\nfunction compileToFunction(template, options) {\n  if (!shared.isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML;\n    } else {\n      return shared.NOOP;\n    }\n  }\n  const key = template;\n  const cache = getCache(options);\n  const cached = cache[key];\n  if (cached) {\n    return cached;\n  }\n  if (template[0] === \"#\") {\n    const el = document.querySelector(template);\n    template = el ? el.innerHTML : ``;\n  }\n  const opts = shared.extend(\n    {\n      hoistStatic: true,\n      onError: void 0,\n      onWarn: shared.NOOP\n    },\n    options\n  );\n  if (!opts.isCustomElement && typeof customElements !== \"undefined\") {\n    opts.isCustomElement = (tag) => !!customElements.get(tag);\n  }\n  const { code } = compilerDom.compile(template, opts);\n  const render = new Function(\"Vue\", code)(runtimeDom__namespace);\n  render._rc = true;\n  return cache[key] = render;\n}\nruntimeDom.registerRuntimeCompiler(compileToFunction);\n\nexports.compile = compileToFunction;\nObject.keys(runtimeDom).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeDom[k];\n});\n","/**\n* vue v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerDom = require('@vue/compiler-dom');\nvar runtimeDom = require('@vue/runtime-dom');\nvar shared = require('@vue/shared');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    for (var k in e) {\n      n[k] = e[k];\n    }\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar runtimeDom__namespace = /*#__PURE__*/_interopNamespaceDefault(runtimeDom);\n\nconst compileCache = /* @__PURE__ */ new WeakMap();\nfunction getCache(options) {\n  let c = compileCache.get(options != null ? options : shared.EMPTY_OBJ);\n  if (!c) {\n    c = /* @__PURE__ */ Object.create(null);\n    compileCache.set(options != null ? options : shared.EMPTY_OBJ, c);\n  }\n  return c;\n}\nfunction compileToFunction(template, options) {\n  if (!shared.isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML;\n    } else {\n      runtimeDom.warn(`invalid template option: `, template);\n      return shared.NOOP;\n    }\n  }\n  const key = template;\n  const cache = getCache(options);\n  const cached = cache[key];\n  if (cached) {\n    return cached;\n  }\n  if (template[0] === \"#\") {\n    const el = document.querySelector(template);\n    if (!el) {\n      runtimeDom.warn(`Template element not found or is empty: ${template}`);\n    }\n    template = el ? el.innerHTML : ``;\n  }\n  const opts = shared.extend(\n    {\n      hoistStatic: true,\n      onError: onError ,\n      onWarn: (e) => onError(e, true) \n    },\n    options\n  );\n  if (!opts.isCustomElement && typeof customElements !== \"undefined\") {\n    opts.isCustomElement = (tag) => !!customElements.get(tag);\n  }\n  const { code } = compilerDom.compile(template, opts);\n  function onError(err, asWarning = false) {\n    const message = asWarning ? err.message : `Template compilation error: ${err.message}`;\n    const codeFrame = err.loc && shared.generateCodeFrame(\n      template,\n      err.loc.start.offset,\n      err.loc.end.offset\n    );\n    runtimeDom.warn(codeFrame ? `${message}\n${codeFrame}` : message);\n  }\n  const render = new Function(\"Vue\", code)(runtimeDom__namespace);\n  render._rc = true;\n  return cache[key] = render;\n}\nruntimeDom.registerRuntimeCompiler(compileToFunction);\n\nexports.compile = compileToFunction;\nObject.keys(runtimeDom).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeDom[k];\n});\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/vue.cjs.prod.js')\n} else {\n  module.exports = require('./dist/vue.cjs.js')\n}\n","export * from './index.js'\n","import { ref } from 'vue'\nexport default function useBoolean(initValue = false) {\n  const bool = ref(initValue)\n\n  function setBool(value: boolean) {\n    bool.value = value\n  }\n  function setTrue() {\n    setBool(true)\n  }\n  function setFalse() {\n    setBool(false)\n  }\n  function toggle() {\n    setBool(!bool.value)\n  }\n  return {\n    bool,\n    setBool,\n    setTrue,\n    setFalse,\n    toggle\n  }\n}\n\n"],"mappings":"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AE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,IAAG,GAAE,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GA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","names":["hasOwnProperty","hasOwnProperty","_a","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","EntityDecoder","Position","constructor","line","col","index","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","code","ModuleErrors","ImportMetaOutsideModule","message","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","node","type","prefix","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitUsingNotInAsyncContext","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorsBeforeAfterExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeferImportRequiresNamespace","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","DynamicImportPhaseRequiresImportExpressions","phase","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportAttributesUseAssert","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidLhsOptionalChaining","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","map","name","JSON","stringify","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","key","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","SloppyFunctionAnnexB","SourcePhaseImportRequiresDefault","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","target","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationExport","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictModeErrors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","defineHidden","obj","value","Object","defineProperty","enumerable","configurable","toParseErrorConstructor","toMessage","reasonCode","syntaxPlugin","hasMissingPlugin","oldReasonCodes","AccessorCannotDeclareThisParameter","AccessorCannotHaveTypeParameters","ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference","SetAccessorCannotHaveOptionalParameter","SetAccessorCannotHaveRestParameter","SetAccessorCannotHaveReturnType","loc","details","error","SyntaxError","pos","clone","overrides","_overrides$loc","assign","get","set","writable","ParseErrorEnum","argument","Array","isArray","parseErrorTemplates","ParseErrorConstructors","keys","template","_ref","rest","_objectWithoutPropertiesLoose","_excluded","Errors","toUnenumerable","object","toESTreeLocation","estree","superClass","ESTreeParserMixin","parse","file","options","tokens","parseRegExpLiteral","pattern","flags","regex","RegExp","_","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","bigint","String","parseDecimalLiteral","decimal","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","expression","raw","extra","expressionValue","stmt","rawValue","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","params","isValidDirective","_stmt$expression$extr","parenthesized","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","body","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","push","parsePrivateName","getPluginOption","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","id","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","computed","finishNode","nameIsConstructor","parseClassProperty","args","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startLoc","refExpressionErrors","isValidLVal","isUnparenthesizedInAssign","binding","isAssignable","isBinding","toAssignable","isLHS","classScope","usePrivateName","toAssignableObjectExpressionProp","isLast","raise","finishCallExpression","unfinished","optional","callee","source","arguments","hasPlugin","_ref2","attributes","toReferencedArguments","parseExport","decorators","exportStartLoc","state","lastTokStartLoc","exported","specifiers","length","_declaration$decorato","declaration","resetStartLocation","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","isOptionalMemberExpression","hasPropertyAsPrivateName","isObjectMethod","finishNodeAt","endLoc","resetEndLocation","lastTokEndLoc","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","postfix","ExportedTokenType","label","conf","rightAssociative","binop","updateContext","keywords","Map","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_defer","_from","_get","_let","_meta","_of","_sent","_set","_source","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","context","pop","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","i","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","next2","reservedWordLikeSet","canBeReservedWord","Scope","names","firstLexicalName","ScopeHandler","parser","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","ScopeFlag","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","add","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","plugins","pluginName","pluginOptions","actualOptions","plugin","_this$plugins$get","setTrailingComments","comments","trailingComments","undefined","unshift","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","commentsLen","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","splice","trailingNode","commentStart","input","charCodeAt","properties","finalizeRemainingComments","resetPreviousNodeTrailingComments","resetPreviousIdentifierLeadingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","hasNewLine","skipWhiteSpace","skipWhiteSpaceInLine","isWhitespace","State","curLine","lineStart","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","topicContext","maxNumOfResolvableTopics","maxTopicIndex","labels","ct","firstInvalidTemplateEscapePos","strictErrors","tokensLength","v","init","strictMode","sourceType","startLine","startColumn","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","soloAwait","inFSharpPipelineDirectBody","canStartJSXElement","containsEsc","hasTopLevelAwait","curPosition","slice","isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","match","exec","octalStr","octal","parseInt","len","forceLen","n","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","e","Infinity","val","prev","numericSeparatorInEscapeSequence","Number","isNaN","unexpectedNumericSeparator","_isDigit","invalidDigit","indexOf","invalidCodePoint","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","nextTokenInLineStart","nextTokenInLineStartSince","lookaheadInLineCharCode","codePointAtPos","cp","trail","setStrict","forEach","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","annexB","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","lookaheadCh","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","includes","isBigInt","replace","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","keywordTypes","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","oldClassScope","from","declarePrivateName","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","addExtra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","hasErrors","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","range","NodePrototype","prototype","__clone","newNode","clonePlaceholder","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","NodeUtils","startNodeAt","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitialized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","hasTypeImportKind","importKind","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flow","FlowParserMixin","flowPragma","shouldParseTypes","shouldParseEnums","matches","Error","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","this","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","flowParseInterfaceExtends","implements","mixins","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","proto","flowCheckGetterSetterParams","paramCount","_startLoc","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","_node$extra","toAssignableList","trailingCommaLoc","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","left","exprList","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","close","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","checkImportReflection","module","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","isPotentialImportPhase","isExport","applyImportPhase","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","parseVarId","decl","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","_jsx","jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","strictModeChanged","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitialized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","JSXParserMixin","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","entity","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","TypeScriptScope","tsNames","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","isConst","wasConst","unwrapParenthesizedExpression","LValParser","_node$extra3","last","_node$extra2","operator","arg","checkToRestConversion","elt","element","toReferencedListDeep","parseSpread","parseRestBinding","parseBindingList","ParseBindingListFlags","parseObjectLike","closeCharCode","allowEmpty","elts","checkCommaAfterRest","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseBindingProperty","parsePropertyName","_left","checkLVal","checkClashes","hasParenthesizedAncestor","_expression$extra","checkIdentifier","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","child","declareNameFromIdentifier","identifier","allowPattern","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TupleOptionalAfterType","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","tsIsVarianceAnnotations","typescript","TypeScriptParserMixin","tsParseInOutModifiers","tsParseModifiers","bind","allowedModifiers","disallowedModifiers","errorTemplate","tsParseConstModifier","tsParseInOutConstModifiers","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenOnSameLineAndCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","modified","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","expectImportAttributesPlugin","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","signature","returnTokenRequired","paramsKey","returnTypeKey","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedType","tsExpectThenParseType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","elementNode","labeled","isWord","chAfterWord","wordName","typeOrLabel","tsParseNonArrayType","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","parseMaybeUnary","nodeType","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","isTypeOperator","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","maybeDefaultIdentifier","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","startType","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","reScan_lt_gt","tsIsDeclarationStart","override","pp","parameter","isSimpleParameter","tsDisallowOptionalPattern","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","checkKeywords","checkDuplicateExports","importNode","parseMaybeImportPhase","parseImportSpecifiersAndAfter","nodeImportEquals","isAbstractClass","cls","allowMissingInitializer","declarations","isValidAmbientConstInitializer","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","isIdentifier","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","_typeCast","_typeCast2","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldStrict","oldInAbstractClass","maybeTakeDecorators","hasBody","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","leftOfAs","rightOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","kindKey","isPossiblyLiteralEnum","expressions","isUncomputedMemberExpressionChain","isNumber","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","placeholders","PlaceholdersParserMixin","parsePlaceholder","assertNoSpace","finishPlaceholder","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrSloppyAnnexBFunctionDeclaration","stmtPlaceholder","parseBlock","createNewLexicalScope","parseFunctionId","requireId","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","_specifiers","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","v8intrinsic","V8IntrinsicMixin","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","PIPELINE_PROPOSALS","TOPIC_TOKENS","validatePlugins","pluginsMap","decoratorsBeforeExport","allowCallParenthesized","_pluginsMap$get","proposalList","p","tupleSyntaxIsHash","syntaxType","tokenList","moduleAttributesVersionPluginOption","version","RECORD_AND_TUPLE_SYNTAX_TYPES","missingPlugins","mixinPlugins","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowNewTargetOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createImportExpressions","createParenthesizedExpressions","getOptions","opts","_opts$key","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","startIndex","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","requiredParentheses","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","recordAwaitIfAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseImportCall","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","parseFunction","isSource","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","substitutions","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","reservedTest","isAwaitAllowed","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","ParamKind","prodParamToClear","ret","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasInLineFollowingBindingIdentifierOrBrace","startsUsingForOf","startsAwaitUsing","parseModuleItem","ParseStatementFlag","parseStatementListItem","allowLabeledFunction","parseStatement","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithAwaitUsing","starsWithUsingDeclaration","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","ParseFunctionFlag","discriminant","cases","cur","sawDefault","isCase","block","handler","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","maybeContextualKw","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","_ref$specifiers","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAttributes","checkJSONModuleImport","checkNames","isDefault","isFrom","_node$specifiers","_declaration$extra","nodes","surrogate","isJSONModuleImport","singleBindingType","_node$assertions","nonDefaultNamedSpecifier","find","phaseIdentifier","isImportPhase","isPrecedingIdImportPhase","parseImportSourceAndAttributes","maybeParseDefaultImportSpecifier","parseNext","_node$specifiers2","parseImportAttributes","attrs","attrNames","parseModuleAttributes","useWith","importSpecifier","Parser","_options","getParser","ast","moduleError","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginList","global","exports","normalize","sourceFile","comparator","needle","section","isComponent","stack","isReferenced","isComponent","stack","isReferenced","computed","self","hasOwnProperty","shallowReadonly","ref","ref2","get","set","effect","warn","computed","self","hasOwnProperty","shallowReadonly","ref","ref2","get","set","effect","callHook","ref","resolve","h","isFlushing","emit","version","callHook","ref","hasWarned","resolve","h","isFlushing","emit","computed","warn"]}